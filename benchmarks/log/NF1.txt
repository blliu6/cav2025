Mosek can be used normally.
iter:1
0-> accuracy1:0.0, accuracy2:41.4000004529953, accuracy3:0.0, loss:1.1354106664657593
10-> accuracy1:100.0, accuracy2:95.99999785423279, accuracy3:100.0, loss:0.026188496500253677
20-> accuracy1:100.0, accuracy2:98.19999933242798, accuracy3:100.0, loss:0.03981678560376167
30-> accuracy1:100.0, accuracy2:99.40000176429749, accuracy3:100.0, loss:0.005495449528098106
40-> accuracy1:100.0, accuracy2:89.80000019073486, accuracy3:100.0, loss:2.633758068084717
50-> accuracy1:100.0, accuracy2:96.20000123977661, accuracy3:100.0, loss:0.3222843408584595
60-> accuracy1:97.60000109672546, accuracy2:99.40000176429749, accuracy3:95.99999785423279, loss:0.05366789549589157
70-> accuracy1:100.0, accuracy2:98.7999975681305, accuracy3:100.0, loss:0.02085300162434578
80-> accuracy1:100.0, accuracy2:99.40000176429749, accuracy3:100.0, loss:0.008621340617537498
90-> accuracy1:100.0, accuracy2:99.40000176429749, accuracy3:100.0, loss:0.0031668758019804955
B(x) = 12.3027754256794*x1**4 + 5.76047460218755*x1**3*x2 - 15.5049168813397*x1**3 - 4.15930625472276*x1**2*x2**2 - 13.0498774898413*x1**2*x2 + 18.3855276879444*x1**2 + 1.68629722864236*x1*x2**3 + 4.52759229332218*x1*x2**2 + 15.6146414476144*x1*x2 - 13.5882960767259*x1 + 0.30295364009625*x2**4 - 5.49884759286967*x2**3 + 3.06422447413287*x2**2 + 3.96684606147691*x2 + 3.57480186722876
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:2
0-> accuracy1:100.0, accuracy2:82.833331823349, accuracy3:100.0, loss:0.5605127811431885
10-> accuracy1:100.0, accuracy2:82.33333230018616, accuracy3:93.59999895095825, loss:0.18815459311008453
20-> accuracy1:97.79999852180481, accuracy2:82.4999988079071, accuracy3:94.59999799728394, loss:0.5307481288909912
30-> accuracy1:100.0, accuracy2:83.66666436195374, accuracy3:95.80000042915344, loss:0.4107818305492401
40-> accuracy1:100.0, accuracy2:85.83333492279053, accuracy3:87.99999952316284, loss:0.40842321515083313
50-> accuracy1:100.0, accuracy2:78.83333563804626, accuracy3:100.0, loss:12.943553924560547
60-> accuracy1:100.0, accuracy2:81.83333277702332, accuracy3:76.5999972820282, loss:1.0907275676727295
70-> accuracy1:100.0, accuracy2:81.33333325386047, accuracy3:76.5999972820282, loss:1.4127596616744995
80-> accuracy1:100.0, accuracy2:75.99999904632568, accuracy3:89.3999993801117, loss:19.194154739379883
90-> accuracy1:100.0, accuracy2:97.00000286102295, accuracy3:90.39999842643738, loss:1.8158894777297974
B(x) = 28.2590713233762*x1**4 + 89.2604640434555*x1**3*x2 + 52.794148843242*x1**3 + 115.183366286125*x1**2*x2**2 + 5.52495614856414*x1**2*x2 + 60.4059111557869*x1**2 + 35.4750916849516*x1*x2**3 + 71.5541972069165*x1*x2**2 + 59.849372501306*x1*x2 - 171.909338069607*x1 + 10.0843178202068*x2**4 - 20.7033014570965*x2**3 - 17.2829550567313*x2**2 + 85.4862200767836*x2 + 114.661331329304
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Add 100 counterexamples!
iter:3
0-> accuracy1:100.0, accuracy2:83.85714292526245, accuracy3:94.59999799728394, loss:6.422433853149414
10-> accuracy1:100.0, accuracy2:83.57142806053162, accuracy3:76.5999972820282, loss:11.724885940551758
20-> accuracy1:100.0, accuracy2:84.42857265472412, accuracy3:82.99999833106995, loss:8.90003776550293
30-> accuracy1:100.0, accuracy2:79.5714259147644, accuracy3:92.00000166893005, loss:2.977121591567993
40-> accuracy1:100.0, accuracy2:88.57142925262451, accuracy3:56.00000023841858, loss:1.140760898590088
50-> accuracy1:100.0, accuracy2:94.1428542137146, accuracy3:54.79999780654907, loss:0.9808872938156128
60-> accuracy1:100.0, accuracy2:87.00000047683716, accuracy3:68.99999976158142, loss:0.5024678111076355
70-> accuracy1:100.0, accuracy2:75.8571445941925, accuracy3:95.20000219345093, loss:0.3603454530239105
80-> accuracy1:100.0, accuracy2:85.00000238418579, accuracy3:68.4000015258789, loss:0.24155959486961365
90-> accuracy1:100.0, accuracy2:82.14285969734192, accuracy3:76.80000066757202, loss:0.23172485828399658
B(x) = 13.8116553872508*x1**4 + 33.5260102213325*x1**3*x2 - 7.43450557631675*x1**3 + 50.6420128525938*x1**2*x2**2 + 14.5194179700692*x1**2*x2 + 6.7077135587532*x1**2 + 41.9700727173097*x1*x2**3 + 27.6772051068257*x1*x2**2 - 4.28181284940964*x1*x2 - 7.50929214732406*x1 + 13.953060583524*x2**4 + 11.3047965407414*x2**3 - 5.56360415517875*x2**2 - 2.52240176614541*x2 + 1.87923992719171
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Add 100 counterexamples!
iter:4
0-> accuracy1:100.0, accuracy2:74.12499785423279, accuracy3:68.59999895095825, loss:0.5426472425460815
10-> accuracy1:100.0, accuracy2:79.12499904632568, accuracy3:89.3999993801117, loss:0.3212777078151703
20-> accuracy1:100.0, accuracy2:80.62499761581421, accuracy3:83.99999737739563, loss:0.2736397385597229
30-> accuracy1:100.0, accuracy2:82.74999856948853, accuracy3:69.9999988079071, loss:0.2294890582561493
40-> accuracy1:100.0, accuracy2:83.99999737739563, accuracy3:76.5999972820282, loss:0.21496433019638062
50-> accuracy1:100.0, accuracy2:81.49999976158142, accuracy3:78.79999876022339, loss:0.21151860058307648
60-> accuracy1:100.0, accuracy2:82.12500214576721, accuracy3:76.80000066757202, loss:0.20834136009216309
70-> accuracy1:100.0, accuracy2:82.62500166893005, accuracy3:76.99999809265137, loss:0.20605653524398804
80-> accuracy1:100.0, accuracy2:81.99999928474426, accuracy3:77.20000147819519, loss:0.20497247576713562
90-> accuracy1:100.0, accuracy2:82.62500166893005, accuracy3:76.99999809265137, loss:0.20380480587482452
B(x) = 13.742092664127*x1**4 + 41.8963731048857*x1**3*x2 - 0.711379170552375*x1**3 + 65.8399664073308*x1**2*x2**2 + 29.829743102932*x1**2*x2 + 10.2424598693236*x1**2 + 52.867111284211*x1*x2**3 + 41.3941855372574*x1*x2**2 - 1.17463514394935*x1*x2 - 9.6317254732758*x1 + 18.529283429343*x2**4 + 19.3730896827407*x2**3 - 2.47375426113963*x2**2 - 3.52482391945047*x2 + 1.72265105399559
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Add 100 counterexamples!
iter:5
0-> accuracy1:100.0, accuracy2:73.00000190734863, accuracy3:78.20000052452087, loss:0.3588293790817261
10-> accuracy1:100.0, accuracy2:69.33333277702332, accuracy3:46.99999988079071, loss:0.3288024067878723
20-> accuracy1:100.0, accuracy2:72.44444489479065, accuracy3:64.60000276565552, loss:0.31543663144111633
30-> accuracy1:100.0, accuracy2:69.66666579246521, accuracy3:65.79999923706055, loss:0.30890533328056335
40-> accuracy1:100.0, accuracy2:70.99999785423279, accuracy3:63.80000114440918, loss:0.3046128451824188
50-> accuracy1:100.0, accuracy2:70.6666648387909, accuracy3:57.999998331069946, loss:0.3015890121459961
60-> accuracy1:100.0, accuracy2:70.99999785423279, accuracy3:59.60000157356262, loss:0.29825103282928467
70-> accuracy1:100.0, accuracy2:70.99999785423279, accuracy3:55.80000281333923, loss:0.29548385739326477
80-> accuracy1:100.0, accuracy2:70.88888883590698, accuracy3:55.59999942779541, loss:0.2926092743873596
90-> accuracy1:100.0, accuracy2:70.77777981758118, accuracy3:56.199997663497925, loss:0.2897970676422119
B(x) = 17.7204101167049*x1**4 + 64.8442968661778*x1**3*x2 + 1.87455384378918*x1**3 + 111.657671974019*x1**2*x2**2 + 50.5335016241481*x1**2*x2 + 15.4669099174354*x1**2 + 94.4373756686547*x1*x2**3 + 74.7037845550657*x1*x2**2 + 3.13234473175427*x1*x2 - 12.1839778254028*x1 + 31.5229868798203*x2**4 + 33.2039784851426*x2**3 - 1.43934806939677*x2**2 - 5.63255993280383*x2 + 1.26648413128451
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Add 100 counterexamples!
Failed
Elapsed Time: 32.38000854593702
