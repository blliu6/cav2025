{'batch_size': 900, 'lr': np.float64(0.06999999999999999), 'loss_weight_continuous': (1, 1, 1), 'R_b': 0.4, 'margin': 0.4, 'DEG_continuous': [2, 4, 4, 2], 'learning_loops': 100, 'max_iter': 20, 'err': 0.02677454477719443}

Mosek can be used normally.
iter:1
0-> accuracy1:0.0, accuracy2:46.55555486679077, accuracy3:0.0, loss:0.9935684204101562
10-> accuracy1:100.0, accuracy2:95.333331823349, accuracy3:100.0, loss:0.11608964204788208
20-> accuracy1:100.0, accuracy2:97.88888692855835, accuracy3:100.0, loss:0.022213853895664215
30-> accuracy1:100.0, accuracy2:98.22221994400024, accuracy3:100.0, loss:0.008043989539146423
40-> accuracy1:100.0, accuracy2:98.33333492279053, accuracy3:100.0, loss:0.0017885440029203892
50-> accuracy1:100.0, accuracy2:98.55555295944214, accuracy3:100.0, loss:-0.0003571617417037487
60-> accuracy1:100.0, accuracy2:99.11110997200012, accuracy3:100.0, loss:-0.0025623885449022055
70-> accuracy1:100.0, accuracy2:99.2222249507904, accuracy3:100.0, loss:-0.004240355920046568
80-> accuracy1:100.0, accuracy2:99.11110997200012, accuracy3:100.0, loss:-0.004665357992053032
90-> accuracy1:100.0, accuracy2:99.2222249507904, accuracy3:100.0, loss:-0.005052795168012381
B(x) = 2.22262807463284*x1**4 + 8.28106330520664*x1**3*x2 + 0.506468881610592*x1**3 + 11.1358550774703*x1**2*x2**2 + 3.67283480056017*x1**2*x2 + 6.54417248624736*x1**2 + 8.49467697093306*x1*x2**3 + 10.482099153743*x1*x2**2 + 9.31796027384014*x1*x2 - 3.94876927637323*x1 + 2.05681843638465*x2**4 + 3.72453509617169*x2**3 + 7.43469539808673*x2**2 + 4.46531051856029*x2 + 1.34699411198628
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:2
0-> accuracy1:100.0, accuracy2:89.30000066757202, accuracy3:100.0, loss:0.10963137447834015
10-> accuracy1:100.0, accuracy2:91.50000214576721, accuracy3:100.0, loss:0.039010994136333466
20-> accuracy1:100.0, accuracy2:93.50000023841858, accuracy3:100.0, loss:0.37944164872169495
30-> accuracy1:100.0, accuracy2:98.19999933242798, accuracy3:100.0, loss:0.01634284108877182
40-> accuracy1:100.0, accuracy2:99.00000095367432, accuracy3:100.0, loss:0.06298768520355225
50-> accuracy1:85.1111114025116, accuracy2:98.69999885559082, accuracy3:98.00000190734863, loss:1.5261534452438354
60-> accuracy1:82.55555629730225, accuracy2:97.79999852180481, accuracy3:100.0, loss:4.939471244812012
70-> accuracy1:100.0, accuracy2:93.99999976158142, accuracy3:100.0, loss:2.9674618244171143
80-> accuracy1:95.77777981758118, accuracy2:98.50000143051147, accuracy3:100.0, loss:4.769883632659912
90-> accuracy1:100.0, accuracy2:98.69999885559082, accuracy3:100.0, loss:2.536569833755493
B(x) = 32.1901634450946*x1**4 + 221.256225673009*x1**3*x2 - 96.1113153944918*x1**3 + 276.443742355453*x1**2*x2**2 - 790.590926900905*x1**2*x2 + 819.356750912915*x1**2 + 148.6955052359*x1*x2**3 - 439.194053855823*x1*x2**2 + 1274.57472323967*x1*x2 - 676.710674154858*x1 + 34.7183497652035*x2**4 - 53.8959051966141*x2**3 + 288.464782930977*x2**2 - 111.24658320448*x2 - 22.0041917551047
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:3
0-> accuracy1:100.0, accuracy2:90.09090662002563, accuracy3:100.0, loss:12.804332733154297
10-> accuracy1:93.99999976158142, accuracy2:90.27272462844849, accuracy3:100.0, loss:17.68562126159668
20-> accuracy1:90.3333306312561, accuracy2:90.45454263687134, accuracy3:98.11111092567444, loss:5.095176696777344
30-> accuracy1:100.0, accuracy2:90.54545164108276, accuracy3:100.0, loss:5.517146110534668
40-> accuracy1:100.0, accuracy2:87.00000047683716, accuracy3:100.0, loss:3.1400351524353027
50-> accuracy1:100.0, accuracy2:94.09090876579285, accuracy3:100.0, loss:0.9076502919197083
60-> accuracy1:100.0, accuracy2:98.27272891998291, accuracy3:100.0, loss:0.19237753748893738
70-> accuracy1:99.2222249507904, accuracy2:98.54545593261719, accuracy3:98.11111092567444, loss:0.14182376861572266
80-> accuracy1:100.0, accuracy2:99.45454597473145, accuracy3:100.0, loss:0.0684792622923851
90-> accuracy1:100.0, accuracy2:99.72727298736572, accuracy3:100.0, loss:0.04518468677997589
B(x) = 78.4405535632205*x1**4 + 340.794209329954*x1**3*x2 + 196.771337411886*x1**3 + 491.004218733542*x1**2*x2**2 + 379.600441688428*x1**2*x2 + 505.891444694628*x1**2 + 407.288522439707*x1*x2**3 + 742.585850599268*x1*x2**2 + 726.631777835436*x1*x2 - 253.383772497387*x1 + 113.358150705912*x2**4 + 195.270777345353*x2**3 + 277.886518766329*x2**2 + 58.1351448950816*x2 - 53.1540186682823
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:4
0-> accuracy1:100.0, accuracy2:91.41666889190674, accuracy3:100.0, loss:1.854649305343628
10-> accuracy1:99.33333396911621, accuracy2:87.66666650772095, accuracy3:98.11111092567444, loss:1.3322160243988037
20-> accuracy1:98.77777695655823, accuracy2:90.08333086967468, accuracy3:100.0, loss:0.8943454027175903
30-> accuracy1:98.11111092567444, accuracy2:88.83333206176758, accuracy3:100.0, loss:0.698409914970398
40-> accuracy1:97.88888692855835, accuracy2:90.08333086967468, accuracy3:100.0, loss:0.5173368453979492
50-> accuracy1:98.88888597488403, accuracy2:89.99999761581421, accuracy3:98.55555295944214, loss:0.39947497844696045
60-> accuracy1:98.77777695655823, accuracy2:89.58333134651184, accuracy3:100.0, loss:0.3175610601902008
70-> accuracy1:98.22221994400024, accuracy2:91.66666865348816, accuracy3:100.0, loss:0.24487276375293732
80-> accuracy1:98.77777695655823, accuracy2:91.16666913032532, accuracy3:100.0, loss:0.19608446955680847
90-> accuracy1:98.66666793823242, accuracy2:91.41666889190674, accuracy3:100.0, loss:0.15385524928569794
B(x) = 32.6538554043168*x1**4 + 156.707150544762*x1**3*x2 - 7.17864325931204*x1**3 + 282.153292643087*x1**2*x2**2 + 109.533743900152*x1**2*x2 + 163.591013464867*x1**2 + 243.19041675868*x1*x2**3 + 298.352833064212*x1*x2**2 + 286.739720023014*x1*x2 - 45.7866297584029*x1 + 78.2127318792475*x2**4 + 148.02399261448*x2**3 + 128.162521648077*x2**2 - 19.6298882119229*x2 - 3.20298856915851
Add 84 counterexamples!
iter:5
0-> accuracy1:99.00000095367432, accuracy2:86.13707423210144, accuracy3:96.11111283302307, loss:0.25903040170669556
10-> accuracy1:98.88888597488403, accuracy2:82.16511011123657, accuracy3:100.0, loss:0.38237759470939636
20-> accuracy1:96.33333086967468, accuracy2:81.30841255187988, accuracy3:100.0, loss:0.6057952046394348
30-> accuracy1:96.33333086967468, accuracy2:84.112149477005, accuracy3:100.0, loss:0.3725834786891937
40-> accuracy1:97.55555391311646, accuracy2:86.52647733688354, accuracy3:97.88888692855835, loss:0.2871473729610443
50-> accuracy1:97.00000286102295, accuracy2:85.35825610160828, accuracy3:100.0, loss:0.208177387714386
60-> accuracy1:97.88888692855835, accuracy2:85.12461185455322, accuracy3:100.0, loss:0.16702201962471008
70-> accuracy1:97.00000286102295, accuracy2:85.59190034866333, accuracy3:98.66666793823242, loss:0.13752466440200806
80-> accuracy1:98.55555295944214, accuracy2:84.81308221817017, accuracy3:100.0, loss:0.11908576637506485
90-> accuracy1:98.55555295944214, accuracy2:84.65732336044312, accuracy3:100.0, loss:0.10910829901695251
B(x) = 27.8871473005261*x1**4 + 117.980364280261*x1**3*x2 + 15.7551432145072*x1**3 + 208.629986612186*x1**2*x2**2 + 116.882199679209*x1**2*x2 + 62.5886282762913*x1**2 + 184.516301722135*x1*x2**3 + 215.227064642768*x1*x2**2 + 114.139301459063*x1*x2 - 22.6003339778458*x1 + 65.8916689980575*x2**4 + 106.548384964839*x2**3 + 48.2510517413405*x2**2 - 15.2191915646704*x2 - 0.033382109364313
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 75 counterexamples!
iter:6
0-> accuracy1:98.33333492279053, accuracy2:79.98528480529785, accuracy3:100.0, loss:0.14069227874279022
10-> accuracy1:99.33333396911621, accuracy2:79.6909511089325, accuracy3:100.0, loss:0.1305210441350937
20-> accuracy1:99.00000095367432, accuracy2:79.24944758415222, accuracy3:100.0, loss:0.12524601817131042
30-> accuracy1:99.2222249507904, accuracy2:79.175865650177, accuracy3:100.0, loss:0.12167181074619293
40-> accuracy1:98.00000190734863, accuracy2:79.10228371620178, accuracy3:100.0, loss:0.11862799525260925
50-> accuracy1:97.33333587646484, accuracy2:77.48344540596008, accuracy3:100.0, loss:0.1478525996208191
60-> accuracy1:97.00000286102295, accuracy2:79.32302951812744, accuracy3:100.0, loss:0.13017421960830688
70-> accuracy1:97.66666889190674, accuracy2:78.66078019142151, accuracy3:100.0, loss:0.13348430395126343
80-> accuracy1:98.33333492279053, accuracy2:79.02869582176208, accuracy3:100.0, loss:0.1256709098815918
90-> accuracy1:98.00000190734863, accuracy2:78.80794405937195, accuracy3:100.0, loss:0.12143495678901672
B(x) = 17.3006311067896*x1**4 + 72.5116663631772*x1**3*x2 + 6.93551055130728*x1**3 + 129.697035701504*x1**2*x2**2 + 69.0196552659628*x1**2*x2 + 32.3262927194437*x1**2 + 116.394961543549*x1*x2**3 + 130.328452079694*x1*x2**2 + 58.3558579314181*x1*x2 - 10.2856321045307*x1 + 42.1181342075914*x2**4 + 63.8056941601104*x2**3 + 25.2147049044237*x2**2 - 6.69735742682303*x2 - 0.141337109123062
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:7
0-> accuracy1:97.00000286102295, accuracy2:73.33790063858032, accuracy3:100.0, loss:0.8072013258934021
10-> accuracy1:100.0, accuracy2:74.64016675949097, accuracy3:100.0, loss:0.4084566533565521
20-> accuracy1:97.33333587646484, accuracy2:74.29746389389038, accuracy3:100.0, loss:0.4600355327129364
30-> accuracy1:96.66666388511658, accuracy2:74.57162737846375, accuracy3:100.0, loss:0.4898430109024048
40-> accuracy1:99.11110997200012, accuracy2:74.57162737846375, accuracy3:100.0, loss:0.37206920981407166
50-> accuracy1:96.11111283302307, accuracy2:75.59972405433655, accuracy3:99.11110997200012, loss:0.2891719937324524
60-> accuracy1:98.33333492279053, accuracy2:77.17614769935608, accuracy3:99.77777600288391, loss:0.240480437874794
70-> accuracy1:97.66666889190674, accuracy2:78.27278971672058, accuracy3:100.0, loss:0.21086733043193817
80-> accuracy1:98.11111092567444, accuracy2:78.40986847877502, accuracy3:100.0, loss:0.19001372158527374
90-> accuracy1:98.66666793823242, accuracy2:78.3413290977478, accuracy3:100.0, loss:0.17401008307933807
B(x) = 7.07564178030873*x1**4 + 34.4190761435989*x1**3*x2 + 5.37764627316199*x1**3 + 63.3730419939414*x1**2*x2**2 + 14.074479253035*x1**2*x2 + 15.3165943558649*x1**2 + 53.5026813745354*x1*x2**3 + 40.3125086664106*x1*x2**2 + 29.0575757968976*x1*x2 - 11.5212829915697*x1 + 18.0227095746286*x2**4 + 22.3735346782321*x2**3 + 12.2599194584673*x2**2 - 4.3064625405598*x2 - 0.554201977554398
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:8
0-> accuracy1:99.00000095367432, accuracy2:73.31622838973999, accuracy3:100.0, loss:0.20864759385585785
10-> accuracy1:98.44444394111633, accuracy2:73.38037490844727, accuracy3:100.0, loss:0.1925172358751297
20-> accuracy1:98.33333492279053, accuracy2:73.38037490844727, accuracy3:100.0, loss:0.17846053838729858
30-> accuracy1:98.22221994400024, accuracy2:73.31622838973999, accuracy3:100.0, loss:0.16802458465099335
40-> accuracy1:97.55555391311646, accuracy2:73.12379479408264, accuracy3:100.0, loss:0.16012665629386902
50-> accuracy1:98.22221994400024, accuracy2:72.8672206401825, accuracy3:100.0, loss:0.15448272228240967
60-> accuracy1:98.55555295944214, accuracy2:72.8672206401825, accuracy3:100.0, loss:0.15041986107826233
70-> accuracy1:98.55555295944214, accuracy2:72.73893356323242, accuracy3:100.0, loss:0.1478632092475891
80-> accuracy1:98.44444394111633, accuracy2:72.41821885108948, accuracy3:100.0, loss:0.14603525400161743
90-> accuracy1:98.55555295944214, accuracy2:72.16164469718933, accuracy3:100.0, loss:0.14467693865299225
B(x) = 5.4074695516073*x1**4 + 24.5382953481645*x1**3*x2 + 1.22479827903205*x1**3 + 42.9908784006371*x1**2*x2**2 + 13.537294132554*x1**2*x2 + 12.9934346851017*x1**2 + 34.7561583206705*x1*x2**3 + 31.2271731434484*x1*x2**2 + 25.06782460145*x1*x2 - 4.31005666508946*x1 + 11.1912570708656*x2**4 + 16.3643137338396*x2**3 + 11.4911486763825*x2**2 - 1.8532592703362*x2 - 0.177082945860914
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 83 counterexamples!
iter:9
0-> accuracy1:98.88888597488403, accuracy2:68.27040314674377, accuracy3:100.0, loss:0.16603736579418182
10-> accuracy1:98.66666793823242, accuracy2:67.72229075431824, accuracy3:100.0, loss:0.16395655274391174
20-> accuracy1:100.0, accuracy2:67.3568844795227, accuracy3:100.0, loss:0.1628548800945282
30-> accuracy1:100.0, accuracy2:67.1132743358612, accuracy3:100.0, loss:0.1624438762664795
40-> accuracy1:100.0, accuracy2:66.62606596946716, accuracy3:100.0, loss:0.16217169165611267
50-> accuracy1:100.0, accuracy2:66.56516194343567, accuracy3:100.0, loss:0.1619720160961151
60-> accuracy1:100.0, accuracy2:66.50426387786865, accuracy3:100.0, loss:0.16186392307281494
70-> accuracy1:100.0, accuracy2:66.50426387786865, accuracy3:100.0, loss:0.16178299486637115
80-> accuracy1:100.0, accuracy2:66.44335985183716, accuracy3:100.0, loss:0.1617143154144287
90-> accuracy1:100.0, accuracy2:66.44335985183716, accuracy3:100.0, loss:0.1617508977651596
B(x) = 3.68648821179661*x1**4 + 16.2855084117113*x1**3*x2 - 0.583093569649857*x1**3 + 28.0060343192101*x1**2*x2**2 + 8.45153409353077*x1**2*x2 + 10.0122143727701*x1**2 + 22.3473533316324*x1*x2**3 + 21.5862233255291*x1*x2**2 + 18.7268941979522*x1*x2 - 2.72579645323722*x1 + 7.14175636108012*x2**4 + 11.1056403892988*x2**3 + 7.96594981074489*x2**2 - 0.996954231140396*x2 + 0.0537714756137276
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 77 counterexamples!
iter:10
0-> accuracy1:100.0, accuracy2:63.35078477859497, accuracy3:100.0, loss:0.17757293581962585
10-> accuracy1:100.0, accuracy2:63.29261064529419, accuracy3:100.0, loss:0.17754246294498444
20-> accuracy1:100.0, accuracy2:63.29261064529419, accuracy3:100.0, loss:0.1774541288614273
30-> accuracy1:100.0, accuracy2:63.29261064529419, accuracy3:100.0, loss:0.17730285227298737
40-> accuracy1:100.0, accuracy2:63.23443651199341, accuracy3:100.0, loss:0.17706643044948578
50-> accuracy1:100.0, accuracy2:63.23443651199341, accuracy3:100.0, loss:0.1768091470003128
60-> accuracy1:100.0, accuracy2:63.23443651199341, accuracy3:100.0, loss:0.17655421793460846
70-> accuracy1:100.0, accuracy2:63.17626237869263, accuracy3:100.0, loss:0.17624622583389282
80-> accuracy1:100.0, accuracy2:63.11809420585632, accuracy3:100.0, loss:0.17586243152618408
90-> accuracy1:100.0, accuracy2:63.05992007255554, accuracy3:100.0, loss:0.17543058097362518
B(x) = 2.37138284750999*x1**4 + 10.5230647940974*x1**3*x2 - 0.746753190032193*x1**3 + 18.1785714483547*x1**2*x2**2 + 5.43743081619041*x1**2*x2 + 7.39612786719527*x1**2 + 14.6526512006252*x1*x2**3 + 14.9910128642798*x1*x2**2 + 13.6075644073344*x1*x2 - 2.13193610692482*x1 + 4.76899174507422*x2**4 + 7.63275568394693*x2**3 + 5.43619144001304*x2**2 - 0.629201498706639*x2 + 0.16321191611099
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 77 counterexamples!
iter:11
0-> accuracy1:100.0, accuracy2:60.356348752975464, accuracy3:100.0, loss:0.1881287544965744
10-> accuracy1:100.0, accuracy2:60.356348752975464, accuracy3:100.0, loss:0.18738077580928802
20-> accuracy1:100.0, accuracy2:60.300666093826294, accuracy3:100.0, loss:0.18641415238380432
30-> accuracy1:100.0, accuracy2:60.300666093826294, accuracy3:100.0, loss:0.18532231450080872
40-> accuracy1:100.0, accuracy2:60.13363003730774, accuracy3:100.0, loss:0.18416135013103485
50-> accuracy1:100.0, accuracy2:60.13363003730774, accuracy3:100.0, loss:0.18298634886741638
60-> accuracy1:100.0, accuracy2:60.02227067947388, accuracy3:100.0, loss:0.18172475695610046
70-> accuracy1:100.0, accuracy2:60.02227067947388, accuracy3:100.0, loss:0.18042084574699402
80-> accuracy1:100.0, accuracy2:60.02227067947388, accuracy3:100.0, loss:0.1790665239095688
90-> accuracy1:100.0, accuracy2:60.02227067947388, accuracy3:100.0, loss:0.17762057483196259
B(x) = 1.58034948781846*x1**4 + 6.86819459771902*x1**3*x2 - 0.767822007553638*x1**3 + 11.8078231489933*x1**2*x2**2 + 3.09216195608177*x1**2*x2 + 5.27824895122519*x1**2 + 9.62659113221321*x1*x2**3 + 9.99199945899585*x1*x2**2 + 9.43223760853476*x1*x2 - 1.82998336673976*x1 + 3.21799335603391*x2**4 + 5.08390840588292*x2**3 + 3.38654763862292*x2**2 - 0.441547552456116*x2 + 0.238510695952375
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:12
0-> accuracy1:100.0, accuracy2:56.85654282569885, accuracy3:100.0, loss:0.20438432693481445
10-> accuracy1:100.0, accuracy2:56.85654282569885, accuracy3:100.0, loss:0.2021590918302536
20-> accuracy1:100.0, accuracy2:56.90928101539612, accuracy3:100.0, loss:0.2002856731414795
30-> accuracy1:100.0, accuracy2:56.80379867553711, accuracy3:100.0, loss:0.19838404655456543
40-> accuracy1:100.0, accuracy2:56.80379867553711, accuracy3:100.0, loss:0.19634707272052765
50-> accuracy1:100.0, accuracy2:56.85654282569885, accuracy3:100.0, loss:0.1943461000919342
60-> accuracy1:100.0, accuracy2:56.90928101539612, accuracy3:100.0, loss:0.19237837195396423
70-> accuracy1:100.0, accuracy2:56.90928101539612, accuracy3:100.0, loss:0.19081152975559235
80-> accuracy1:100.0, accuracy2:56.90928101539612, accuracy3:100.0, loss:0.189377561211586
90-> accuracy1:100.0, accuracy2:56.90928101539612, accuracy3:100.0, loss:0.18756991624832153
B(x) = 0.93761243289721*x1**4 + 4.09785104143422*x1**3*x2 - 1.02568053090286*x1**3 + 7.20351407750506*x1**2*x2**2 + 0.683778806293063*x1**2*x2 + 3.44045323719294*x1**2 + 6.18441769933186*x1*x2**3 + 6.36769351479073*x1*x2**2 + 5.68703716657443*x1*x2 - 1.62327702773992*x1 + 2.21825388052829*x2**4 + 3.24208368246021*x2**3 + 1.70303851226133*x2**2 - 0.111176983170994*x2 + 0.298130221120526
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:13
0-> accuracy1:100.0, accuracy2:54.30861711502075, accuracy3:100.0, loss:0.20983244478702545
10-> accuracy1:100.0, accuracy2:54.45891618728638, accuracy3:100.0, loss:0.20798759162425995
20-> accuracy1:100.0, accuracy2:54.759520292282104, accuracy3:100.0, loss:0.20635084807872772
30-> accuracy1:100.0, accuracy2:55.26052117347717, accuracy3:100.0, loss:0.2045595794916153
40-> accuracy1:100.0, accuracy2:55.911821126937866, accuracy3:100.0, loss:0.2024550437927246
50-> accuracy1:100.0, accuracy2:56.71342611312866, accuracy3:100.0, loss:0.19986853003501892
60-> accuracy1:100.0, accuracy2:58.216434717178345, accuracy3:100.0, loss:0.19662226736545563
70-> accuracy1:100.0, accuracy2:61.7234468460083, accuracy3:100.0, loss:0.19235552847385406
80-> accuracy1:100.0, accuracy2:66.83366894721985, accuracy3:100.0, loss:0.18647460639476776
90-> accuracy1:100.0, accuracy2:73.69739413261414, accuracy3:100.0, loss:0.17858460545539856
B(x) = 0.63870086526873*x1**4 + 2.77182908540924*x1**3*x2 - 0.821634667167561*x1**3 + 4.8028271623434*x1**2*x2**2 - 0.315338971472919*x1**2*x2 + 2.76783315476121*x1**2 + 4.19955844691918*x1*x2**3 + 4.71588681091239*x1*x2**2 + 4.51324655690751*x1*x2 - 1.96540979892147*x1 + 1.50622462080598*x2**4 + 1.97182897632765*x2**3 + 0.830057772323135*x2**2 + 0.232691610532559*x2 + 0.678482763448748
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:14
0-> accuracy1:100.0, accuracy2:74.57060813903809, accuracy3:100.0, loss:0.20295652747154236
10-> accuracy1:100.0, accuracy2:75.19084215164185, accuracy3:100.0, loss:0.19683577120304108
20-> accuracy1:100.0, accuracy2:75.19084215164185, accuracy3:100.0, loss:0.19368767738342285
30-> accuracy1:100.0, accuracy2:75.19084215164185, accuracy3:100.0, loss:0.1916571855545044
40-> accuracy1:100.0, accuracy2:75.19084215164185, accuracy3:100.0, loss:0.19000712037086487
50-> accuracy1:100.0, accuracy2:75.19084215164185, accuracy3:100.0, loss:0.18860378861427307
60-> accuracy1:100.0, accuracy2:75.14312863349915, accuracy3:100.0, loss:0.18731047213077545
70-> accuracy1:100.0, accuracy2:75.14312863349915, accuracy3:100.0, loss:0.18612970411777496
80-> accuracy1:100.0, accuracy2:75.14312863349915, accuracy3:100.0, loss:0.18510092794895172
90-> accuracy1:100.0, accuracy2:75.14312863349915, accuracy3:100.0, loss:0.18421059846878052
B(x) = 0.435571683131889*x1**4 + 1.89911422695468*x1**3*x2 - 0.392727114105213*x1**3 + 3.33714715672824*x1**2*x2**2 + 0.188878486415195*x1**2*x2 + 1.84026933842664*x1**2 + 3.07537676759362*x1*x2**3 + 3.77067818579846*x1*x2**2 + 2.94541673062947*x1*x2 - 1.4228065291573*x1 + 1.11439636924681*x2**4 + 1.48213042061833*x2**3 + 0.997039650231599*x2**2 + 0.893248084738199*x2 + 0.598401411978056
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:15
0-> accuracy1:100.0, accuracy2:71.72130942344666, accuracy3:100.0, loss:0.2147187739610672
10-> accuracy1:100.0, accuracy2:71.72130942344666, accuracy3:100.0, loss:0.21383965015411377
20-> accuracy1:100.0, accuracy2:71.67577147483826, accuracy3:100.0, loss:0.2131129801273346
30-> accuracy1:100.0, accuracy2:71.67577147483826, accuracy3:100.0, loss:0.21241110563278198
40-> accuracy1:100.0, accuracy2:71.67577147483826, accuracy3:100.0, loss:0.2117285579442978
50-> accuracy1:100.0, accuracy2:71.67577147483826, accuracy3:100.0, loss:0.211123988032341
60-> accuracy1:100.0, accuracy2:71.67577147483826, accuracy3:100.0, loss:0.21060054004192352
70-> accuracy1:100.0, accuracy2:71.63023948669434, accuracy3:100.0, loss:0.21012552082538605
80-> accuracy1:100.0, accuracy2:71.63023948669434, accuracy3:100.0, loss:0.2096792757511139
90-> accuracy1:100.0, accuracy2:71.63023948669434, accuracy3:100.0, loss:0.2092820703983307
B(x) = 0.282524804116469*x1**4 + 1.24915070136051*x1**3*x2 - 0.253322968036928*x1**3 + 2.26400355009196*x1**2*x2**2 + 0.215895141760004*x1**2*x2 + 1.26062121134345*x1**2 + 2.26739640190262*x1*x2**3 + 2.72756585919337*x1*x2**2 + 1.87558356285698*x1*x2 - 1.05751100350593*x1 + 0.856257100897196*x2**4 + 1.12971890872655*x2**3 + 1.05456755067997*x2**2 + 1.13884263153344*x2 + 0.481356511212368
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:16
0-> accuracy1:100.0, accuracy2:68.51045489311218, accuracy3:100.0, loss:0.23697969317436218
10-> accuracy1:100.0, accuracy2:68.51045489311218, accuracy3:100.0, loss:0.23651628196239471
20-> accuracy1:100.0, accuracy2:68.4669017791748, accuracy3:100.0, loss:0.2361263930797577
30-> accuracy1:100.0, accuracy2:68.4669017791748, accuracy3:100.0, loss:0.23570454120635986
40-> accuracy1:100.0, accuracy2:68.4669017791748, accuracy3:100.0, loss:0.2353101372718811
50-> accuracy1:100.0, accuracy2:68.42334270477295, accuracy3:100.0, loss:0.2349582016468048
60-> accuracy1:100.0, accuracy2:68.42334270477295, accuracy3:100.0, loss:0.23463545739650726
70-> accuracy1:100.0, accuracy2:68.37978959083557, accuracy3:100.0, loss:0.2343243807554245
80-> accuracy1:100.0, accuracy2:68.37978959083557, accuracy3:100.0, loss:0.2339770793914795
90-> accuracy1:100.0, accuracy2:68.37978959083557, accuracy3:100.0, loss:0.23366031050682068
B(x) = 0.20087263685771*x1**4 + 0.875770642567488*x1**3*x2 - 0.191645649534219*x1**3 + 1.58616579993436*x1**2*x2**2 + 0.161405963589699*x1**2*x2 + 0.992039421464713*x1**2 + 1.75851533980346*x1*x2**3 + 2.03040708564493*x1*x2**2 + 1.25654913396854*x1*x2 - 0.898874208790205*x1 + 0.682598878892743*x2**4 + 0.879534538899039*x2**3 + 1.0891123900593*x2**2 + 1.27291935463087*x2 + 0.417454753642798
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:17
0-> accuracy1:100.0, accuracy2:65.52587747573853, accuracy3:100.0, loss:0.2580321431159973
10-> accuracy1:100.0, accuracy2:65.52587747573853, accuracy3:100.0, loss:0.25764504075050354
20-> accuracy1:100.0, accuracy2:65.4841423034668, accuracy3:100.0, loss:0.2573329508304596
30-> accuracy1:100.0, accuracy2:65.4841423034668, accuracy3:100.0, loss:0.2569803297519684
40-> accuracy1:100.0, accuracy2:65.4841423034668, accuracy3:100.0, loss:0.2566379904747009
50-> accuracy1:100.0, accuracy2:65.4841423034668, accuracy3:100.0, loss:0.2563503384590149
60-> accuracy1:100.0, accuracy2:65.4841423034668, accuracy3:100.0, loss:0.25607621669769287
70-> accuracy1:100.0, accuracy2:65.44240117073059, accuracy3:100.0, loss:0.2557990252971649
80-> accuracy1:100.0, accuracy2:65.40066599845886, accuracy3:100.0, loss:0.25552886724472046
90-> accuracy1:100.0, accuracy2:65.40066599845886, accuracy3:100.0, loss:0.25525492429733276
B(x) = 0.160382917194494*x1**4 + 0.650718792038198*x1**3*x2 - 0.171188623267046*x1**3 + 1.07961982323978*x1**2*x2**2 + 0.10486118662841*x1**2*x2 + 0.873456865350944*x1**2 + 1.36865314672086*x1*x2**3 + 1.50034012539794*x1*x2**2 + 0.73861307427136*x1*x2 - 0.878897853285802*x1 + 0.520235919731993*x2**4 + 0.64832299105709*x2**3 + 1.06881171036028*x2**2 + 1.34284279971348*x2 + 0.37628425800345
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:18
0-> accuracy1:100.0, accuracy2:62.78044581413269, accuracy3:100.0, loss:0.27646321058273315
10-> accuracy1:100.0, accuracy2:62.78044581413269, accuracy3:100.0, loss:0.2764546573162079
20-> accuracy1:100.0, accuracy2:62.78044581413269, accuracy3:100.0, loss:0.2770729064941406
30-> accuracy1:100.0, accuracy2:62.78044581413269, accuracy3:100.0, loss:0.27703186869621277
40-> accuracy1:100.0, accuracy2:62.78044581413269, accuracy3:100.0, loss:0.2769719660282135
50-> accuracy1:100.0, accuracy2:62.78044581413269, accuracy3:100.0, loss:0.2767087519168854
60-> accuracy1:100.0, accuracy2:62.78044581413269, accuracy3:100.0, loss:0.276449978351593
70-> accuracy1:100.0, accuracy2:62.78044581413269, accuracy3:100.0, loss:0.2762230932712555
80-> accuracy1:100.0, accuracy2:62.74038553237915, accuracy3:100.0, loss:0.27646198868751526
90-> accuracy1:100.0, accuracy2:62.58012652397156, accuracy3:100.0, loss:0.27670058608055115
B(x) = 0.131051920007749*x1**4 + 0.490290248885041*x1**3*x2 - 0.136895640779907*x1**3 + 0.814652332088058*x1**2*x2**2 + 0.109392394703615*x1**2*x2 + 0.769278798566027*x1**2 + 1.01558931416412*x1*x2**3 + 1.10714519483898*x1*x2**2 + 0.47337683103302*x1*x2 - 0.84048698607496*x1 + 0.362293632465774*x2**4 + 0.440361622771576*x2**3 + 0.976821095157578*x2**2 + 1.34638132328783*x2 + 0.356516903326406
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:19
0-> accuracy1:100.0, accuracy2:60.20801067352295, accuracy3:100.0, loss:0.29613348841667175
10-> accuracy1:100.0, accuracy2:60.16949415206909, accuracy3:100.0, loss:0.29590272903442383
20-> accuracy1:100.0, accuracy2:60.16949415206909, accuracy3:100.0, loss:0.2957126498222351
30-> accuracy1:100.0, accuracy2:60.16949415206909, accuracy3:100.0, loss:0.2954632043838501
40-> accuracy1:100.0, accuracy2:60.16949415206909, accuracy3:100.0, loss:0.29525724053382874
50-> accuracy1:100.0, accuracy2:60.13097167015076, accuracy3:100.0, loss:0.2950732409954071
60-> accuracy1:100.0, accuracy2:60.13097167015076, accuracy3:100.0, loss:0.2954782545566559
70-> accuracy1:100.0, accuracy2:60.16949415206909, accuracy3:100.0, loss:0.2955699563026428
80-> accuracy1:100.0, accuracy2:60.13097167015076, accuracy3:100.0, loss:0.29564785957336426
90-> accuracy1:100.0, accuracy2:60.13097167015076, accuracy3:100.0, loss:0.2955165207386017
B(x) = 0.114114891039914*x1**4 + 0.388932175909566*x1**3*x2 - 0.11689502439293*x1**3 + 0.633064982526545*x1**2*x2**2 + 0.15384019518505*x1**2*x2 + 0.70887120094414*x1**2 + 0.804549815051706*x1*x2**3 + 0.860867540810974*x1*x2**2 + 0.285695520835266*x1*x2 - 0.772609499116158*x1 + 0.262485782016137*x2**4 + 0.301602457381891*x2**3 + 0.938713569859897*x2**2 + 1.37008853793321*x2 + 0.331083053429192
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:20
0-> accuracy1:100.0, accuracy2:57.8635036945343, accuracy3:100.0, loss:0.3122421205043793
10-> accuracy1:100.0, accuracy2:57.826411724090576, accuracy3:100.0, loss:0.3120778799057007
20-> accuracy1:100.0, accuracy2:57.826411724090576, accuracy3:100.0, loss:0.31194689869880676
30-> accuracy1:100.0, accuracy2:57.826411724090576, accuracy3:100.0, loss:0.31178638339042664
40-> accuracy1:100.0, accuracy2:57.826411724090576, accuracy3:100.0, loss:0.3121582269668579
50-> accuracy1:100.0, accuracy2:57.78931975364685, accuracy3:100.0, loss:0.31231528520584106
60-> accuracy1:100.0, accuracy2:57.752227783203125, accuracy3:100.0, loss:0.31228283047676086
70-> accuracy1:100.0, accuracy2:57.78931975364685, accuracy3:100.0, loss:0.31215158104896545
80-> accuracy1:100.0, accuracy2:57.78931975364685, accuracy3:100.0, loss:0.31201764941215515
90-> accuracy1:100.0, accuracy2:57.752227783203125, accuracy3:100.0, loss:0.31189167499542236
B(x) = 0.102037628643458*x1**4 + 0.317513212610546*x1**3*x2 - 0.106601537345044*x1**3 + 0.516627897300441*x1**2*x2**2 + 0.188048761260513*x1**2*x2 + 0.670202932293078*x1**2 + 0.658926356047709*x1*x2**3 + 0.704399248578896*x1*x2**2 + 0.194347986443664*x1*x2 - 0.709317155245642*x1 + 0.191361164717487*x2**4 + 0.19795982460133*x2**3 + 0.905327065168631*x2**2 + 1.38260362680836*x2 + 0.311041927070615
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
Failed
Elapsed Time: 109.81611661892384
