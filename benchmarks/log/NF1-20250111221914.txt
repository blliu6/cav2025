{'batch_size': 900, 'lr': np.float64(0.26999999999999996), 'loss_weight_continuous': (1, 1, 1), 'R_b': 0.4, 'margin': 0.4, 'DEG_continuous': [2, 4, 4, 2], 'learning_loops': 100, 'max_iter': 20, 'err': 0.02677454477719443}

Mosek can be used normally.
iter:1
0-> accuracy1:0.0, accuracy2:40.99999964237213, accuracy3:0.0, loss:1.0865461826324463
10-> accuracy1:92.00000166893005, accuracy2:89.4444465637207, accuracy3:100.0, loss:1.3157371282577515
20-> accuracy1:94.66666579246521, accuracy2:96.33333086967468, accuracy3:86.33333444595337, loss:1.8194648027420044
30-> accuracy1:100.0, accuracy2:99.11110997200012, accuracy3:100.0, loss:0.5177878141403198
40-> accuracy1:91.11111164093018, accuracy2:87.88889050483704, accuracy3:100.0, loss:107.10417938232422
50-> accuracy1:100.0, accuracy2:98.55555295944214, accuracy3:100.0, loss:7.7678985595703125
60-> accuracy1:100.0, accuracy2:88.11110854148865, accuracy3:100.0, loss:2368.150146484375
70-> accuracy1:100.0, accuracy2:98.33333492279053, accuracy3:97.77777791023254, loss:38.69775390625
80-> accuracy1:100.0, accuracy2:98.88888597488403, accuracy3:100.0, loss:24.042831420898438
90-> accuracy1:100.0, accuracy2:99.33333396911621, accuracy3:100.0, loss:16.192428588867188
B(x) = 59925.9510878089*x1**4 + 274854.84608734*x1**3*x2 + 69523.4672817743*x1**3 + 505651.739242149*x1**2*x2**2 + 238713.165952791*x1**2*x2 + 42662.9627238356*x1**2 + 430504.213631394*x1*x2**3 + 314815.476040844*x1*x2**2 + 72198.6688343858*x1*x2 - 16724.5914002687*x1 + 145897.120344097*x2**4 + 115676.741746892*x2**3 + 24615.703767088*x2**2 + 13189.3721977736*x2 - 982.095621335735
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:2
0-> accuracy1:100.0, accuracy2:89.70000147819519, accuracy3:100.0, loss:162.63760375976562
10-> accuracy1:100.0, accuracy2:99.6999979019165, accuracy3:100.0, loss:19.22064971923828
20-> accuracy1:100.0, accuracy2:99.59999918937683, accuracy3:100.0, loss:30.06495475769043
30-> accuracy1:100.0, accuracy2:99.29999709129333, accuracy3:100.0, loss:8.486125946044922
40-> accuracy1:100.0, accuracy2:98.7999975681305, accuracy3:100.0, loss:5.602331638336182
50-> accuracy1:100.0, accuracy2:99.6999979019165, accuracy3:100.0, loss:3.642000198364258
60-> accuracy1:100.0, accuracy2:99.6999979019165, accuracy3:100.0, loss:1.5230344533920288
70-> accuracy1:100.0, accuracy2:99.80000257492065, accuracy3:98.66666793823242, loss:0.6201128363609314
80-> accuracy1:100.0, accuracy2:99.59999918937683, accuracy3:100.0, loss:0.32041633129119873
90-> accuracy1:100.0, accuracy2:99.59999918937683, accuracy3:100.0, loss:0.1949407160282135
B(x) = 9888.06514280601*x1**4 + 45812.8531943787*x1**3*x2 + 11847.6900749413*x1**3 + 83023.0934345062*x1**2*x2**2 + 43170.4908393281*x1**2*x2 + 5471.07154113491*x1**2 + 69053.4771061412*x1*x2**3 + 57032.5947791194*x1*x2**2 + 10984.9559786279*x1*x2 - 3383.57000721106*x1 + 22223.0175265078*x2**4 + 22220.73472453*x2**3 + 4758.38783327345*x2**2 - 600.941929391648*x2 + 141.116202696423
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:3
0-> accuracy1:100.0, accuracy2:90.72727560997009, accuracy3:100.0, loss:31.731651306152344
10-> accuracy1:97.00000286102295, accuracy2:97.00000286102295, accuracy3:100.0, loss:3.4958295822143555
20-> accuracy1:98.33333492279053, accuracy2:97.36363887786865, accuracy3:100.0, loss:2.04243803024292
30-> accuracy1:98.77777695655823, accuracy2:97.27272987365723, accuracy3:100.0, loss:1.4024124145507812
40-> accuracy1:99.2222249507904, accuracy2:97.72727489471436, accuracy3:100.0, loss:0.6566482186317444
50-> accuracy1:98.88888597488403, accuracy2:98.18181991577148, accuracy3:100.0, loss:0.3972916007041931
60-> accuracy1:99.33333396911621, accuracy2:96.90909385681152, accuracy3:99.44444298744202, loss:0.2993326485157013
70-> accuracy1:99.44444298744202, accuracy2:97.27272987365723, accuracy3:99.6666669845581, loss:0.2100091576576233
80-> accuracy1:99.2222249507904, accuracy2:97.81818389892578, accuracy3:99.6666669845581, loss:0.16815848648548126
90-> accuracy1:98.88888597488403, accuracy2:97.63636589050293, accuracy3:100.0, loss:0.13467909395694733
B(x) = 1493.41397530259*x1**4 + 6933.50926156449*x1**3*x2 + 1459.48212096164*x1**3 + 12532.1284740638*x1**2*x2**2 + 5546.09186858929*x1**2*x2 + 644.51971120068*x1**2 + 10398.0979606741*x1*x2**3 + 7302.3356918483*x1*x2**2 + 949.771637939446*x1*x2 - 481.825036802484*x1 + 3342.38868045321*x2**4 + 2995.50996571912*x2**3 + 224.400917254568*x2**2 - 285.920844513409*x2 - 0.585511283261436
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 14 counterexamples!
Add 90 counterexamples!
iter:4
0-> accuracy1:97.37417697906494, accuracy2:90.16806483268738, accuracy3:100.0, loss:1.3162834644317627
10-> accuracy1:98.24945330619812, accuracy2:90.16806483268738, accuracy3:100.0, loss:0.9153839349746704
20-> accuracy1:98.0306327342987, accuracy2:89.57983255386353, accuracy3:100.0, loss:0.6881424188613892
30-> accuracy1:97.26477265357971, accuracy2:90.42016863822937, accuracy3:100.0, loss:0.524384617805481
40-> accuracy1:97.48358726501465, accuracy2:89.7478997707367, accuracy3:99.5555579662323, loss:0.42052602767944336
50-> accuracy1:96.49890661239624, accuracy2:89.41176533699036, accuracy3:100.0, loss:0.33845049142837524
60-> accuracy1:97.0459520816803, accuracy2:88.65545988082886, accuracy3:99.5555579662323, loss:0.2772584855556488
70-> accuracy1:97.0459520816803, accuracy2:88.57142925262451, accuracy3:99.5555579662323, loss:0.23104728758335114
80-> accuracy1:96.71772718429565, accuracy2:88.65545988082886, accuracy3:100.0, loss:0.1952221542596817
90-> accuracy1:96.82713150978088, accuracy2:88.23529481887817, accuracy3:99.6666669845581, loss:0.16768313944339752
B(x) = 225.173946365068*x1**4 + 1043.95599098438*x1**3*x2 + 215.024876827872*x1**3 + 1873.76445973427*x1**2*x2**2 + 859.766855209896*x1**2*x2 + 109.092515108278*x1**2 + 1532.8643779287*x1*x2**3 + 1128.28208202899*x1*x2**2 + 199.142272829069*x1*x2 - 37.4164672861248*x1 + 482.406896819012*x2**4 + 456.193914226234*x2**3 + 82.5481792635411*x2**2 - 11.4399901069041*x2 - 5.0023325313812
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 35 counterexamples!
iter:5
0-> accuracy1:93.57218146324158, accuracy2:87.64705657958984, accuracy3:99.5555579662323, loss:0.18331001698970795
10-> accuracy1:98.735511302948, accuracy2:85.54621934890747, accuracy3:99.44444298744202, loss:0.15043719112873077
20-> accuracy1:97.15489745140076, accuracy2:85.46218276023865, accuracy3:100.0, loss:0.1309206634759903
30-> accuracy1:97.26027250289917, accuracy2:85.3781521320343, accuracy3:100.0, loss:0.11923794448375702
40-> accuracy1:97.99789190292358, accuracy2:84.78991389274597, accuracy3:99.6666669845581, loss:0.11077487468719482
50-> accuracy1:97.78714179992676, accuracy2:84.45377945899963, accuracy3:100.0, loss:0.10492666810750961
60-> accuracy1:98.103266954422, accuracy2:83.94957780838013, accuracy3:100.0, loss:0.10212942212820053
70-> accuracy1:98.63013625144958, accuracy2:82.77310729026794, accuracy3:100.0, loss:0.10118037462234497
80-> accuracy1:98.84088635444641, accuracy2:81.9327712059021, accuracy3:100.0, loss:0.1013125479221344
90-> accuracy1:99.57850575447083, accuracy2:80.75630068778992, accuracy3:100.0, loss:0.10185056924819946
B(x) = 33.6587690818159*x1**4 + 156.450186421415*x1**3*x2 + 28.2193779469949*x1**3 + 280.633057320928*x1**2*x2**2 + 116.376598428766*x1**2*x2 + 13.9774033087193*x1**2 + 228.617387749564*x1*x2**3 + 153.856034965106*x1*x2**2 + 23.5350458969617*x1*x2 - 5.27733240715017*x1 + 71.3737299613142*x2**4 + 61.1351844432133*x2**3 + 8.48010360912676*x2**2 - 0.872448420489458*x2 - 0.433734810953791
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 81 counterexamples!
iter:6
0-> accuracy1:100.0, accuracy2:74.66561794281006, accuracy3:100.0, loss:0.13637708127498627
10-> accuracy1:99.47313070297241, accuracy2:74.03619289398193, accuracy3:100.0, loss:0.13330577313899994
20-> accuracy1:99.05163049697876, accuracy2:74.350905418396, accuracy3:100.0, loss:0.13103239238262177
30-> accuracy1:99.47313070297241, accuracy2:74.03619289398193, accuracy3:100.0, loss:0.1297614723443985
40-> accuracy1:99.57850575447083, accuracy2:73.72148036956787, accuracy3:100.0, loss:0.1305200457572937
50-> accuracy1:100.0, accuracy2:72.8560209274292, accuracy3:100.0, loss:0.13250115513801575
60-> accuracy1:100.0, accuracy2:72.06923961639404, accuracy3:100.0, loss:0.13481460511684418
70-> accuracy1:100.0, accuracy2:71.04641795158386, accuracy3:100.0, loss:0.13677574694156647
80-> accuracy1:100.0, accuracy2:70.33831477165222, accuracy3:100.0, loss:0.13970167934894562
90-> accuracy1:100.0, accuracy2:70.02360224723816, accuracy3:100.0, loss:0.1430252492427826
B(x) = 5.03115124852214*x1**4 + 23.5785283374449*x1**3*x2 + 3.98926517778029*x1**3 + 42.6056907274508*x1**2*x2**2 + 16.7021617103495*x1**2*x2 + 1.98956250408955*x1**2 + 34.8825500657698*x1*x2**3 + 22.313738305904*x1*x2**2 + 3.34510749233134*x1*x2 - 1.36296346546424*x1 + 10.9104579674172*x2**4 + 8.79316432070445*x2**3 + 0.936232310531878*x2**2 - 0.213001531593132*x2 + 0.159925375599089
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 96 counterexamples!
iter:7
0-> accuracy1:100.0, accuracy2:64.88661170005798, accuracy3:100.0, loss:0.17045162618160248
10-> accuracy1:100.0, accuracy2:64.74030613899231, accuracy3:100.0, loss:0.17363394796848297
20-> accuracy1:100.0, accuracy2:64.59400057792664, accuracy3:100.0, loss:0.17667970061302185
30-> accuracy1:100.0, accuracy2:64.30138945579529, accuracy3:100.0, loss:0.17951591312885284
40-> accuracy1:100.0, accuracy2:64.30138945579529, accuracy3:100.0, loss:0.18241417407989502
50-> accuracy1:100.0, accuracy2:64.15508389472961, accuracy3:100.0, loss:0.18523147702217102
60-> accuracy1:100.0, accuracy2:63.71616721153259, accuracy3:100.0, loss:0.18830955028533936
70-> accuracy1:100.0, accuracy2:63.05779218673706, accuracy3:100.0, loss:0.19201450049877167
80-> accuracy1:100.0, accuracy2:62.83833384513855, accuracy3:100.0, loss:0.19596706330776215
90-> accuracy1:100.0, accuracy2:62.32626438140869, accuracy3:100.0, loss:0.19990180432796478
B(x) = 0.743930439647134*x1**4 + 3.53434290497978*x1**3*x2 + 0.593311621910614*x1**3 + 6.47934531530092*x1**2*x2**2 + 2.47027149523877*x1**2*x2 + 0.389528162705504*x1**2 + 5.36000169082109*x1*x2**3 + 3.35124537577149*x1*x2**2 + 0.796716713409281*x1*x2 - 0.462446836870061*x1 + 1.68245368210915*x2**4 + 1.28473854329109*x2**3 + 0.240652297619987*x2**2 + 0.47634692767699*x2 + 0.121874670177355
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:8
0-> accuracy1:100.0, accuracy2:57.32787847518921, accuracy3:100.0, loss:0.24517816305160522
10-> accuracy1:100.0, accuracy2:56.918883323669434, accuracy3:100.0, loss:0.2509453296661377
20-> accuracy1:100.0, accuracy2:56.30538463592529, accuracy3:100.0, loss:0.25724488496780396
30-> accuracy1:100.0, accuracy2:55.28289079666138, accuracy3:100.0, loss:0.2634367346763611
40-> accuracy1:100.0, accuracy2:54.80572581291199, accuracy3:100.0, loss:0.2703361213207245
50-> accuracy1:100.0, accuracy2:54.46489453315735, accuracy3:100.0, loss:0.27667728066444397
60-> accuracy1:100.0, accuracy2:53.78323197364807, accuracy3:100.0, loss:0.28320151567459106
70-> accuracy1:100.0, accuracy2:53.51056456565857, accuracy3:100.0, loss:0.28938910365104675
80-> accuracy1:100.0, accuracy2:53.03339958190918, accuracy3:100.0, loss:0.2951126992702484
90-> accuracy1:100.0, accuracy2:52.48807072639465, accuracy3:100.0, loss:0.30038511753082275
B(x) = 0.111317885046795*x1**4 + 0.557770793712115*x1**3*x2 + 0.0918357021237704*x1**3 + 1.06883019841961*x1**2*x2**2 + 0.378467300759106*x1**2*x2 + 0.180786091241926*x1**2 + 0.909424415071678*x1*x2**3 + 0.596232642291317*x1*x2**2 + 0.415486689436098*x1*x2 - 0.254292605723356*x1 + 0.286370977200527*x2**4 + 0.226571431032968*x2**3 + 0.190984557670312*x2**2 + 0.572281696513978*x2 + 0.0946668068323249
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:9
0-> accuracy1:100.0, accuracy2:48.245054483413696, accuracy3:100.0, loss:0.3471280634403229
10-> accuracy1:100.0, accuracy2:47.98978865146637, accuracy3:100.0, loss:0.350643128156662
20-> accuracy1:100.0, accuracy2:44.79897916316986, accuracy3:100.0, loss:0.3547871708869934
30-> accuracy1:100.0, accuracy2:43.841734528541565, accuracy3:100.0, loss:0.35935136675834656
40-> accuracy1:100.0, accuracy2:43.458837270736694, accuracy3:100.0, loss:0.36431005597114563
50-> accuracy1:100.0, accuracy2:43.26739013195038, accuracy3:100.0, loss:0.3691476583480835
60-> accuracy1:100.0, accuracy2:43.01212430000305, accuracy3:100.0, loss:0.3740890324115753
70-> accuracy1:100.0, accuracy2:42.88449287414551, accuracy3:100.0, loss:0.3793588876724243
80-> accuracy1:100.0, accuracy2:42.50159561634064, accuracy3:100.0, loss:0.38456839323043823
90-> accuracy1:100.0, accuracy2:42.11869835853577, accuracy3:100.0, loss:0.389517217874527
B(x) = 0.0210608300492101*x1**4 + 0.108071497856439*x1**3*x2 + 0.0189765505034731*x1**3 + 0.207231658494012*x1**2*x2**2 + 0.0630923369957846*x1**2*x2 + 0.162951391602826*x1**2 + 0.172024803565163*x1*x2**3 + 0.124479700327324*x1*x2**2 + 0.287289676994385*x1*x2 - 0.179580000451464*x1 + 0.0494437790251843*x2**4 + 0.0366268679373824*x2**3 + 0.14965943837939*x2**2 + 0.604057981955539*x2 + 0.073875832117872
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:10
0-> accuracy1:100.0, accuracy2:39.232152700424194, accuracy3:100.0, loss:0.4186338782310486
10-> accuracy1:100.0, accuracy2:39.05218839645386, accuracy3:100.0, loss:0.4227793216705322
20-> accuracy1:100.0, accuracy2:38.452309370040894, accuracy3:100.0, loss:0.4265762269496918
30-> accuracy1:100.0, accuracy2:38.27234506607056, accuracy3:100.0, loss:0.4300069510936737
40-> accuracy1:100.0, accuracy2:37.972405552864075, accuracy3:100.0, loss:0.43274593353271484
50-> accuracy1:100.0, accuracy2:37.732452154159546, accuracy3:100.0, loss:0.4348365068435669
60-> accuracy1:100.0, accuracy2:37.6124769449234, accuracy3:100.0, loss:0.43627119064331055
70-> accuracy1:100.0, accuracy2:37.67246603965759, accuracy3:100.0, loss:0.43680164217948914
80-> accuracy1:100.0, accuracy2:37.732452154159546, accuracy3:100.0, loss:0.4365130066871643
90-> accuracy1:100.0, accuracy2:37.732452154159546, accuracy3:100.0, loss:0.43521255254745483
B(x) = 0.00618163589691657*x1**4 + 0.0310466804646198*x1**3*x2 + 0.00533229548482812*x1**3 + 0.0559247090967603*x1**2*x2**2 + 0.0117310650133111*x1**2*x2 + 0.191368792653251*x1**2 + 0.0413740535843618*x1*x2**3 + 0.035145886377068*x1*x2**2 + 0.188199041297463*x1*x2 - 0.260865418383737*x1 + 0.00894501943451797*x2**4 + 0.00545381287937539*x2**3 + 0.099527210214404*x2**2 + 0.528845072331549*x2 + 0.0504182826462511
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:11
0-> accuracy1:100.0, accuracy2:35.48386991024017, accuracy3:100.0, loss:0.4496244788169861
10-> accuracy1:100.0, accuracy2:35.653650760650635, accuracy3:100.0, loss:0.44641274213790894
20-> accuracy1:100.0, accuracy2:35.71024239063263, accuracy3:100.0, loss:0.442179799079895
30-> accuracy1:100.0, accuracy2:36.10639572143555, accuracy3:100.0, loss:0.4367066025733948
40-> accuracy1:100.0, accuracy2:37.917375564575195, accuracy3:100.0, loss:0.4303569197654724
50-> accuracy1:100.0, accuracy2:42.558008432388306, accuracy3:100.0, loss:0.4235574007034302
60-> accuracy1:100.0, accuracy2:42.558008432388306, accuracy3:100.0, loss:0.41962844133377075
70-> accuracy1:100.0, accuracy2:42.558008432388306, accuracy3:100.0, loss:0.41938337683677673
80-> accuracy1:100.0, accuracy2:42.72778630256653, accuracy3:100.0, loss:0.42041170597076416
90-> accuracy1:100.0, accuracy2:42.72778630256653, accuracy3:100.0, loss:0.42164281010627747
B(x) = 0.00351125312357113*x1**4 + 0.0160068390902377*x1**3*x2 + 0.0028455406696312*x1**3 + 0.0249908812899792*x1**2*x2**2 + 0.0059912309953483*x1**2*x2 + 0.376888264940085*x1**2 + 0.0150635753153244*x1*x2**3 + 0.016680020501237*x1*x2**2 + 0.253186573902474*x1*x2 - 0.447576588527916*x1 + 0.00180157620165999*x2**4 + 0.00110521053044636*x2**3 + 0.0767966334225042*x2**2 + 0.411205573895019*x2 + 0.0385567379218439
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 89 counterexamples!
iter:12
0-> accuracy1:100.0, accuracy2:40.73275923728943, accuracy3:100.0, loss:0.43695372343063354
10-> accuracy1:100.0, accuracy2:40.73275923728943, accuracy3:100.0, loss:0.4364810287952423
20-> accuracy1:100.0, accuracy2:40.30172526836395, accuracy3:100.0, loss:0.43616124987602234
30-> accuracy1:100.0, accuracy2:39.97844755649567, accuracy3:100.0, loss:0.4374237656593323
40-> accuracy1:100.0, accuracy2:39.76293206214905, accuracy3:100.0, loss:0.4390958845615387
50-> accuracy1:100.0, accuracy2:39.601293206214905, accuracy3:100.0, loss:0.4406452476978302
60-> accuracy1:100.0, accuracy2:39.33189511299133, accuracy3:100.0, loss:0.4421008229255676
70-> accuracy1:100.0, accuracy2:39.22413885593414, accuracy3:100.0, loss:0.44347578287124634
80-> accuracy1:100.0, accuracy2:39.0625, accuracy3:100.0, loss:0.44474488496780396
90-> accuracy1:100.0, accuracy2:38.90086114406586, accuracy3:100.0, loss:0.44598838686943054
B(x) = 0.00150542482197638*x1**4 + 0.00658308519820802*x1**3*x2 + 0.00158778556425325*x1**3 + 0.00941011733365128*x1**2*x2**2 + 0.00270513055479147*x1**2*x2 + 0.359960566735649*x1**2 + 0.00462891334970829*x1*x2**3 + 0.00729602136967286*x1*x2**2 + 0.124582769815109*x1*x2 - 0.504301420821991*x1 + 0.000218927383249469*x2**4 + 8.23280258079307e-5*x2**3 + 0.0468338623354602*x2**2 + 0.373363793083067*x2 + 0.0246706587201774
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:13
0-> accuracy1:100.0, accuracy2:36.86093986034393, accuracy3:100.0, loss:0.5042389631271362
10-> accuracy1:100.0, accuracy2:37.06544041633606, accuracy3:100.0, loss:0.5040223002433777
20-> accuracy1:98.41938614845276, accuracy2:37.37218677997589, accuracy3:100.0, loss:0.5043163299560547
30-> accuracy1:98.52476119995117, accuracy2:37.73006200790405, accuracy3:100.0, loss:0.5032550692558289
40-> accuracy1:100.0, accuracy2:37.781184911727905, accuracy3:100.0, loss:0.5022125244140625
50-> accuracy1:100.0, accuracy2:37.832310795784, accuracy3:100.0, loss:0.5021288990974426
60-> accuracy1:100.0, accuracy2:37.93455958366394, accuracy3:100.0, loss:0.5025869607925415
70-> accuracy1:100.0, accuracy2:37.93455958366394, accuracy3:100.0, loss:0.5031262636184692
80-> accuracy1:100.0, accuracy2:37.98568546772003, accuracy3:100.0, loss:0.5036394000053406
90-> accuracy1:100.0, accuracy2:37.93455958366394, accuracy3:100.0, loss:0.5041448473930359
B(x) = 0.000812280801908767*x1**4 + 0.00353177720849792*x1**3*x2 + 0.000841434803626187*x1**3 + 0.00490251868866374*x1**2*x2**2 + 0.00204301660587016*x1**2*x2 + 0.396802898346784*x1**2 + 0.00226736280691022*x1*x2**3 + 0.00382082101493396*x1*x2**2 + 0.221591099688963*x1*x2 - 0.510192669228798*x1 + 5.70463075645085e-5*x2**4 + 7.45626314249334e-5*x2**3 + 0.0274509024407504*x2**2 + 0.313665564569159*x2 + 0.0325516716065484
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:14
0-> accuracy1:100.0, accuracy2:36.040857434272766, accuracy3:100.0, loss:0.5447075366973877
10-> accuracy1:100.0, accuracy2:36.138132214546204, accuracy3:100.0, loss:0.5434313416481018
20-> accuracy1:97.99789190292358, accuracy2:36.47859990596771, accuracy3:100.0, loss:0.5423420667648315
30-> accuracy1:98.52476119995117, accuracy2:36.81906759738922, accuracy3:100.0, loss:0.5401567220687866
40-> accuracy1:100.0, accuracy2:37.20817267894745, accuracy3:100.0, loss:0.5383469462394714
50-> accuracy1:100.0, accuracy2:37.20817267894745, accuracy3:100.0, loss:0.537274956703186
60-> accuracy1:100.0, accuracy2:37.305447459220886, accuracy3:100.0, loss:0.5366749167442322
70-> accuracy1:100.0, accuracy2:37.25681006908417, accuracy3:100.0, loss:0.5363603830337524
80-> accuracy1:100.0, accuracy2:37.305447459220886, accuracy3:100.0, loss:0.536240816116333
90-> accuracy1:100.0, accuracy2:37.354084849357605, accuracy3:100.0, loss:0.536235511302948
B(x) = 0.000449098319971521*x1**4 + 0.00192875026876124*x1**3*x2 + 0.000388545058291838*x1**3 + 0.00262773439043725*x1**2*x2**2 + 0.00135158043133524*x1**2*x2 + 0.46320948725085*x1**2 + 0.00120384461670715*x1*x2**3 + 0.00191053958952005*x1*x2**2 + 0.36523435757728*x1*x2 - 0.553343660631643*x1 + 2.79076656601731e-5*x2**4 + 3.7769253694152e-5*x2**3 + 0.0180852724251145*x2**2 + 0.244507142375782*x2 + 0.0584240815008566
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:15
0-> accuracy1:100.0, accuracy2:35.66790223121643, accuracy3:100.0, loss:0.5461094975471497
10-> accuracy1:100.0, accuracy2:35.76066792011261, accuracy3:100.0, loss:0.5430830717086792
20-> accuracy1:100.0, accuracy2:35.57513952255249, accuracy3:100.0, loss:0.5426493883132935
30-> accuracy1:100.0, accuracy2:35.38961112499237, accuracy3:100.0, loss:0.5431342720985413
40-> accuracy1:99.47313070297241, accuracy2:35.34322679042816, accuracy3:100.0, loss:0.5435551404953003
50-> accuracy1:99.26238059997559, accuracy2:35.15769839286804, accuracy3:100.0, loss:0.5436066389083862
60-> accuracy1:100.0, accuracy2:34.87940728664398, accuracy3:100.0, loss:0.5435039401054382
70-> accuracy1:99.57850575447083, accuracy2:34.83302295207977, accuracy3:100.0, loss:0.5432997941970825
80-> accuracy1:99.26238059997559, accuracy2:34.87940728664398, accuracy3:100.0, loss:0.5430334210395813
90-> accuracy1:99.15700554847717, accuracy2:34.83302295207977, accuracy3:100.0, loss:0.5427377820014954
B(x) = 0.000212863453281092*x1**4 + 0.000804184555398235*x1**3*x2 + 0.000171612709253798*x1**3 + 0.000909469403841092*x1**2*x2**2 + 0.000615450593813345*x1**2*x2 + 0.457606058670071*x1**2 + 0.000306961233516556*x1*x2**3 + 0.000539217603429807*x1*x2**2 + 0.228047915819005*x1*x2 - 0.6157119105205*x1 - 1.04957118754327e-5*x2**4 - 1.36551479473767e-5*x2**3 - 0.00314889983494342*x2**2 + 0.22463379667936*x2 + 0.0433151308867666
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:16
0-> accuracy1:99.26238059997559, accuracy2:33.200353384017944, accuracy3:100.0, loss:0.577107310295105
10-> accuracy1:97.89251685142517, accuracy2:33.28900635242462, accuracy3:100.0, loss:0.5749545097351074
20-> accuracy1:95.0474202632904, accuracy2:33.42198729515076, accuracy3:100.0, loss:0.5727637410163879
30-> accuracy1:96.73340320587158, accuracy2:33.73226821422577, accuracy3:100.0, loss:0.5699650645256042
40-> accuracy1:99.47313070297241, accuracy2:33.73226821422577, accuracy3:100.0, loss:0.5678529739379883
50-> accuracy1:99.57850575447083, accuracy2:33.90957415103912, accuracy3:100.0, loss:0.5661482810974121
60-> accuracy1:99.57850575447083, accuracy2:33.95390212535858, accuracy3:100.0, loss:0.5648014545440674
70-> accuracy1:99.68387484550476, accuracy2:34.08688008785248, accuracy3:100.0, loss:0.5635665655136108
80-> accuracy1:100.0, accuracy2:34.08688008785248, accuracy3:100.0, loss:0.5623236298561096
90-> accuracy1:100.0, accuracy2:34.04255211353302, accuracy3:100.0, loss:0.5612901449203491
B(x) = 0.000105807103680039*x1**4 + 0.000395067061183673*x1**3*x2 + 7.80677573253737e-5*x1**3 + 0.000451735286289053*x1**2*x2**2 + 0.000291795348608811*x1**2*x2 + 0.509016666263865*x1**2 + 0.000156602823386711*x1*x2**3 + 0.00023298766162235*x1*x2**2 + 0.335524698517591*x1*x2 - 0.652652413184244*x1 - 7.10096891817213e-6*x2**4 - 1.40561197428761e-5*x2**3 - 0.012535217003386*x2**2 + 0.174789301804714*x2 + 0.0682506974234768
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 58 counterexamples!
iter:17
0-> accuracy1:100.0, accuracy2:33.189281821250916, accuracy3:100.0, loss:0.5725711584091187
10-> accuracy1:99.26238059997559, accuracy2:33.23249816894531, accuracy3:100.0, loss:0.5713870525360107
20-> accuracy1:99.05163049697876, accuracy2:33.23249816894531, accuracy3:100.0, loss:0.5697827339172363
30-> accuracy1:100.0, accuracy2:33.23249816894531, accuracy3:100.0, loss:0.5678751468658447
40-> accuracy1:100.0, accuracy2:33.189281821250916, accuracy3:100.0, loss:0.5660032033920288
50-> accuracy1:100.0, accuracy2:33.14606845378876, accuracy3:100.0, loss:0.5641209483146667
60-> accuracy1:100.0, accuracy2:33.14606845378876, accuracy3:100.0, loss:0.5622258186340332
70-> accuracy1:100.0, accuracy2:32.88677632808685, accuracy3:100.0, loss:0.5601806044578552
80-> accuracy1:100.0, accuracy2:32.843559980392456, accuracy3:100.0, loss:0.5579838156700134
90-> accuracy1:100.0, accuracy2:32.843559980392456, accuracy3:100.0, loss:0.5555997490882874
B(x) = 4.78783060210911e-5*x1**4 + 0.000165524452437045*x1**3*x2 + 3.45798589269316e-5*x1**3 + 0.00016883420621738*x1**2*x2**2 + 0.000115061721376806*x1**2*x2 + 0.502608187037681*x1**2 + 4.70062606503586e-5*x1*x2**3 + 6.49439560316262e-5*x1*x2**2 + 0.267189913773452*x1*x2 - 0.704922544417225*x1 - 4.56661920490369e-6*x2**4 - 8.07298459320006e-6*x2**3 - 0.0221054360296246*x2**2 + 0.171142478537393*x2 + 0.0780228382549883
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:18
0-> accuracy1:100.0, accuracy2:31.441590189933777, accuracy3:100.0, loss:0.5806235074996948
10-> accuracy1:100.0, accuracy2:31.483015418052673, accuracy3:100.0, loss:0.5764585137367249
20-> accuracy1:100.0, accuracy2:31.64871633052826, accuracy3:100.0, loss:0.5718902945518494
30-> accuracy1:100.0, accuracy2:31.8972647190094, accuracy3:100.0, loss:0.5672855973243713
40-> accuracy1:100.0, accuracy2:31.855839490890503, accuracy3:100.0, loss:0.5633031129837036
50-> accuracy1:100.0, accuracy2:31.938689947128296, accuracy3:100.0, loss:0.5597546696662903
60-> accuracy1:100.0, accuracy2:31.980115175247192, accuracy3:100.0, loss:0.5563839077949524
70-> accuracy1:100.0, accuracy2:32.062965631484985, accuracy3:100.0, loss:0.5529149174690247
80-> accuracy1:100.0, accuracy2:32.062965631484985, accuracy3:100.0, loss:0.5495781302452087
90-> accuracy1:100.0, accuracy2:32.10439085960388, accuracy3:100.0, loss:0.5461833477020264
B(x) = 2.37070169888838e-5*x1**4 + 8.121692453642e-5*x1**3*x2 + 1.66100484782844e-5*x1**3 + 8.29563980208006e-5*x1**2*x2**2 + 4.96652947162241e-5*x1**2*x2 + 0.572905173437914*x1**2 + 2.39954414707587e-5*x1*x2**3 + 2.52676394406564e-5*x1*x2**2 + 0.35434162139472*x1*x2 - 0.785586603537418*x1 - 1.97516989380913e-6*x2**4 - 4.6142677989227e-6*x2**3 - 0.025541839942002*x2**2 + 0.126757830933642*x2 + 0.111807081129258
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:19
0-> accuracy1:100.0, accuracy2:30.827367305755615, accuracy3:100.0, loss:0.5719893574714661
10-> accuracy1:100.0, accuracy2:31.105807423591614, accuracy3:100.0, loss:0.5496256351470947
20-> accuracy1:100.0, accuracy2:37.58949935436249, accuracy3:100.0, loss:0.527001142501831
30-> accuracy1:100.0, accuracy2:37.58949935436249, accuracy3:100.0, loss:0.5125128626823425
40-> accuracy1:100.0, accuracy2:38.34526538848877, accuracy3:100.0, loss:0.4974933862686157
50-> accuracy1:100.0, accuracy2:38.94192576408386, accuracy3:100.0, loss:0.4807436168193817
60-> accuracy1:100.0, accuracy2:40.73190093040466, accuracy3:100.0, loss:0.46181705594062805
70-> accuracy1:100.0, accuracy2:42.72076487541199, accuracy3:100.0, loss:0.441240131855011
80-> accuracy1:100.0, accuracy2:46.618932485580444, accuracy3:100.0, loss:0.4186568856239319
90-> accuracy1:100.0, accuracy2:50.63643455505371, accuracy3:100.0, loss:0.39523375034332275
B(x) = 1.39571522804686e-5*x1**4 + 3.89965822546082e-5*x1**3*x2 + 1.02536317662695e-5*x1**3 + 2.64622231334695e-5*x1**2*x2**2 + 1.38103419441976e-5*x1**2*x2 + 0.784194944170319*x1**2 + 2.7702823659018e-6*x1*x2**3 - 1.7250661082003e-6*x1*x2**2 + 0.116910706645638*x1*x2 - 1.17261724260597*x1 - 3.57419910572622e-7*x2**4 - 7.33132035914074e-7*x2**3 - 0.0124740212712551*x2**2 + 0.13258372634787*x2 + 0.152884408187446
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:20
0-> accuracy1:100.0, accuracy2:53.060442209243774, accuracy3:100.0, loss:0.4275839030742645
10-> accuracy1:100.0, accuracy2:55.661821365356445, accuracy3:100.0, loss:0.4085029363632202
20-> accuracy1:100.0, accuracy2:57.15378522872925, accuracy3:100.0, loss:0.3929198086261749
30-> accuracy1:100.0, accuracy2:59.02830958366394, accuracy3:100.0, loss:0.3810671865940094
40-> accuracy1:100.0, accuracy2:59.869933128356934, accuracy3:100.0, loss:0.3717291057109833
50-> accuracy1:100.0, accuracy2:62.547820806503296, accuracy3:100.0, loss:0.3639122247695923
60-> accuracy1:100.0, accuracy2:63.7719988822937, accuracy3:100.0, loss:0.35708197951316833
70-> accuracy1:100.0, accuracy2:64.19280767440796, accuracy3:100.0, loss:0.35233673453330994
80-> accuracy1:100.0, accuracy2:64.61361646652222, accuracy3:100.0, loss:0.3492237627506256
90-> accuracy1:100.0, accuracy2:65.34047722816467, accuracy3:100.0, loss:0.3464498519897461
B(x) = 5.44619501296293e-6*x1**4 + 1.3407530545483e-5*x1**3*x2 + 4.56121844127613e-6*x1**3 + 5.89581180514879e-6*x1**2*x2**2 + 1.50304507615647e-6*x1**2*x2 + 0.67597977304055*x1**2 - 7.22018321830341e-7*x1*x2**3 - 1.91689616820672e-6*x1*x2**2 - 0.0448496775855207*x1*x2 - 1.07661098773801*x1 - 1.68195095152551e-7*x2**4 - 5.60774978689548e-8*x2**3 - 0.0153657751872479*x2**2 + 0.227329609746807*x2 + 0.132056001744632
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
Failed
Elapsed Time: 110.287959913956
