{'batch_size': 1000, 'lr': np.float64(0.26999999999999996), 'loss_weight_continuous': (1, 1, 1), 'R_b': 0.4, 'margin': 0.4, 'DEG_continuous': [2, 4, 4, 2], 'learning_loops': 100, 'max_iter': 20, 'err': 0.02677454477719443}

Mosek can be used normally.
iter:1
0-> accuracy1:0.0, accuracy2:43.09999942779541, accuracy3:0.0, loss:1.1444344520568848
10-> accuracy1:81.99999928474426, accuracy2:95.80000042915344, accuracy3:44.69999969005585, loss:6.93527889251709
20-> accuracy1:100.0, accuracy2:95.49999833106995, accuracy3:100.0, loss:1.6538562774658203
30-> accuracy1:98.1000006198883, accuracy2:98.50000143051147, accuracy3:100.0, loss:0.4521556496620178
40-> accuracy1:96.49999737739563, accuracy2:98.00000190734863, accuracy3:100.0, loss:0.7335292100906372
50-> accuracy1:100.0, accuracy2:97.39999771118164, accuracy3:100.0, loss:2.0121958255767822
60-> accuracy1:100.0, accuracy2:98.60000014305115, accuracy3:100.0, loss:0.6370041966438293
70-> accuracy1:99.59999918937683, accuracy2:98.69999885559082, accuracy3:100.0, loss:0.6158627867698669
80-> accuracy1:99.19999837875366, accuracy2:98.69999885559082, accuracy3:100.0, loss:0.44489336013793945
90-> accuracy1:99.40000176429749, accuracy2:98.7999975681305, accuracy3:100.0, loss:0.18718942999839783
B(x) = 10.7614919422803*x1**4 + 36.2260351965935*x1**3*x2 + 27.1888884951782*x1**3 + 70.9842774550844*x1**2*x2**2 - 36.424473852722*x1**2*x2 + 73.6043973534118*x1**2 + 49.2178595287402*x1*x2**3 - 83.0699687518421*x1*x2**2 + 216.73929770047*x1*x2 - 66.2637778647843*x1 + 5.39497277333988*x2**4 + 20.8079603175179*x2**3 - 25.1385129964911*x2**2 + 68.8576321280174*x2 - 21.1974902985647
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:2
0-> accuracy1:99.59999918937683, accuracy2:89.99999761581421, accuracy3:100.0, loss:0.9635783433914185
10-> accuracy1:94.40000057220459, accuracy2:90.09090662002563, accuracy3:100.0, loss:0.43835845589637756
20-> accuracy1:96.8999981880188, accuracy2:90.27272462844849, accuracy3:100.0, loss:0.15312671661376953
30-> accuracy1:95.39999961853027, accuracy2:90.45454263687134, accuracy3:97.29999899864197, loss:0.09783477336168289
40-> accuracy1:94.80000138282776, accuracy2:89.99999761581421, accuracy3:100.0, loss:0.0809263065457344
50-> accuracy1:95.89999914169312, accuracy2:90.27272462844849, accuracy3:99.29999709129333, loss:0.06803677976131439
60-> accuracy1:97.00000286102295, accuracy2:90.27272462844849, accuracy3:100.0, loss:0.06519727408885956
70-> accuracy1:97.89999723434448, accuracy2:89.99999761581421, accuracy3:100.0, loss:0.06347879767417908
80-> accuracy1:98.50000143051147, accuracy2:90.09090662002563, accuracy3:100.0, loss:0.06217983365058899
90-> accuracy1:99.29999709129333, accuracy2:89.90908861160278, accuracy3:100.0, loss:0.06093749403953552
B(x) = 1.80065141150996*x1**4 + 6.75171488506132*x1**3*x2 + 2.44890297126672*x1**3 + 10.0065755556447*x1**2*x2**2 + 0.838913198436933*x1**2*x2 + 9.33684601118143*x1**2 + 5.96518456871721*x1*x2**3 - 1.72019105132104*x1*x2**2 + 19.3087448710341*x1*x2 - 2.99494791848398*x1 + 1.26969767379863*x2**4 - 0.787945544469375*x2**3 + 7.79988670613972*x2**2 - 0.231891051106532*x2 - 0.232300544000769
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:3
0-> accuracy1:99.40000176429749, accuracy2:82.41666555404663, accuracy3:100.0, loss:0.11655766516923904
10-> accuracy1:99.59999918937683, accuracy2:82.16666579246521, accuracy3:100.0, loss:0.10989867895841599
20-> accuracy1:100.0, accuracy2:82.24999904632568, accuracy3:100.0, loss:0.1045810729265213
30-> accuracy1:100.0, accuracy2:82.16666579246521, accuracy3:100.0, loss:0.09922050684690475
40-> accuracy1:100.0, accuracy2:82.24999904632568, accuracy3:100.0, loss:0.09371266514062881
50-> accuracy1:100.0, accuracy2:82.24999904632568, accuracy3:100.0, loss:0.08800455182790756
60-> accuracy1:100.0, accuracy2:82.41666555404663, accuracy3:100.0, loss:0.08151023834943771
70-> accuracy1:100.0, accuracy2:82.58333206176758, accuracy3:100.0, loss:0.07384759932756424
80-> accuracy1:100.0, accuracy2:83.66666436195374, accuracy3:100.0, loss:0.0645236149430275
90-> accuracy1:100.0, accuracy2:85.75000166893005, accuracy3:100.0, loss:0.052927128970623016
B(x) = 0.676483781801746*x1**4 + 2.40144780328237*x1**3*x2 + 0.835992410369567*x1**3 + 3.47798204476664*x1**2*x2**2 - 0.181834269913239*x1**2*x2 + 5.03527199789288*x1**2 + 1.68335443506555*x1*x2**3 - 0.126566076857068*x1*x2**2 + 9.73083756129861*x1*x2 - 3.0725466689014*x1 + 0.325951299361234*x2**4 + 0.0517866280140351*x2**3 + 3.18420824775969*x2**2 - 1.05192743007573*x2 + 0.334290843405474
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:4
0-> accuracy1:100.0, accuracy2:81.92307949066162, accuracy3:100.0, loss:0.07977692037820816
10-> accuracy1:100.0, accuracy2:86.46153807640076, accuracy3:100.0, loss:0.060524098575115204
20-> accuracy1:100.0, accuracy2:90.69230556488037, accuracy3:100.0, loss:0.039452627301216125
30-> accuracy1:100.0, accuracy2:93.1538462638855, accuracy3:100.0, loss:0.021561801433563232
40-> accuracy1:100.0, accuracy2:99.07692074775696, accuracy3:100.0, loss:0.006786130368709564
50-> accuracy1:100.0, accuracy2:99.07692074775696, accuracy3:100.0, loss:0.001558713149279356
60-> accuracy1:100.0, accuracy2:99.07692074775696, accuracy3:100.0, loss:0.0006278493674471974
70-> accuracy1:100.0, accuracy2:99.00000095367432, accuracy3:100.0, loss:0.0004996344214305282
80-> accuracy1:100.0, accuracy2:99.00000095367432, accuracy3:100.0, loss:-0.00024713866878300905
90-> accuracy1:100.0, accuracy2:98.9230751991272, accuracy3:100.0, loss:2.823886461555958e-06
B(x) = 0.184645540455995*x1**4 + 0.676373758756374*x1**3*x2 + 0.330018092099058*x1**3 + 1.26791313648063*x1**2*x2**2 + 0.158543207372523*x1**2*x2 + 1.80234327082606*x1**2 + 0.494706106985986*x1*x2**3 + 1.41710935720338*x1*x2**2 + 4.166776464567*x1*x2 - 1.35380743363448*x1 + 0.194605480875478*x2**4 + 0.38608098613572*x2**3 + 1.55238032739343*x2**2 + 0.917271758453158*x2 + 0.69397865450587
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:5
0-> accuracy1:100.0, accuracy2:91.8571412563324, accuracy3:100.0, loss:0.07281777262687683
10-> accuracy1:100.0, accuracy2:91.92857146263123, accuracy3:100.0, loss:0.06649134308099747
20-> accuracy1:100.0, accuracy2:91.78571701049805, accuracy3:100.0, loss:0.0650419220328331
30-> accuracy1:100.0, accuracy2:91.64285659790039, accuracy3:100.0, loss:0.061052870005369186
40-> accuracy1:100.0, accuracy2:91.57142639160156, accuracy3:100.0, loss:0.06440071016550064
50-> accuracy1:100.0, accuracy2:91.57142639160156, accuracy3:100.0, loss:0.060833998024463654
60-> accuracy1:100.0, accuracy2:91.42857193946838, accuracy3:100.0, loss:0.06257452070713043
70-> accuracy1:100.0, accuracy2:91.35714173316956, accuracy3:100.0, loss:0.06197858974337578
80-> accuracy1:100.0, accuracy2:91.28571152687073, accuracy3:100.0, loss:0.061911895871162415
90-> accuracy1:100.0, accuracy2:91.28571152687073, accuracy3:100.0, loss:0.06190328672528267
B(x) = 0.0513004219448416*x1**4 + 0.164866851241348*x1**3*x2 + 0.134129346228704*x1**3 + 0.426063475792117*x1**2*x2**2 + 0.0334337713655021*x1**2*x2 + 0.675839958265473*x1**2 + 0.215864124791543*x1*x2**3 + 0.915257816658268*x1*x2**2 + 1.27481709314245*x1*x2 - 0.860550597641081*x1 + 0.0908847347438796*x2**4 + 0.227277452364546*x2**3 + 1.07627350730703*x2**2 + 1.30879188815505*x2 + 0.437208668035315
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:6
0-> accuracy1:100.0, accuracy2:85.13333201408386, accuracy3:100.0, loss:0.11429335922002792
10-> accuracy1:100.0, accuracy2:85.06666421890259, accuracy3:100.0, loss:0.11389032751321793
20-> accuracy1:100.0, accuracy2:85.06666421890259, accuracy3:100.0, loss:0.11358759552240372
30-> accuracy1:100.0, accuracy2:85.13333201408386, accuracy3:100.0, loss:0.11355520039796829
40-> accuracy1:100.0, accuracy2:85.06666421890259, accuracy3:100.0, loss:0.1135750487446785
50-> accuracy1:100.0, accuracy2:85.06666421890259, accuracy3:100.0, loss:0.11362324655056
60-> accuracy1:100.0, accuracy2:85.06666421890259, accuracy3:100.0, loss:0.11361265927553177
70-> accuracy1:100.0, accuracy2:85.06666421890259, accuracy3:100.0, loss:0.11360517889261246
80-> accuracy1:100.0, accuracy2:85.06666421890259, accuracy3:100.0, loss:0.11356708407402039
90-> accuracy1:100.0, accuracy2:85.06666421890259, accuracy3:100.0, loss:0.1135122999548912
B(x) = 0.0404605664493452*x1**4 + 0.119034091478897*x1**3*x2 + 0.141679680210548*x1**3 + 0.274866913818096*x1**2*x2**2 + 0.110291010834926*x1**2*x2 + 0.575175019778824*x1**2 + 0.165594728926435*x1*x2**3 + 0.671877951063906*x1*x2**2 + 0.80232928912103*x1*x2 - 0.775409230568824*x1 + 0.057002769721767*x2**4 + 0.111276850551737*x2**3 + 0.907270530586013*x2**2 + 1.23208418679641*x2 + 0.354439322272056
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:7
0-> accuracy1:100.0, accuracy2:79.75000143051147, accuracy3:100.0, loss:0.1556653380393982
10-> accuracy1:100.0, accuracy2:79.62499856948853, accuracy3:100.0, loss:0.15634781122207642
20-> accuracy1:100.0, accuracy2:79.62499856948853, accuracy3:100.0, loss:0.15798403322696686
30-> accuracy1:100.0, accuracy2:79.25000190734863, accuracy3:100.0, loss:0.16347020864486694
40-> accuracy1:100.0, accuracy2:79.3749988079071, accuracy3:100.0, loss:0.15762998163700104
50-> accuracy1:100.0, accuracy2:79.6875, accuracy3:100.0, loss:0.15819202363491058
60-> accuracy1:100.0, accuracy2:79.3749988079071, accuracy3:100.0, loss:0.15660041570663452
70-> accuracy1:100.0, accuracy2:79.50000166893005, accuracy3:100.0, loss:0.15670260787010193
80-> accuracy1:100.0, accuracy2:79.43750023841858, accuracy3:100.0, loss:0.1562805324792862
90-> accuracy1:100.0, accuracy2:79.43750023841858, accuracy3:100.0, loss:0.15619362890720367
B(x) = 0.0304510603310277*x1**4 + 0.0926085136378524*x1**3*x2 + 0.118506355339874*x1**3 + 0.164792806947916*x1**2*x2**2 + 0.0723194615155355*x1**2*x2 + 0.506278667338063*x1**2 + 0.130981196251283*x1*x2**3 + 0.51679389242805*x1*x2**2 + 0.488642850324163*x1*x2 - 0.772941726113646*x1 + 0.0375676191975972*x2**4 + 0.0202209136080578*x2**3 + 0.794096942928341*x2**2 + 1.25609276131588*x2 + 0.354147372227482
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:8
0-> accuracy1:100.0, accuracy2:74.8235285282135, accuracy3:100.0, loss:0.19227245450019836
10-> accuracy1:100.0, accuracy2:74.76470470428467, accuracy3:100.0, loss:0.19341477751731873
20-> accuracy1:100.0, accuracy2:74.647057056427, accuracy3:100.0, loss:0.196944922208786
30-> accuracy1:100.0, accuracy2:74.70588088035583, accuracy3:100.0, loss:0.19870398938655853
40-> accuracy1:100.0, accuracy2:74.76470470428467, accuracy3:100.0, loss:0.19756026566028595
50-> accuracy1:100.0, accuracy2:74.70588088035583, accuracy3:100.0, loss:0.19246818125247955
60-> accuracy1:100.0, accuracy2:74.76470470428467, accuracy3:100.0, loss:0.19232618808746338
70-> accuracy1:100.0, accuracy2:74.647057056427, accuracy3:100.0, loss:0.19476579129695892
80-> accuracy1:100.0, accuracy2:74.647057056427, accuracy3:100.0, loss:0.192398339509964
90-> accuracy1:100.0, accuracy2:74.647057056427, accuracy3:100.0, loss:0.19174127280712128
B(x) = 0.017909789189085*x1**4 + 0.089332146112282*x1**3*x2 + 0.0813679280645793*x1**3 + 0.0501732630920215*x1**2*x2**2 + 0.0178426114731478*x1**2*x2 + 0.537765195514932*x1**2 + 0.141049381719419*x1*x2**3 + 0.396418963150856*x1*x2**2 + 0.259041624417413*x1*x2 - 0.778920300605746*x1 + 0.00632033146381171*x2**4 - 0.0439552848554708*x2**3 + 0.787205054989457*x2**2 + 1.28543471223895*x2 + 0.324170672530015
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:9
0-> accuracy1:100.0, accuracy2:70.61111330986023, accuracy3:100.0, loss:0.22160643339157104
10-> accuracy1:100.0, accuracy2:70.49999833106995, accuracy3:100.0, loss:0.22370877861976624
20-> accuracy1:100.0, accuracy2:70.49999833106995, accuracy3:100.0, loss:0.22312338650226593
30-> accuracy1:100.0, accuracy2:70.44444680213928, accuracy3:100.0, loss:0.2237544059753418
40-> accuracy1:100.0, accuracy2:70.49999833106995, accuracy3:100.0, loss:0.22282803058624268
50-> accuracy1:100.0, accuracy2:70.49999833106995, accuracy3:100.0, loss:0.22172468900680542
60-> accuracy1:100.0, accuracy2:68.55555772781372, accuracy3:100.0, loss:0.24479414522647858
70-> accuracy1:100.0, accuracy2:70.49999833106995, accuracy3:100.0, loss:0.23023168742656708
80-> accuracy1:100.0, accuracy2:70.49999833106995, accuracy3:100.0, loss:0.22540204226970673
90-> accuracy1:100.0, accuracy2:70.61111330986023, accuracy3:100.0, loss:0.22460059821605682
B(x) = 0.0175544887868326*x1**4 + 0.0399999677396079*x1**3*x2 + 0.0570545766597557*x1**3 + 0.0836189211166361*x1**2*x2**2 + 0.0217701476219489*x1**2*x2 + 0.457759894832326*x1**2 + 0.0787759496632641*x1*x2**3 + 0.32697508759861*x1*x2**2 + 0.451736744131722*x1*x2 - 0.62273830540595*x1 - 0.00464971399217924*x2**4 - 0.142444719718016*x2**3 + 0.706426752523518*x2**2 + 1.28318691933534*x2 + 0.34149731983931
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:10
0-> accuracy1:100.0, accuracy2:66.7894721031189, accuracy3:100.0, loss:0.25355181097984314
10-> accuracy1:100.0, accuracy2:66.7894721031189, accuracy3:100.0, loss:0.2528214752674103
20-> accuracy1:100.0, accuracy2:66.7894721031189, accuracy3:100.0, loss:0.25241318345069885
30-> accuracy1:100.0, accuracy2:66.7894721031189, accuracy3:100.0, loss:0.25216197967529297
40-> accuracy1:100.0, accuracy2:66.7894721031189, accuracy3:100.0, loss:0.25185078382492065
50-> accuracy1:100.0, accuracy2:66.7894721031189, accuracy3:100.0, loss:0.25156083703041077
60-> accuracy1:100.0, accuracy2:66.7894721031189, accuracy3:100.0, loss:0.2513071298599243
70-> accuracy1:100.0, accuracy2:66.7894721031189, accuracy3:100.0, loss:0.2510107755661011
80-> accuracy1:100.0, accuracy2:66.7894721031189, accuracy3:100.0, loss:0.25078609585762024
90-> accuracy1:100.0, accuracy2:66.7894721031189, accuracy3:100.0, loss:0.25052565336227417
B(x) = 0.00597258541414314*x1**4 + 0.0390186923550086*x1**3*x2 + 0.0273897228116802*x1**3 + 0.00841966490829165*x1**2*x2**2 - 0.00781650750650806*x1**2*x2 + 0.572895655874068*x1**2 + 0.127834524748845*x1*x2**3 + 0.266394265839798*x1*x2**2 + 0.284615493467261*x1*x2 - 0.721793014096441*x1 - 0.0531092400057441*x2**4 - 0.161498384685201*x2**3 + 0.829149313731195*x2**2 + 1.34758384744767*x2 + 0.328836624526114
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:11
0-> accuracy1:100.0, accuracy2:63.450002670288086, accuracy3:100.0, loss:0.2749923765659332
10-> accuracy1:100.0, accuracy2:63.450002670288086, accuracy3:100.0, loss:0.27503564953804016
20-> accuracy1:100.0, accuracy2:63.450002670288086, accuracy3:100.0, loss:0.2745461165904999
30-> accuracy1:100.0, accuracy2:63.450002670288086, accuracy3:100.0, loss:0.2746480405330658
40-> accuracy1:100.0, accuracy2:63.450002670288086, accuracy3:100.0, loss:0.2752312123775482
50-> accuracy1:100.0, accuracy2:63.40000033378601, accuracy3:100.0, loss:0.2750294506549835
60-> accuracy1:100.0, accuracy2:63.450002670288086, accuracy3:100.0, loss:0.2749314308166504
70-> accuracy1:100.0, accuracy2:63.450002670288086, accuracy3:100.0, loss:0.27454546093940735
80-> accuracy1:100.0, accuracy2:63.450002670288086, accuracy3:100.0, loss:0.27520549297332764
90-> accuracy1:100.0, accuracy2:63.40000033378601, accuracy3:100.0, loss:0.2775728702545166
B(x) = 0.00156953189312871*x1**4 + 0.0270658931973353*x1**3*x2 + 0.013322421878804*x1**3 - 0.00960888750740074*x1**2*x2**2 - 0.0108897266883173*x1**2*x2 + 0.57700131908909*x1**2 + 0.129930975421623*x1*x2**3 + 0.217571157923735*x1*x2**2 + 0.286007896756175*x1*x2 - 0.692661459345242*x1 - 0.0805064273433632*x2**4 - 0.21256623285186*x2**3 + 0.832320200898146*x2**2 + 1.34873531024077*x2 + 0.326911534234712
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:12
0-> accuracy1:100.0, accuracy2:60.428571701049805, accuracy3:100.0, loss:0.29670843482017517
10-> accuracy1:100.0, accuracy2:60.428571701049805, accuracy3:100.0, loss:0.2970372140407562
20-> accuracy1:100.0, accuracy2:60.380953550338745, accuracy3:100.0, loss:0.29686611890792847
30-> accuracy1:100.0, accuracy2:60.428571701049805, accuracy3:100.0, loss:0.29680007696151733
40-> accuracy1:100.0, accuracy2:60.380953550338745, accuracy3:100.0, loss:0.29669979214668274
50-> accuracy1:100.0, accuracy2:60.428571701049805, accuracy3:100.0, loss:0.29682546854019165
60-> accuracy1:100.0, accuracy2:60.428571701049805, accuracy3:100.0, loss:0.29845699667930603
70-> accuracy1:100.0, accuracy2:60.380953550338745, accuracy3:100.0, loss:0.2982216775417328
80-> accuracy1:100.0, accuracy2:60.380953550338745, accuracy3:100.0, loss:0.2999535799026489
90-> accuracy1:100.0, accuracy2:60.380953550338745, accuracy3:100.0, loss:0.2970171570777893
B(x) = 0.000188551071287688*x1**4 + 0.0146217859446932*x1**3*x2 + 0.00614491901638586*x1**3 - 0.010431319752573*x1**2*x2**2 - 0.00984384207600007*x1**2*x2 + 0.558231815533438*x1**2 + 0.11214712356582*x1*x2**3 + 0.174270592199148*x1*x2**2 + 0.300401613331531*x1*x2 - 0.634179247090078*x1 - 0.0865930344336247*x2**4 - 0.240975941825531*x2**3 + 0.77178817232615*x2**2 + 1.32422615171249*x2 + 0.329461809830132
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:13
0-> accuracy1:100.0, accuracy2:57.63636231422424, accuracy3:100.0, loss:0.31729400157928467
10-> accuracy1:100.0, accuracy2:57.63636231422424, accuracy3:100.0, loss:0.320350706577301
20-> accuracy1:100.0, accuracy2:57.63636231422424, accuracy3:100.0, loss:0.3182084560394287
30-> accuracy1:100.0, accuracy2:57.63636231422424, accuracy3:100.0, loss:0.3179445266723633
40-> accuracy1:100.0, accuracy2:57.681816816329956, accuracy3:100.0, loss:0.3188245892524719
50-> accuracy1:100.0, accuracy2:57.63636231422424, accuracy3:100.0, loss:0.31779414415359497
60-> accuracy1:100.0, accuracy2:57.63636231422424, accuracy3:100.0, loss:0.3184278607368469
70-> accuracy1:100.0, accuracy2:57.63636231422424, accuracy3:100.0, loss:0.3173517882823944
80-> accuracy1:100.0, accuracy2:57.681816816329956, accuracy3:100.0, loss:0.32018762826919556
90-> accuracy1:100.0, accuracy2:57.63636231422424, accuracy3:100.0, loss:0.3188270330429077
B(x) = 4.18395132667467e-5*x1**4 + 0.00591689376942126*x1**3*x2 + 0.00193494594474695*x1**3 - 0.00603745349640153*x1**2*x2**2 - 0.00493000901948456*x1**2*x2 + 0.583712525380133*x1**2 + 0.0841225728527189*x1*x2**3 + 0.131256726203893*x1*x2**2 + 0.307679841002672*x1*x2 - 0.663632351530652*x1 - 0.068930900306469*x2**4 - 0.228499716694181*x2**3 + 0.740257167050339*x2**2 + 1.31897655339052*x2 + 0.336043028042652
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:14
0-> accuracy1:100.0, accuracy2:55.13043403625488, accuracy3:100.0, loss:0.3368096351623535
10-> accuracy1:100.0, accuracy2:55.13043403625488, accuracy3:100.0, loss:0.33671116828918457
20-> accuracy1:100.0, accuracy2:55.13043403625488, accuracy3:100.0, loss:0.3363967835903168
30-> accuracy1:100.0, accuracy2:55.13043403625488, accuracy3:100.0, loss:0.33561643958091736
40-> accuracy1:100.0, accuracy2:55.13043403625488, accuracy3:100.0, loss:0.33829739689826965
50-> accuracy1:100.0, accuracy2:55.13043403625488, accuracy3:100.0, loss:0.33652475476264954
60-> accuracy1:100.0, accuracy2:55.13043403625488, accuracy3:100.0, loss:0.3362267017364502
70-> accuracy1:100.0, accuracy2:55.17391562461853, accuracy3:100.0, loss:0.3354349136352539
80-> accuracy1:100.0, accuracy2:55.13043403625488, accuracy3:100.0, loss:0.3366713523864746
90-> accuracy1:100.0, accuracy2:55.17391562461853, accuracy3:100.0, loss:0.3354226350784302
B(x) = 3.23449708484181e-5*x1**4 + 0.00193822644329754*x1**3*x2 - 0.000464705668414766*x1**3 - 0.0180924311230039*x1**2*x2**2 - 0.0123797078448186*x1**2*x2 + 0.580611790881137*x1**2 + 0.11053795599079*x1*x2**3 + 0.158278567908609*x1*x2**2 + 0.27403616536454*x1*x2 - 0.669254930491302*x1 - 0.0941143046009225*x2**4 - 0.264132967528863*x2**3 + 0.749153654069226*x2**2 + 1.30947066444988*x2 + 0.336598139665603
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:15
0-> accuracy1:100.0, accuracy2:52.8333306312561, accuracy3:100.0, loss:0.3526918590068817
10-> accuracy1:100.0, accuracy2:52.8333306312561, accuracy3:100.0, loss:0.35245728492736816
20-> accuracy1:100.0, accuracy2:52.8333306312561, accuracy3:100.0, loss:0.3520015776157379
30-> accuracy1:100.0, accuracy2:52.8333306312561, accuracy3:100.0, loss:0.351811945438385
40-> accuracy1:100.0, accuracy2:52.8333306312561, accuracy3:100.0, loss:0.3565590977668762
50-> accuracy1:100.0, accuracy2:52.8333306312561, accuracy3:100.0, loss:0.35310453176498413
60-> accuracy1:100.0, accuracy2:52.8333306312561, accuracy3:100.0, loss:0.3537953495979309
70-> accuracy1:100.0, accuracy2:52.8333306312561, accuracy3:100.0, loss:0.3524647653102875
80-> accuracy1:100.0, accuracy2:52.8333306312561, accuracy3:100.0, loss:0.35341572761535645
90-> accuracy1:100.0, accuracy2:52.8333306312561, accuracy3:100.0, loss:0.35252562165260315
B(x) = 0.00068824278869578*x1**4 - 0.00246916585498433*x1**3*x2 - 0.00339390455089545*x1**3 - 0.0172491787194631*x1**2*x2**2 - 0.00591813520703471*x1**2*x2 + 0.586661129180151*x1**2 + 0.103694724212895*x1*x2**3 + 0.150860340043316*x1*x2**2 + 0.272312268521882*x1*x2 - 0.680083896990126*x1 - 0.0864090914594172*x2**4 - 0.26205675477523*x2**3 + 0.698746347516863*x2**2 + 1.30527257771031*x2 + 0.32501057437511
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:16
0-> accuracy1:100.0, accuracy2:50.72000026702881, accuracy3:100.0, loss:0.3694238066673279
10-> accuracy1:100.0, accuracy2:50.72000026702881, accuracy3:100.0, loss:0.36757081747055054
20-> accuracy1:100.0, accuracy2:50.63999891281128, accuracy3:100.0, loss:0.3710087537765503
30-> accuracy1:100.0, accuracy2:50.72000026702881, accuracy3:100.0, loss:0.36976125836372375
40-> accuracy1:100.0, accuracy2:50.72000026702881, accuracy3:100.0, loss:0.37143322825431824
50-> accuracy1:100.0, accuracy2:50.72000026702881, accuracy3:100.0, loss:0.36861249804496765
60-> accuracy1:100.0, accuracy2:50.72000026702881, accuracy3:100.0, loss:0.3685970604419708
70-> accuracy1:100.0, accuracy2:50.72000026702881, accuracy3:100.0, loss:0.36729228496551514
80-> accuracy1:100.0, accuracy2:50.72000026702881, accuracy3:100.0, loss:0.36711639165878296
90-> accuracy1:100.0, accuracy2:50.72000026702881, accuracy3:100.0, loss:0.36791449785232544
B(x) = 0.00183829240553129*x1**4 - 0.00721573369785698*x1**3*x2 - 0.00836471965041882*x1**3 - 0.0160449804641709*x1**2*x2**2 + 0.00406330767337885*x1**2*x2 + 0.581522281302254*x1**2 + 0.0935251815189354*x1*x2**3 + 0.151341186843378*x1*x2**2 + 0.284097847531479*x1*x2 - 0.668532518895155*x1 - 0.0693155916256413*x2**4 - 0.249875639914204*x2**3 + 0.573253818340418*x2**2 + 1.24870247973563*x2 + 0.364495393751255
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:17
0-> accuracy1:100.0, accuracy2:48.76922965049744, accuracy3:100.0, loss:0.3836464583873749
10-> accuracy1:100.0, accuracy2:48.76922965049744, accuracy3:100.0, loss:0.3822498917579651
20-> accuracy1:100.0, accuracy2:48.692306876182556, accuracy3:100.0, loss:0.38240185379981995
30-> accuracy1:100.0, accuracy2:48.730769753456116, accuracy3:100.0, loss:0.3827652931213379
40-> accuracy1:100.0, accuracy2:48.653846979141235, accuracy3:100.0, loss:0.3813716471195221
50-> accuracy1:100.0, accuracy2:48.576924204826355, accuracy3:100.0, loss:0.3825947344303131
60-> accuracy1:100.0, accuracy2:45.230770111083984, accuracy3:100.0, loss:0.3830117881298065
70-> accuracy1:100.0, accuracy2:36.8461549282074, accuracy3:100.0, loss:0.37439316511154175
80-> accuracy1:100.0, accuracy2:36.9615375995636, accuracy3:100.0, loss:0.3606262803077698
90-> accuracy1:100.0, accuracy2:36.73076927661896, accuracy3:100.0, loss:0.3093164265155792
B(x) = 0.0224275403164144*x1**4 - 0.0081776876538041*x1**3*x2 - 0.0984102137284648*x1**3 - 0.180894971630504*x1**2*x2**2 - 0.101107492956012*x1**2*x2 + 3.3098550413522*x1**2 + 0.279598240035641*x1*x2**3 + 0.866954652102594*x1*x2**2 + 0.271303416894151*x1*x2 - 1.88173875787411*x1 - 0.095729837289447*x2**4 - 0.72347240603051*x2**3 + 0.888616243674319*x2**2 + 2.2247433977127*x2 - 0.85878475331441
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:18
0-> accuracy1:99.59999918937683, accuracy2:77.81481742858887, accuracy3:100.0, loss:0.4988742768764496
10-> accuracy1:98.4000027179718, accuracy2:85.96296310424805, accuracy3:100.0, loss:0.13668043911457062
20-> accuracy1:100.0, accuracy2:88.44444155693054, accuracy3:99.6999979019165, loss:0.10030955076217651
30-> accuracy1:99.50000047683716, accuracy2:88.48147988319397, accuracy3:100.0, loss:0.0920969769358635
40-> accuracy1:98.00000190734863, accuracy2:88.55555653572083, accuracy3:100.0, loss:0.08292017877101898
50-> accuracy1:99.40000176429749, accuracy2:88.66666555404663, accuracy3:100.0, loss:0.07209626585245132
60-> accuracy1:98.60000014305115, accuracy2:89.48147892951965, accuracy3:100.0, loss:0.06109951436519623
70-> accuracy1:99.00000095367432, accuracy2:90.81481695175171, accuracy3:100.0, loss:0.051367275416851044
80-> accuracy1:97.39999771118164, accuracy2:91.55555367469788, accuracy3:100.0, loss:0.055747319012880325
90-> accuracy1:98.60000014305115, accuracy2:92.48148202896118, accuracy3:97.39999771118164, loss:0.06415732204914093
B(x) = -2.16607556234872*x1**4 + 0.808596255094767*x1**3*x2 + 0.807992786305112*x1**3 + 3.76541561174138*x1**2*x2**2 - 1.70368413067271*x1**2*x2 + 37.1942988579271*x1**2 - 1.11277185711538*x1*x2**3 + 0.977943349565213*x1*x2**2 + 64.2474434771408*x1*x2 - 6.68801753266495*x1 - 1.29172668225085*x2**4 - 0.119900537063166*x2**3 + 22.7796749910565*x2**2 + 2.00268509656518*x2 - 1.30114707659199
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 98 counterexamples!
iter:19
0-> accuracy1:99.59999918937683, accuracy2:87.56254315376282, accuracy3:98.7999975681305, loss:0.09156865626573563
10-> accuracy1:91.90000295639038, accuracy2:88.67048025131226, accuracy3:100.0, loss:0.093669593334198
20-> accuracy1:99.19999837875366, accuracy2:88.17012310028076, accuracy3:97.10000157356262, loss:0.08614803850650787
30-> accuracy1:96.39999866485596, accuracy2:89.2423152923584, accuracy3:100.0, loss:0.06983202695846558
40-> accuracy1:96.29999995231628, accuracy2:88.81343603134155, accuracy3:100.0, loss:0.08716754615306854
50-> accuracy1:97.29999899864197, accuracy2:89.0993595123291, accuracy3:100.0, loss:0.07072485983371735
60-> accuracy1:98.19999933242798, accuracy2:89.92137312889099, accuracy3:100.0, loss:0.0647733211517334
70-> accuracy1:95.20000219345093, accuracy2:90.13581275939941, accuracy3:100.0, loss:0.07393496483564377
80-> accuracy1:96.70000076293945, accuracy2:90.42173027992249, accuracy3:100.0, loss:0.061252571642398834
90-> accuracy1:99.00000095367432, accuracy2:90.20729064941406, accuracy3:100.0, loss:0.05828222259879112
B(x) = -0.0897608645417966*x1**4 + 0.418773402210408*x1**3*x2 + 0.0694843089573513*x1**3 + 0.247495472644949*x1**2*x2**2 - 0.958963761200554*x1**2*x2 + 21.5643710923398*x1**2 - 1.83759398891948*x1*x2**3 + 1.24541883218954*x1*x2**2 + 37.3831998493378*x1*x2 - 2.79533771832306*x1 - 0.405265878281707*x2**4 - 0.670533231916635*x2**3 + 8.42094192395685*x2**2 + 11.4514703521205*x2 - 4.19222581286674
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 96 counterexamples!
Add 100 counterexamples!
iter:20
0-> accuracy1:79.83576655387878, accuracy2:84.71359610557556, accuracy3:100.0, loss:0.40110498666763306
10-> accuracy1:87.22627758979797, accuracy2:79.29606437683105, accuracy3:100.0, loss:0.23362073302268982
20-> accuracy1:100.0, accuracy2:82.22912549972534, accuracy3:100.0, loss:0.18040113151073456
30-> accuracy1:98.08394312858582, accuracy2:83.33333134651184, accuracy3:100.0, loss:0.11591363698244095
40-> accuracy1:96.80656790733337, accuracy2:89.13043737411499, accuracy3:98.00000190734863, loss:0.0789252445101738
50-> accuracy1:97.26277589797974, accuracy2:90.37266969680786, accuracy3:100.0, loss:0.06024361401796341
60-> accuracy1:97.81022071838379, accuracy2:90.57971239089966, accuracy3:100.0, loss:0.06043969839811325
70-> accuracy1:97.0802903175354, accuracy2:90.89027047157288, accuracy3:97.79999852180481, loss:0.07439873367547989
80-> accuracy1:99.08758997917175, accuracy2:90.23464322090149, accuracy3:99.50000047683716, loss:0.06021115556359291
90-> accuracy1:96.89781069755554, accuracy2:90.92477560043335, accuracy3:100.0, loss:0.057731375098228455
B(x) = -0.0142819958393974*x1**4 + 0.0287012882354531*x1**3*x2 - 2.12176194897102*x1**3 + 0.12509464186861*x1**2*x2**2 + 3.48244536560494*x1**2*x2 + 37.4577536977877*x1**2 + 0.0324554459973431*x1*x2**3 + 19.2488848666571*x1*x2**2 + 71.1003773406813*x1*x2 - 9.83553666591916*x1 - 0.0216128343510835*x2**4 + 10.4932602700644*x2**3 + 31.2805105488457*x2**2 - 3.52780413544962*x2 - 0.964312360566639
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 27 counterexamples!
Add 84 counterexamples!
Failed
Elapsed Time: 109.15757124801166
