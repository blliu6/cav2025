{'batch_size': 1000, 'lr': np.float64(0.049999999999999996), 'loss_weight_continuous': (1, 1, 1), 'R_b': 0.4, 'margin': 0.4, 'DEG_continuous': [2, 4, 4, 2], 'learning_loops': 100, 'max_iter': 20, 'err': 0.02677454477719443}

Mosek can be used normally.
iter:1
0-> accuracy1:0.0, accuracy2:10.100000351667404, accuracy3:0.0, loss:1.3436415195465088
10-> accuracy1:100.0, accuracy2:93.50000023841858, accuracy3:100.0, loss:0.04947926476597786
20-> accuracy1:100.0, accuracy2:96.79999947547913, accuracy3:100.0, loss:0.01638013683259487
30-> accuracy1:100.0, accuracy2:98.19999933242798, accuracy3:100.0, loss:0.00872971210628748
40-> accuracy1:100.0, accuracy2:98.69999885559082, accuracy3:100.0, loss:0.0009877253323793411
50-> accuracy1:100.0, accuracy2:99.40000176429749, accuracy3:100.0, loss:-0.005777580197900534
60-> accuracy1:100.0, accuracy2:99.50000047683716, accuracy3:100.0, loss:-0.007035891059786081
70-> accuracy1:100.0, accuracy2:99.50000047683716, accuracy3:100.0, loss:-0.00677887536585331
80-> accuracy1:100.0, accuracy2:99.59999918937683, accuracy3:100.0, loss:-0.008378727361559868
90-> accuracy1:100.0, accuracy2:99.59999918937683, accuracy3:100.0, loss:-0.00886633899062872
B(x) = 1.86175308776038*x1**4 + 7.40882272821825*x1**3*x2 + 2.45186698612389*x1**3 + 7.59888983109741*x1**2*x2**2 + 2.6685671820817*x1**2*x2 + 7.90414521009153*x1**2 + 2.02755264465102*x1*x2**3 + 2.31048623456262*x1*x2**2 + 15.4002280678236*x1*x2 - 2.70397798929706*x1 - 0.0928465355891985*x2**4 - 1.07666822744674*x2**3 + 3.21475983060018*x2**2 + 4.88014730128001*x2 - 0.899749158471163
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:2
0-> accuracy1:100.0, accuracy2:90.54545164108276, accuracy3:100.0, loss:0.10772521048784256
10-> accuracy1:100.0, accuracy2:91.63636565208435, accuracy3:100.0, loss:0.03957651928067207
20-> accuracy1:100.0, accuracy2:98.54545593261719, accuracy3:100.0, loss:0.0062934644520282745
30-> accuracy1:100.0, accuracy2:98.45454692840576, accuracy3:100.0, loss:0.0048752655275166035
40-> accuracy1:100.0, accuracy2:98.90909194946289, accuracy3:100.0, loss:0.0015765340067446232
50-> accuracy1:100.0, accuracy2:98.90909194946289, accuracy3:100.0, loss:6.366195157170296e-05
60-> accuracy1:100.0, accuracy2:99.00000095367432, accuracy3:100.0, loss:-0.0021765786223113537
70-> accuracy1:100.0, accuracy2:98.90909194946289, accuracy3:100.0, loss:-0.0024710220750421286
80-> accuracy1:100.0, accuracy2:99.09090995788574, accuracy3:100.0, loss:-0.0029897706117480993
90-> accuracy1:100.0, accuracy2:99.09090995788574, accuracy3:100.0, loss:-0.0033670328557491302
B(x) = 2.64766179187554*x1**4 + 12.0231418074819*x1**3*x2 - 2.61596723473001*x1**3 + 13.8924889462349*x1**2*x2**2 - 5.11960998342462*x1**2*x2 + 13.8789153753629*x1**2 + 5.25420131483106*x1*x2**3 + 2.84002408406379*x1*x2**2 + 21.0298567435409*x1*x2 - 4.95133065369362*x1 + 0.404156185534503*x2**4 + 0.725635751212123*x2**3 + 8.66167448161488*x2**2 + 0.463868311198001*x2 - 0.385103132394157
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:3
0-> accuracy1:100.0, accuracy2:90.9166693687439, accuracy3:100.0, loss:0.05686262249946594
10-> accuracy1:98.4000027179718, accuracy2:97.00000286102295, accuracy3:100.0, loss:0.013706358149647713
20-> accuracy1:100.0, accuracy2:98.16666841506958, accuracy3:100.0, loss:-0.0027327765710651875
30-> accuracy1:100.0, accuracy2:99.83333349227905, accuracy3:100.0, loss:-0.008640395477414131
40-> accuracy1:100.0, accuracy2:99.41666722297668, accuracy3:100.0, loss:-0.011323951184749603
50-> accuracy1:100.0, accuracy2:99.75000023841858, accuracy3:100.0, loss:-0.012668505311012268
60-> accuracy1:100.0, accuracy2:99.08333420753479, accuracy3:100.0, loss:-0.008874217048287392
70-> accuracy1:100.0, accuracy2:99.25000071525574, accuracy3:100.0, loss:-0.008189487271010876
80-> accuracy1:100.0, accuracy2:99.83333349227905, accuracy3:100.0, loss:-0.0131832929328084
90-> accuracy1:100.0, accuracy2:99.91666674613953, accuracy3:100.0, loss:-0.013638455420732498
B(x) = 7.88979662956675*x1**4 + 38.7908073037663*x1**3*x2 - 10.2079498338752*x1**3 + 52.5134246973913*x1**2*x2**2 - 49.594416463722*x1**2*x2 + 57.327526255552*x1**2 + 21.1320206244182*x1*x2**3 - 35.8636683412845*x1*x2**2 + 110.640195441502*x1*x2 - 19.440452348577*x1 + 1.67951494882859*x2**4 - 6.79113878405098*x2**3 + 44.0375408271566*x2**2 - 3.40673141647701*x2 - 1.405427348583
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 97 counterexamples!
iter:4
0-> accuracy1:100.0, accuracy2:92.44410395622253, accuracy3:100.0, loss:0.10323917865753174
10-> accuracy1:88.30000162124634, accuracy2:89.82266783714294, accuracy3:100.0, loss:0.24250134825706482
20-> accuracy1:100.0, accuracy2:82.57517218589783, accuracy3:100.0, loss:0.17427386343479156
30-> accuracy1:100.0, accuracy2:88.51194977760315, accuracy3:100.0, loss:0.08367950469255447
40-> accuracy1:98.7999975681305, accuracy2:89.89976644515991, accuracy3:100.0, loss:0.06781920790672302
50-> accuracy1:99.00000095367432, accuracy2:91.75019264221191, accuracy3:100.0, loss:0.05926104635000229
60-> accuracy1:99.09999966621399, accuracy2:92.36699938774109, accuracy3:100.0, loss:0.054500553756952286
70-> accuracy1:98.29999804496765, accuracy2:92.44410395622253, accuracy3:100.0, loss:0.05269298329949379
80-> accuracy1:98.7999975681305, accuracy2:92.44410395622253, accuracy3:100.0, loss:0.051372721791267395
90-> accuracy1:98.7999975681305, accuracy2:92.44410395622253, accuracy3:100.0, loss:0.05004950985312462
B(x) = 4.54986641026253*x1**4 + 22.9265528932294*x1**3*x2 - 8.7284241988228*x1**3 + 39.2268715380979*x1**2*x2**2 - 23.4462295414652*x1**2*x2 + 27.3661382778232*x1**2 + 27.0469803904316*x1*x2**3 - 13.5173886467743*x1*x2**2 + 51.4935175636236*x1*x2 - 6.02345451462987*x1 + 6.67994498216888*x2**4 - 1.29530761640232*x2**3 + 21.5074183709909*x2**2 - 1.26161170915291*x2 - 0.545448761304242
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 85 counterexamples!
iter:5
0-> accuracy1:98.90000224113464, accuracy2:86.75832152366638, accuracy3:100.0, loss:0.0896843895316124
10-> accuracy1:98.4000027179718, accuracy2:86.90304160118103, accuracy3:100.0, loss:0.08667059242725372
20-> accuracy1:97.79999852180481, accuracy2:86.97539567947388, accuracy3:100.0, loss:0.08405904471874237
30-> accuracy1:97.60000109672546, accuracy2:86.97539567947388, accuracy3:100.0, loss:0.08429458737373352
40-> accuracy1:97.2000002861023, accuracy2:87.19247579574585, accuracy3:100.0, loss:0.08623581379652023
50-> accuracy1:97.00000286102295, accuracy2:87.40954995155334, accuracy3:100.0, loss:0.08561244606971741
60-> accuracy1:98.90000224113464, accuracy2:86.97539567947388, accuracy3:100.0, loss:0.08698906749486923
70-> accuracy1:98.19999933242798, accuracy2:87.12011575698853, accuracy3:100.0, loss:0.08360383659601212
80-> accuracy1:97.60000109672546, accuracy2:87.40954995155334, accuracy3:100.0, loss:0.08036293834447861
90-> accuracy1:99.19999837875366, accuracy2:87.40954995155334, accuracy3:100.0, loss:0.0897749811410904
B(x) = 5.36933515855702*x1**4 + 19.7593783387277*x1**3*x2 - 3.69351826369483*x1**3 + 29.3426179718366*x1**2*x2**2 - 13.4058830739543*x1**2*x2 + 35.6496111669393*x1**2 + 20.1457002428871*x1*x2**3 - 1.94944474479387*x1*x2**2 + 68.0018043349517*x1*x2 - 11.3744422594319*x1 + 5.92727419442571*x2**4 + 3.71713688917703*x2**3 + 28.6342248183981*x2**2 - 2.93125572169364*x2 - 0.818041746663643
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 97 counterexamples!
iter:6
0-> accuracy1:100.0, accuracy2:79.44557070732117, accuracy3:100.0, loss:0.19477243721485138
10-> accuracy1:88.89999985694885, accuracy2:81.33874535560608, accuracy3:100.0, loss:0.1405479460954666
20-> accuracy1:95.09999752044678, accuracy2:79.1075050830841, accuracy3:100.0, loss:0.12484569102525711
30-> accuracy1:97.39999771118164, accuracy2:78.02569270133972, accuracy3:100.0, loss:0.11838633567094803
40-> accuracy1:98.60000014305115, accuracy2:80.52738308906555, accuracy3:100.0, loss:0.10571631044149399
50-> accuracy1:100.0, accuracy2:86.74780130386353, accuracy3:99.40000176429749, loss:0.09788193553686142
60-> accuracy1:100.0, accuracy2:92.08924770355225, accuracy3:91.90000295639038, loss:0.12071637809276581
70-> accuracy1:100.0, accuracy2:91.210275888443, accuracy3:100.0, loss:0.11081705242395401
80-> accuracy1:100.0, accuracy2:91.61595702171326, accuracy3:100.0, loss:0.06640784442424774
90-> accuracy1:100.0, accuracy2:92.08924770355225, accuracy3:100.0, loss:0.06455497443675995
B(x) = 1.99822325635589*x1**4 + 7.82058169186758*x1**3*x2 - 0.782555830273058*x1**3 + 11.8783532336139*x1**2*x2**2 - 2.42540643363891*x1**2*x2 + 5.8330403032628*x1**2 + 9.96910573872443*x1*x2**3 + 4.27003450559483*x1*x2**2 + 10.7091226401653*x1*x2 - 3.63477112071164*x1 + 3.67265568881242*x2**4 + 2.17619770940663*x2**3 + 3.35989267479045*x2**2 + 0.287806910324679*x2 + 1.20359009409199
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:7
0-> accuracy1:100.0, accuracy2:86.44711971282959, accuracy3:100.0, loss:0.12863130867481232
10-> accuracy1:100.0, accuracy2:86.06712818145752, accuracy3:100.0, loss:0.1032477617263794
20-> accuracy1:100.0, accuracy2:85.94046831130981, accuracy3:100.0, loss:0.09847277402877808
30-> accuracy1:100.0, accuracy2:86.06712818145752, accuracy3:100.0, loss:0.09456267207860947
40-> accuracy1:100.0, accuracy2:86.13046407699585, accuracy3:100.0, loss:0.09306348860263824
50-> accuracy1:100.0, accuracy2:86.44711971282959, accuracy3:100.0, loss:0.11943264305591583
60-> accuracy1:100.0, accuracy2:86.32045388221741, accuracy3:100.0, loss:0.10518385469913483
70-> accuracy1:100.0, accuracy2:86.51044964790344, accuracy3:100.0, loss:0.13085873425006866
80-> accuracy1:100.0, accuracy2:80.05066514015198, accuracy3:100.0, loss:0.1213255301117897
90-> accuracy1:100.0, accuracy2:86.25712394714355, accuracy3:100.0, loss:0.11065902560949326
B(x) = 2.00013321823985*x1**4 + 7.10661269668975*x1**3*x2 + 1.20725337870102*x1**3 + 10.3896072645272*x1**2*x2**2 + 0.724875009409798*x1**2*x2 + 2.57738582978317*x1**2 + 6.86400922146007*x1*x2**3 + 5.3731813186264*x1*x2**2 + 5.9928483179192*x1*x2 - 3.5618127758588*x1 + 2.17017784399405*x2**4 + 2.55931259995689*x2**3 + 1.60408640644553*x2**2 - 0.761306051578562*x2 + 0.739085949531404
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:8
0-> accuracy1:100.0, accuracy2:81.11971616744995, accuracy3:100.0, loss:0.155849888920784
10-> accuracy1:100.0, accuracy2:81.17927312850952, accuracy3:100.0, loss:0.14177533984184265
20-> accuracy1:100.0, accuracy2:80.94103336334229, accuracy3:100.0, loss:0.13473497331142426
30-> accuracy1:100.0, accuracy2:80.82191944122314, accuracy3:100.0, loss:0.133180633187294
40-> accuracy1:100.0, accuracy2:80.88147640228271, accuracy3:100.0, loss:0.13220208883285522
50-> accuracy1:100.0, accuracy2:80.94103336334229, accuracy3:100.0, loss:0.1317012757062912
60-> accuracy1:100.0, accuracy2:80.88147640228271, accuracy3:100.0, loss:0.13043197989463806
70-> accuracy1:100.0, accuracy2:80.82191944122314, accuracy3:100.0, loss:0.17958399653434753
80-> accuracy1:100.0, accuracy2:81.00059628486633, accuracy3:100.0, loss:0.161082461476326
90-> accuracy1:100.0, accuracy2:80.88147640228271, accuracy3:100.0, loss:0.14444029331207275
B(x) = 0.671311350076889*x1**4 + 2.99899700460433*x1**3*x2 + 0.052398293376694*x1**3 + 5.55612218450445*x1**2*x2**2 + 0.0536936943565378*x1**2*x2 + 0.658854430304079*x1**2 + 4.46997611451239*x1*x2**3 + 1.89750500205246*x1*x2**2 + 1.53262351615137*x1*x2 - 1.0017467763847*x1 + 1.34106046924838*x2**4 + 0.951873410811174*x2**3 + 0.853764886039977*x2**2 + 0.752550135166137*x2 + 0.371742283550508
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:9
0-> accuracy1:100.0, accuracy2:76.11017227172852, accuracy3:100.0, loss:0.17756760120391846
10-> accuracy1:100.0, accuracy2:76.27880573272705, accuracy3:100.0, loss:0.17363667488098145
20-> accuracy1:100.0, accuracy2:76.22259855270386, accuracy3:100.0, loss:0.1737888902425766
30-> accuracy1:100.0, accuracy2:76.55986547470093, accuracy3:100.0, loss:0.1786811202764511
40-> accuracy1:100.0, accuracy2:76.27880573272705, accuracy3:100.0, loss:0.1741052269935608
50-> accuracy1:100.0, accuracy2:76.16638541221619, accuracy3:100.0, loss:0.18008826673030853
60-> accuracy1:100.0, accuracy2:76.16638541221619, accuracy3:100.0, loss:0.17345421016216278
70-> accuracy1:100.0, accuracy2:76.11017227172852, accuracy3:100.0, loss:0.1722000241279602
80-> accuracy1:100.0, accuracy2:76.11017227172852, accuracy3:100.0, loss:0.168912872672081
90-> accuracy1:100.0, accuracy2:76.16638541221619, accuracy3:100.0, loss:0.16877904534339905
B(x) = 0.769718197258557*x1**4 + 4.03228484529401*x1**3*x2 + 0.403994549066486*x1**3 + 7.40129652344443*x1**2*x2**2 + 1.71892529427492*x1**2*x2 + 1.16016259301694*x1**2 + 6.44111106740263*x1*x2**3 + 3.7867102170377*x1*x2**2 + 1.3528487274708*x1*x2 - 1.25551565430376*x1 + 1.93741403022476*x2**4 + 1.72549360818855*x2**3 + 1.44831468270061*x2**2 + 1.14197335341311*x2 + 0.437847391476498
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:10
0-> accuracy1:100.0, accuracy2:72.2192645072937, accuracy3:100.0, loss:0.2000618726015091
10-> accuracy1:100.0, accuracy2:72.16604351997375, accuracy3:100.0, loss:0.19919045269489288
20-> accuracy1:100.0, accuracy2:72.11282849311829, accuracy3:100.0, loss:0.19848677515983582
30-> accuracy1:100.0, accuracy2:72.05960750579834, accuracy3:100.0, loss:0.2528737485408783
40-> accuracy1:100.0, accuracy2:55.88078498840332, accuracy3:100.0, loss:0.26123958826065063
50-> accuracy1:100.0, accuracy2:63.59766125679016, accuracy3:100.0, loss:0.2449435591697693
60-> accuracy1:100.0, accuracy2:72.16604351997375, accuracy3:100.0, loss:0.23675575852394104
70-> accuracy1:100.0, accuracy2:72.3257064819336, accuracy3:100.0, loss:0.2099807858467102
80-> accuracy1:100.0, accuracy2:71.95316553115845, accuracy3:100.0, loss:0.2035488337278366
90-> accuracy1:100.0, accuracy2:72.2192645072937, accuracy3:100.0, loss:0.20902663469314575
B(x) = 0.591717567448125*x1**4 + 2.83301602905227*x1**3*x2 + 0.385340079641167*x1**3 + 6.00149164649308*x1**2*x2**2 + 1.12541512424542*x1**2*x2 + 0.823279739358613*x1**2 + 5.58176144133828*x1*x2**3 + 2.53556012261624*x1*x2**2 + 0.944635600726168*x1*x2 - 1.29503415152879*x1 + 1.83378768078652*x2**4 + 1.04103169925203*x2**3 + 0.608925447997325*x2**2 + 0.908520962305334*x2 + 0.476427370479852
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:11
0-> accuracy1:100.0, accuracy2:68.56998205184937, accuracy3:100.0, loss:0.2401728630065918
10-> accuracy1:100.0, accuracy2:68.31732988357544, accuracy3:100.0, loss:0.23462185263633728
20-> accuracy1:100.0, accuracy2:68.21627020835876, accuracy3:100.0, loss:0.23034995794296265
30-> accuracy1:100.0, accuracy2:68.31732988357544, accuracy3:100.0, loss:0.2279665470123291
40-> accuracy1:100.0, accuracy2:68.31732988357544, accuracy3:100.0, loss:0.22680796682834625
50-> accuracy1:100.0, accuracy2:68.31732988357544, accuracy3:100.0, loss:0.22646473348140717
60-> accuracy1:100.0, accuracy2:68.36786270141602, accuracy3:100.0, loss:0.22656263411045074
70-> accuracy1:100.0, accuracy2:68.46892237663269, accuracy3:100.0, loss:0.2266104817390442
80-> accuracy1:100.0, accuracy2:68.41839551925659, accuracy3:100.0, loss:0.2263101488351822
90-> accuracy1:100.0, accuracy2:68.36786270141602, accuracy3:100.0, loss:0.22670337557792664
B(x) = 0.683026200967818*x1**4 + 3.72329329623914*x1**3*x2 + 0.327632211248825*x1**3 + 7.60522844887977*x1**2*x2**2 + 2.67907071450842*x1**2*x2 + 1.3419777749344*x1**2 + 7.08537696933824*x1*x2**3 + 4.70923712050174*x1*x2**2 + 0.910967749907024*x1*x2 - 1.29267303767806*x1 + 2.28099859538235*x2**4 + 1.99770794876627*x2**3 + 1.0655751823505*x2**2 + 1.04998390348386*x2 + 0.386872932203641
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:12
0-> accuracy1:100.0, accuracy2:65.07936716079712, accuracy3:100.0, loss:0.2510811984539032
10-> accuracy1:100.0, accuracy2:65.07936716079712, accuracy3:100.0, loss:0.2510342597961426
20-> accuracy1:100.0, accuracy2:65.07936716079712, accuracy3:100.0, loss:0.2506813704967499
30-> accuracy1:100.0, accuracy2:65.07936716079712, accuracy3:100.0, loss:0.2505594491958618
40-> accuracy1:100.0, accuracy2:65.07936716079712, accuracy3:100.0, loss:0.2509920597076416
50-> accuracy1:100.0, accuracy2:65.07936716079712, accuracy3:100.0, loss:0.2506396770477295
60-> accuracy1:100.0, accuracy2:65.07936716079712, accuracy3:100.0, loss:0.25044509768486023
70-> accuracy1:100.0, accuracy2:65.07936716079712, accuracy3:100.0, loss:0.25065553188323975
80-> accuracy1:100.0, accuracy2:65.07936716079712, accuracy3:100.0, loss:0.2504907548427582
90-> accuracy1:100.0, accuracy2:65.07936716079712, accuracy3:100.0, loss:0.2503792941570282
B(x) = 0.849863342656719*x1**4 + 4.42316918713878*x1**3*x2 + 0.267838672633365*x1**3 + 8.85459158664309*x1**2*x2**2 + 2.96702375507023*x1**2*x2 + 1.45718733733225*x1**2 + 8.09574240200436*x1*x2**3 + 5.15706207927136*x1*x2**2 + 0.783780771990379*x1*x2 - 1.39426085654677*x1 + 2.58348237238077*x2**4 + 2.11800680992995*x2**3 + 0.785308963918328*x2**2 + 0.89625394621105*x2 + 0.386629333625742
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:13
0-> accuracy1:100.0, accuracy2:62.09270358085632, accuracy3:100.0, loss:0.27239200472831726
10-> accuracy1:100.0, accuracy2:62.09270358085632, accuracy3:100.0, loss:0.27238163352012634
20-> accuracy1:100.0, accuracy2:62.09270358085632, accuracy3:100.0, loss:0.2724538743495941
30-> accuracy1:100.0, accuracy2:62.09270358085632, accuracy3:100.0, loss:0.2723246216773987
40-> accuracy1:100.0, accuracy2:62.09270358085632, accuracy3:100.0, loss:0.27182844281196594
50-> accuracy1:100.0, accuracy2:62.09270358085632, accuracy3:100.0, loss:0.27190691232681274
60-> accuracy1:100.0, accuracy2:62.09270358085632, accuracy3:100.0, loss:0.2718583345413208
70-> accuracy1:100.0, accuracy2:62.09270358085632, accuracy3:100.0, loss:0.2718009948730469
80-> accuracy1:100.0, accuracy2:62.09270358085632, accuracy3:100.0, loss:0.27180832624435425
90-> accuracy1:100.0, accuracy2:62.09270358085632, accuracy3:100.0, loss:0.27182871103286743
B(x) = 1.0413750278012*x1**4 + 5.24725141423601*x1**3*x2 + 0.212379837012116*x1**3 + 10.3391648822652*x1**2*x2**2 + 3.1347889673474*x1**2*x2 + 1.52703411771444*x1**2 + 9.38794109687963*x1*x2**3 + 5.58284572516603*x1*x2**2 + 0.738074215861046*x1*x2 - 1.46125751643018*x1 + 3.035768835355*x2**4 + 2.35501279418301*x2**3 + 0.580020043071602*x2**2 + 0.743895829972802*x2 + 0.391428043945664
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:14
0-> accuracy1:100.0, accuracy2:59.36814546585083, accuracy3:100.0, loss:0.2918524146080017
10-> accuracy1:100.0, accuracy2:59.36814546585083, accuracy3:100.0, loss:0.2916671633720398
20-> accuracy1:100.0, accuracy2:59.36814546585083, accuracy3:100.0, loss:0.2916204333305359
30-> accuracy1:100.0, accuracy2:59.36814546585083, accuracy3:100.0, loss:0.2916562557220459
40-> accuracy1:100.0, accuracy2:59.36814546585083, accuracy3:100.0, loss:0.29179811477661133
50-> accuracy1:100.0, accuracy2:59.36814546585083, accuracy3:100.0, loss:0.29160282015800476
60-> accuracy1:100.0, accuracy2:59.36814546585083, accuracy3:100.0, loss:0.2918608486652374
70-> accuracy1:100.0, accuracy2:59.36814546585083, accuracy3:100.0, loss:0.2921351194381714
80-> accuracy1:100.0, accuracy2:59.36814546585083, accuracy3:100.0, loss:0.2916935086250305
90-> accuracy1:100.0, accuracy2:59.36814546585083, accuracy3:100.0, loss:0.291420042514801
B(x) = 1.23959336662765*x1**4 + 6.00777208547396*x1**3*x2 + 0.150700294528784*x1**3 + 11.6080056598*x1**2*x2**2 + 3.20842465305578*x1**2*x2 + 1.59008770093047*x1**2 + 10.5201946479729*x1*x2**3 + 5.99897753605417*x1*x2**2 + 0.698073323460919*x1*x2 - 1.56607872291874*x1 + 3.46376470729263*x2**4 + 2.60067106893637*x2**3 + 0.381608080704798*x2**2 + 0.567765928915314*x2 + 0.371833601743956
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:15
0-> accuracy1:100.0, accuracy2:56.87263607978821, accuracy3:100.0, loss:0.3093115985393524
10-> accuracy1:100.0, accuracy2:56.8306028842926, accuracy3:100.0, loss:0.3092693090438843
20-> accuracy1:100.0, accuracy2:56.8306028842926, accuracy3:100.0, loss:0.3092145025730133
30-> accuracy1:100.0, accuracy2:56.8306028842926, accuracy3:100.0, loss:0.309251070022583
40-> accuracy1:100.0, accuracy2:56.578391790390015, accuracy3:100.0, loss:0.30877557396888733
50-> accuracy1:100.0, accuracy2:55.10718822479248, accuracy3:100.0, loss:0.3077217638492584
60-> accuracy1:100.0, accuracy2:51.02984309196472, accuracy3:100.0, loss:0.3060871958732605
70-> accuracy1:100.0, accuracy2:45.607396960258484, accuracy3:100.0, loss:0.2982511520385742
80-> accuracy1:98.50000143051147, accuracy2:42.49684810638428, accuracy3:100.0, loss:0.23697829246520996
90-> accuracy1:67.40000247955322, accuracy2:89.99579548835754, accuracy3:100.0, loss:0.2794052064418793
B(x) = 3.0796502134099*x1**4 + 16.1139598166686*x1**3*x2 + 2.8452175461249*x1**3 + 31.2913897479127*x1**2*x2**2 + 15.8116271666942*x1**2*x2 + 6.10988412926193*x1**2 + 26.6408657072932*x1*x2**3 + 25.950192297703*x1*x2**2 + 12.27820670949*x1*x2 - 2.81680938517761*x1 + 8.33219359391982*x2**4 + 11.7622508489148*x2**3 + 5.96389055842455*x2**2 - 1.20906560502599*x2 - 0.308674060781434
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 51 counterexamples!
Add 97 counterexamples!
iter:16
0-> accuracy1:85.3472888469696, accuracy2:83.80452394485474, accuracy3:100.0, loss:0.15980315208435059
10-> accuracy1:98.28734397888184, accuracy2:85.37964224815369, accuracy3:100.0, loss:0.11735255271196365
20-> accuracy1:95.71836590766907, accuracy2:88.1663978099823, accuracy3:100.0, loss:0.09126128256320953
30-> accuracy1:97.52616286277771, accuracy2:89.5395815372467, accuracy3:100.0, loss:0.07729128748178482
40-> accuracy1:96.19410037994385, accuracy2:91.11469984054565, accuracy3:100.0, loss:0.08930903673171997
50-> accuracy1:94.67174410820007, accuracy2:91.07431173324585, accuracy3:100.0, loss:0.07976754009723663
60-> accuracy1:98.953378200531, accuracy2:90.8723771572113, accuracy3:100.0, loss:0.06761474907398224
70-> accuracy1:96.38439416885376, accuracy2:92.00323224067688, accuracy3:100.0, loss:0.07241583615541458
80-> accuracy1:96.38439416885376, accuracy2:88.97415399551392, accuracy3:95.70000171661377, loss:0.10736557096242905
90-> accuracy1:98.85823130607605, accuracy2:87.35864162445068, accuracy3:99.80000257492065, loss:0.09635373950004578
B(x) = 10.0225029095806*x1**4 + 56.6556560961998*x1**3*x2 + 5.69861390906211*x1**3 + 112.873374247324*x1**2*x2**2 + 45.2403440976515*x1**2*x2 + 45.1084701507358*x1**2 + 97.3563196268775*x1*x2**3 + 87.1979167564687*x1*x2**2 + 84.0195094768482*x1*x2 - 15.7722804810729*x1 + 31.3979910604411*x2**4 + 43.947192469855*x2**3 + 34.0457626866399*x2**2 - 9.51389622181726*x2 + 0.119547883075653
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 85 counterexamples!
iter:17
0-> accuracy1:97.81160950660706, accuracy2:87.7001166343689, accuracy3:100.0, loss:0.1015622615814209
10-> accuracy1:96.19410037994385, accuracy2:86.17727160453796, accuracy3:100.0, loss:0.10268639028072357
20-> accuracy1:98.00190329551697, accuracy2:88.24678063392639, accuracy3:100.0, loss:0.08937666565179825
30-> accuracy1:95.14747858047485, accuracy2:87.9734456539154, accuracy3:100.0, loss:0.10967953503131866
40-> accuracy1:96.76498770713806, accuracy2:86.84107661247253, accuracy3:100.0, loss:0.11926009505987167
50-> accuracy1:95.43291926383972, accuracy2:82.50683546066284, accuracy3:100.0, loss:0.16884732246398926
60-> accuracy1:97.43101596832275, accuracy2:84.381103515625, accuracy3:100.0, loss:0.13171161711215973
70-> accuracy1:98.00190329551697, accuracy2:84.92776155471802, accuracy3:100.0, loss:0.11315392702817917
80-> accuracy1:98.09705018997192, accuracy2:84.8496675491333, accuracy3:100.0, loss:0.10481575131416321
90-> accuracy1:96.76498770713806, accuracy2:87.15345859527588, accuracy3:100.0, loss:0.09732331335544586
B(x) = 8.17961688558659*x1**4 + 43.8828424106922*x1**3*x2 + 0.333057806128612*x1**3 + 85.8584928672524*x1**2*x2**2 + 27.9831020553758*x1**2*x2 + 36.8013622286354*x1**2 + 72.4360481334925*x1*x2**3 + 71.3012952184602*x1*x2**2 + 66.1568370396092*x1*x2 - 11.4502859285566*x1 + 24.0527922770825*x2**4 + 37.1859369496552*x2**3 + 26.3540760230075*x2**2 - 5.47063373460211*x2 - 0.285596459963258
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 79 counterexamples!
iter:18
0-> accuracy1:97.7164626121521, accuracy2:84.81060862541199, accuracy3:100.0, loss:0.11228185147047043
10-> accuracy1:95.81351280212402, accuracy2:85.90909242630005, accuracy3:100.0, loss:0.1088477075099945
20-> accuracy1:97.7164626121521, accuracy2:86.17424368858337, accuracy3:100.0, loss:0.10690746456384659
30-> accuracy1:96.6698408126831, accuracy2:86.70454621315002, accuracy3:100.0, loss:0.10693433880805969
40-> accuracy1:95.14747858047485, accuracy2:87.04545497894287, accuracy3:100.0, loss:0.10819272696971893
50-> accuracy1:96.09895348548889, accuracy2:86.78030371665955, accuracy3:100.0, loss:0.11186157166957855
60-> accuracy1:96.19410037994385, accuracy2:86.17424368858337, accuracy3:100.0, loss:0.10762721300125122
70-> accuracy1:97.05042839050293, accuracy2:86.32575869560242, accuracy3:100.0, loss:0.11137939989566803
80-> accuracy1:94.38629746437073, accuracy2:87.42424249649048, accuracy3:100.0, loss:0.10944962501525879
90-> accuracy1:93.91056299209595, accuracy2:86.59090995788574, accuracy3:100.0, loss:0.11635100841522217
B(x) = 13.0060467557511*x1**4 + 60.520520315122*x1**3*x2 - 8.21737438506081*x1**3 + 112.746943331754*x1**2*x2**2 + 30.4469399812703*x1**2*x2 + 53.5187243761223*x1**2 + 99.6178130843264*x1*x2**3 + 101.680104522797*x1*x2**2 + 96.7422477876863*x1*x2 - 14.0949611762119*x1 + 34.8448632716314*x2**4 + 56.8206530954326*x2**3 + 40.3685194570828*x2**2 - 8.24981238312288*x2 - 0.092582841879123
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 75 counterexamples!
iter:19
0-> accuracy1:97.90675640106201, accuracy2:83.46224427223206, accuracy3:100.0, loss:0.12670619785785675
10-> accuracy1:95.24262547492981, accuracy2:84.1252326965332, accuracy3:100.0, loss:0.1227695569396019
20-> accuracy1:96.09895348548889, accuracy2:84.45672392845154, accuracy3:100.0, loss:0.12314820289611816
30-> accuracy1:96.95528149604797, accuracy2:84.27255749702454, accuracy3:100.0, loss:0.12124427407979965
40-> accuracy1:95.52806615829468, accuracy2:84.56721901893616, accuracy3:100.0, loss:0.12288971245288849
50-> accuracy1:96.76498770713806, accuracy2:84.27255749702454, accuracy3:100.0, loss:0.12388411164283752
60-> accuracy1:95.71836590766907, accuracy2:84.78821516036987, accuracy3:100.0, loss:0.12241574376821518
70-> accuracy1:97.52616286277771, accuracy2:83.83057117462158, accuracy3:100.0, loss:0.12805481255054474
80-> accuracy1:94.76689100265503, accuracy2:84.1252326965332, accuracy3:100.0, loss:0.1304721087217331
90-> accuracy1:93.6251163482666, accuracy2:84.16206240653992, accuracy3:100.0, loss:0.12502421438694
B(x) = 11.3232440801634*x1**4 + 55.1515313748222*x1**3*x2 - 6.77030250700026*x1**3 + 105.388104615682*x1**2*x2**2 + 22.3829423728508*x1**2*x2 + 48.7652575248517*x1**2 + 92.2574997763036*x1*x2**3 + 82.3184905230343*x1*x2**2 + 87.0663536355495*x1*x2 - 14.9571617468959*x1 + 31.6176808103274*x2**4 + 46.9501195403054*x2**3 + 35.5238121961813*x2**2 - 9.14932111599819*x2 - 0.0786434501279376
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 79 counterexamples!
iter:20
0-> accuracy1:95.52806615829468, accuracy2:81.9255530834198, accuracy3:100.0, loss:0.14469215273857117
10-> accuracy1:94.0057098865509, accuracy2:80.171799659729, accuracy3:100.0, loss:0.14409570395946503
20-> accuracy1:95.52806615829468, accuracy2:81.28131628036499, accuracy3:100.0, loss:0.14329145848751068
30-> accuracy1:94.29115056991577, accuracy2:81.81818127632141, accuracy3:100.0, loss:0.1407267302274704
40-> accuracy1:94.0057098865509, accuracy2:82.14030265808105, accuracy3:100.0, loss:0.13977545499801636
50-> accuracy1:96.95528149604797, accuracy2:80.99498748779297, accuracy3:100.0, loss:0.1470709890127182
60-> accuracy1:93.72026920318604, accuracy2:81.81818127632141, accuracy3:100.0, loss:0.14456291496753693
70-> accuracy1:93.24452877044678, accuracy2:81.31710886955261, accuracy3:100.0, loss:0.1454710066318512
80-> accuracy1:93.91056299209595, accuracy2:81.31710886955261, accuracy3:100.0, loss:0.14365993440151215
90-> accuracy1:94.38629746437073, accuracy2:80.70865869522095, accuracy3:100.0, loss:0.14124362170696259
B(x) = 12.3691494835355*x1**4 + 58.7636313021973*x1**3*x2 - 10.5290031246734*x1**3 + 107.653327671617*x1**2*x2**2 + 13.4562637025266*x1**2*x2 + 48.6300177043214*x1**2 + 90.9097452518232*x1*x2**3 + 75.930293231143*x1*x2**2 + 87.0853533127381*x1*x2 - 13.4319583241617*x1 + 30.536452900019*x2**4 + 45.6050175214561*x2**3 + 36.0408350240343*x2**2 - 7.95600818024024*x2 - 0.229264179614389
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 72 counterexamples!
Failed
Elapsed Time: 112.97034805105068
