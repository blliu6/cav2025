{'batch_size': 500, 'lr': np.float64(0.20999999999999996), 'loss_weight_continuous': (1, 1, 1), 'R_b': 0.4, 'margin': 0.4, 'DEG_continuous': [2, 4, 4, 2], 'learning_loops': 100, 'max_iter': 20, 'err': 0.24416471067351453}

Mosek can be used normally.
iter:1
0-> accuracy1:0.0, accuracy2:63.599997758865356, accuracy3:0.0, loss:0.9483636021614075
10-> accuracy1:97.79999852180481, accuracy2:95.99999785423279, accuracy3:18.60000044107437, loss:4.025563716888428
20-> accuracy1:100.0, accuracy2:93.80000233650208, accuracy3:100.0, loss:5.121784687042236
30-> accuracy1:75.99999904632568, accuracy2:95.80000042915344, accuracy3:71.20000123977661, loss:105.250244140625
40-> accuracy1:100.0, accuracy2:89.99999761581421, accuracy3:100.0, loss:35.43042755126953
50-> accuracy1:82.8000009059906, accuracy2:97.00000286102295, accuracy3:100.0, loss:13.347551345825195
60-> accuracy1:100.0, accuracy2:96.60000205039978, accuracy3:100.0, loss:11.267501831054688
70-> accuracy1:91.60000085830688, accuracy2:96.60000205039978, accuracy3:100.0, loss:63.200347900390625
80-> accuracy1:90.79999923706055, accuracy2:97.2000002861023, accuracy3:100.0, loss:37.69282531738281
90-> accuracy1:93.80000233650208, accuracy2:97.60000109672546, accuracy3:100.0, loss:14.964557647705078
B(x) = -86.4653960723139*x1**4 + 1019.90636670049*x1**3*x2 + 1671.85373722381*x1**3 + 1346.39522930529*x1**2*x2**2 + 429.305648682615*x1**2*x2 + 5.32320146851197*x1**2 + 810.715536445607*x1*x2**3 + 2299.56491677429*x1*x2**2 - 1218.06693205156*x1*x2 - 1869.06631857989*x1 + 346.318045926933*x2**4 - 410.023012454335*x2**3 - 2973.99417598864*x2**2 + 3357.49317577898*x2 - 932.592887332521
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:2
0-> accuracy1:95.59999704360962, accuracy2:81.66666626930237, accuracy3:100.0, loss:400.02410888671875
10-> accuracy1:63.40000033378601, accuracy2:97.66666889190674, accuracy3:100.0, loss:33.803524017333984
20-> accuracy1:81.5999984741211, accuracy2:98.50000143051147, accuracy3:100.0, loss:6.2579193115234375
30-> accuracy1:83.39999914169312, accuracy2:98.66666793823242, accuracy3:100.0, loss:2.3585293292999268
40-> accuracy1:86.19999885559082, accuracy2:96.49999737739563, accuracy3:98.4000027179718, loss:2.8241655826568604
50-> accuracy1:87.99999952316284, accuracy2:91.8333351612091, accuracy3:100.0, loss:1.234433889389038
60-> accuracy1:82.8000009059906, accuracy2:89.33333158493042, accuracy3:100.0, loss:9.533493041992188
70-> accuracy1:75.59999823570251, accuracy2:93.66666674613953, accuracy3:100.0, loss:6.24282693862915
80-> accuracy1:85.39999723434448, accuracy2:98.50000143051147, accuracy3:100.0, loss:2.2538185119628906
90-> accuracy1:5.60000017285347, accuracy2:99.6666669845581, accuracy3:100.0, loss:103.57894134521484
B(x) = 29.092214283344*x1**4 + 105.846322164997*x1**3*x2 + 93.2974661182017*x1**3 + 17.0182500184114*x1**2*x2**2 - 105.596015680176*x1**2*x2 + 28.4776275543089*x1**2 + 86.622112726666*x1*x2**3 + 89.001447625432*x1*x2**2 - 38.3968833898276*x1*x2 - 156.660595223736*x1 - 12.3055281787747*x2**4 - 47.1358491795703*x2**3 - 61.1376354712428*x2**2 + 270.096057088167*x2 - 112.115038879332
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
Add 100 counterexamples!
iter:3
0-> accuracy1:73.66666793823242, accuracy2:66.00000262260437, accuracy3:100.0, loss:37.69218063354492
10-> accuracy1:46.83333337306976, accuracy2:71.71428799629211, accuracy3:100.0, loss:51.06974792480469
20-> accuracy1:35.66666543483734, accuracy2:86.8571400642395, accuracy3:100.0, loss:22.387746810913086
30-> accuracy1:56.833332777023315, accuracy2:84.42857265472412, accuracy3:100.0, loss:33.184852600097656
40-> accuracy1:37.166666984558105, accuracy2:84.5714271068573, accuracy3:100.0, loss:20.120235443115234
50-> accuracy1:87.00000047683716, accuracy2:81.71428442001343, accuracy3:100.0, loss:2.800663948059082
60-> accuracy1:61.000001430511475, accuracy2:99.57143068313599, accuracy3:100.0, loss:12.317852973937988
70-> accuracy1:78.66666913032532, accuracy2:84.5714271068573, accuracy3:100.0, loss:4.669952869415283
80-> accuracy1:100.0, accuracy2:84.42857265472412, accuracy3:100.0, loss:2.188978672027588
90-> accuracy1:98.00000190734863, accuracy2:86.57143115997314, accuracy3:100.0, loss:0.5068201422691345
B(x) = 30.3709828143921*x1**4 + 70.1895624612044*x1**3*x2 - 70.8238000880304*x1**3 + 64.5573775559362*x1**2*x2**2 - 128.785357241217*x1**2*x2 + 108.807867962634*x1**2 + 57.4518023379582*x1*x2**3 + 23.8822713596852*x1*x2**2 + 135.383519807815*x1*x2 - 48.2689208358219*x1 + 25.19478999362*x2**4 + 32.590366453939*x2**3 + 28.6715857940841*x2**2 + 12.0286875968507*x2 - 13.1464074037481
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 86 counterexamples!
Add 100 counterexamples!
iter:4
0-> accuracy1:83.67347121238708, accuracy2:87.25000023841858, accuracy3:100.0, loss:0.9546796679496765
10-> accuracy1:97.37609624862671, accuracy2:87.37499713897705, accuracy3:100.0, loss:0.37667375802993774
20-> accuracy1:96.35568261146545, accuracy2:90.625, accuracy3:100.0, loss:0.21838843822479248
30-> accuracy1:98.10495376586914, accuracy2:91.12499952316284, accuracy3:100.0, loss:0.13136407732963562
40-> accuracy1:97.81340956687927, accuracy2:92.87499785423279, accuracy3:100.0, loss:0.08181791752576828
50-> accuracy1:96.35568261146545, accuracy2:93.62499713897705, accuracy3:100.0, loss:0.09846583008766174
60-> accuracy1:98.39650392532349, accuracy2:92.37499833106995, accuracy3:100.0, loss:0.08167607337236404
70-> accuracy1:98.39650392532349, accuracy2:92.75000095367432, accuracy3:100.0, loss:0.060560572892427444
80-> accuracy1:98.68804812431335, accuracy2:93.75, accuracy3:100.0, loss:0.04228067398071289
90-> accuracy1:98.97959232330322, accuracy2:93.99999976158142, accuracy3:100.0, loss:0.03112700954079628
B(x) = 6.18358456429868*x1**4 + 17.3182669737788*x1**3*x2 - 16.9352537275203*x1**3 + 19.065584160907*x1**2*x2**2 - 33.8306247605199*x1**2*x2 + 27.6111798497328*x1**2 + 14.5837345992731*x1*x2**3 + 3.14468745873583*x1*x2**2 + 42.636711222183*x1*x2 - 14.3701267383811*x1 + 7.58673845458892*x2**4 + 12.8747606675626*x2**3 + 9.19375256874696*x2**2 - 7.51667575165292*x2 + 2.12985868215529
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
iter:5
0-> accuracy1:99.1253674030304, accuracy2:94.62500214576721, accuracy3:100.0, loss:0.025136802345514297
10-> accuracy1:99.1253674030304, accuracy2:94.74999904632568, accuracy3:100.0, loss:0.02453586645424366
20-> accuracy1:98.68804812431335, accuracy2:94.49999928474426, accuracy3:100.0, loss:0.02495216578245163
30-> accuracy1:99.1253674030304, accuracy2:93.75, accuracy3:100.0, loss:0.024298453703522682
40-> accuracy1:99.1253674030304, accuracy2:93.75, accuracy3:100.0, loss:0.024548282846808434
50-> accuracy1:99.1253674030304, accuracy2:93.75, accuracy3:100.0, loss:0.0245315283536911
60-> accuracy1:99.1253674030304, accuracy2:93.25000047683716, accuracy3:100.0, loss:0.026838280260562897
70-> accuracy1:99.27113652229309, accuracy2:92.75000095367432, accuracy3:100.0, loss:0.02796296589076519
80-> accuracy1:99.41691160202026, accuracy2:92.00000166893005, accuracy3:100.0, loss:0.0304696187376976
90-> accuracy1:98.54227304458618, accuracy2:92.00000166893005, accuracy3:100.0, loss:0.034239474684000015
B(x) = 1.56723246694446*x1**4 + 4.11037450695242*x1**3*x2 - 4.22575832431088*x1**3 + 4.30777485494696*x1**2*x2**2 - 8.22456828504432*x1**2*x2 + 7.04190487413483*x1**2 + 3.50484790750639*x1*x2**3 + 0.898944005144409*x1*x2**2 + 10.4076365207727*x1*x2 - 4.22963744980063*x1 + 1.94897774721487*x2**4 + 3.01266161146687*x2**3 + 1.50539828041602*x2**2 - 1.97664131028215*x2 + 0.822451699923455
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:6
0-> accuracy1:98.68804812431335, accuracy2:81.77777528762817, accuracy3:100.0, loss:0.15259099006652832
10-> accuracy1:99.27113652229309, accuracy2:91.88888669013977, accuracy3:100.0, loss:0.03886954486370087
20-> accuracy1:99.1253674030304, accuracy2:90.55555462837219, accuracy3:100.0, loss:0.04531523212790489
30-> accuracy1:100.0, accuracy2:88.33333253860474, accuracy3:100.0, loss:0.04839515686035156
40-> accuracy1:100.0, accuracy2:86.88889145851135, accuracy3:100.0, loss:0.05244367942214012
50-> accuracy1:100.0, accuracy2:85.77777743339539, accuracy3:100.0, loss:0.056765858083963394
60-> accuracy1:100.0, accuracy2:84.7777783870697, accuracy3:100.0, loss:0.06057791784405708
70-> accuracy1:100.0, accuracy2:84.33333039283752, accuracy3:100.0, loss:0.06455020606517792
80-> accuracy1:100.0, accuracy2:83.66666436195374, accuracy3:100.0, loss:0.07034194469451904
90-> accuracy1:100.0, accuracy2:82.99999833106995, accuracy3:100.0, loss:0.07409809529781342
B(x) = 0.493091161498023*x1**4 + 0.998973042310922*x1**3*x2 - 1.25250764974242*x1**3 + 0.86672922159655*x1**2*x2**2 - 1.86001685561047*x1**2*x2 + 1.99121427069171*x1**2 + 1.23582383472433*x1*x2**3 + 1.13266548875864*x1*x2**2 + 2.86636958677226*x1*x2 - 1.14741724966241*x1 + 0.989165534482439*x2**4 + 0.969786405431265*x2**3 + 0.293967763492755*x2**2 + 0.0472842525156175*x2 + 0.242053459480487
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:7
0-> accuracy1:100.0, accuracy2:73.69999885559082, accuracy3:100.0, loss:0.13115721940994263
10-> accuracy1:100.0, accuracy2:72.39999771118164, accuracy3:100.0, loss:0.1347406655550003
20-> accuracy1:100.0, accuracy2:71.39999866485596, accuracy3:100.0, loss:0.1389520764350891
30-> accuracy1:100.0, accuracy2:70.20000219345093, accuracy3:100.0, loss:0.14301574230194092
40-> accuracy1:100.0, accuracy2:69.0999984741211, accuracy3:100.0, loss:0.14660249650478363
50-> accuracy1:100.0, accuracy2:67.79999732971191, accuracy3:100.0, loss:0.14996781945228577
60-> accuracy1:100.0, accuracy2:67.59999990463257, accuracy3:100.0, loss:0.1531955748796463
70-> accuracy1:100.0, accuracy2:67.5000011920929, accuracy3:100.0, loss:0.1562066227197647
80-> accuracy1:100.0, accuracy2:67.40000247955322, accuracy3:100.0, loss:0.1592988222837448
90-> accuracy1:100.0, accuracy2:67.29999780654907, accuracy3:100.0, loss:0.16213424503803253
B(x) = 0.156663260098447*x1**4 + 0.267636761311095*x1**3*x2 - 0.406623515062884*x1**3 + 0.161605802785559*x1**2*x2**2 - 0.501794025931379*x1**2*x2 + 0.678286870396568*x1**2 + 0.517066597772162*x1*x2**3 + 0.705091481215783*x1*x2**2 + 0.896775862438548*x1*x2 - 0.561117002251853*x1 + 0.575314974699595*x2**4 + 0.268627849137802*x2**3 - 0.217573628370157*x2**2 + 0.47686672620113*x2 + 0.183847039279787
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:8
0-> accuracy1:100.0, accuracy2:61.000001430511475, accuracy3:100.0, loss:0.2152198702096939
10-> accuracy1:100.0, accuracy2:60.90909242630005, accuracy3:100.0, loss:0.21780666708946228
20-> accuracy1:100.0, accuracy2:60.90909242630005, accuracy3:100.0, loss:0.2212008386850357
30-> accuracy1:100.0, accuracy2:60.7272744178772, accuracy3:100.0, loss:0.22440126538276672
40-> accuracy1:100.0, accuracy2:60.63636541366577, accuracy3:100.0, loss:0.22752609848976135
50-> accuracy1:100.0, accuracy2:60.45454740524292, accuracy3:100.0, loss:0.23051713407039642
60-> accuracy1:100.0, accuracy2:60.09091138839722, accuracy3:100.0, loss:0.23284628987312317
70-> accuracy1:100.0, accuracy2:60.09091138839722, accuracy3:100.0, loss:0.2346373349428177
80-> accuracy1:100.0, accuracy2:60.09091138839722, accuracy3:100.0, loss:0.23615607619285583
90-> accuracy1:100.0, accuracy2:60.09091138839722, accuracy3:100.0, loss:0.2375861555337906
B(x) = 0.0688454840143092*x1**4 + 0.10314790862975*x1**3*x2 - 0.204447697272473*x1**3 - 0.0258566365216973*x1**2*x2**2 - 0.238015367317244*x1**2*x2 + 0.393038678255458*x1**2 + 0.227972832677846*x1*x2**3 + 0.442906869994244*x1*x2**2 + 0.359622582837721*x1*x2 - 0.529758101348932*x1 + 0.338583685304607*x2**4 - 0.096079025501202*x2**3 - 0.363898447022771*x2**2 + 0.516471854690598*x2 + 0.181449792523563
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:9
0-> accuracy1:100.0, accuracy2:54.91666793823242, accuracy3:100.0, loss:0.2958834171295166
10-> accuracy1:100.0, accuracy2:55.08333444595337, accuracy3:100.0, loss:0.2903192937374115
20-> accuracy1:100.0, accuracy2:55.08333444595337, accuracy3:100.0, loss:0.2801862955093384
30-> accuracy1:100.0, accuracy2:55.16666769981384, accuracy3:100.0, loss:0.2681768536567688
40-> accuracy1:100.0, accuracy2:54.500001668930054, accuracy3:100.0, loss:0.2520390450954437
50-> accuracy1:100.0, accuracy2:57.41666555404663, accuracy3:100.0, loss:0.22985967993736267
60-> accuracy1:100.0, accuracy2:61.250001192092896, accuracy3:100.0, loss:0.20949122309684753
70-> accuracy1:100.0, accuracy2:60.583335161209106, accuracy3:100.0, loss:0.20680536329746246
80-> accuracy1:100.0, accuracy2:61.75000071525574, accuracy3:100.0, loss:0.20700252056121826
90-> accuracy1:100.0, accuracy2:62.33333349227905, accuracy3:100.0, loss:0.20865054428577423
B(x) = 0.0438052898484835*x1**4 + 0.0863758275560625*x1**3*x2 - 0.135736092422599*x1**3 - 0.0974158173059883*x1**2*x2**2 - 0.252547979217994*x1**2*x2 + 0.396241806997825*x1**2 + 0.0589630927451364*x1*x2**3 + 0.470721064070793*x1*x2**2 + 0.193294612212863*x1*x2 - 0.478671195926595*x1 + 0.238170306072866*x2**4 - 0.343655934455545*x2**3 - 0.372013533783582*x2**2 + 0.743424167475063*x2 + 0.124235440821631
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:10
0-> accuracy1:100.0, accuracy2:57.692307233810425, accuracy3:100.0, loss:0.24333269894123077
10-> accuracy1:100.0, accuracy2:57.61538743972778, accuracy3:100.0, loss:0.24367792904376984
20-> accuracy1:100.0, accuracy2:57.07692503929138, accuracy3:100.0, loss:0.24448050558567047
30-> accuracy1:100.0, accuracy2:56.76922798156738, accuracy3:100.0, loss:0.24513114988803864
40-> accuracy1:100.0, accuracy2:56.99999928474426, accuracy3:100.0, loss:0.24537532031536102
50-> accuracy1:100.0, accuracy2:57.461535930633545, accuracy3:100.0, loss:0.24531692266464233
60-> accuracy1:100.0, accuracy2:57.692307233810425, accuracy3:100.0, loss:0.24516062438488007
70-> accuracy1:100.0, accuracy2:57.692307233810425, accuracy3:100.0, loss:0.2450755089521408
80-> accuracy1:100.0, accuracy2:57.769232988357544, accuracy3:100.0, loss:0.24494421482086182
90-> accuracy1:100.0, accuracy2:57.923078536987305, accuracy3:100.0, loss:0.24481354653835297
B(x) = 0.0262258464937273*x1**4 + 0.0733357827248496*x1**3*x2 - 0.0889552465313167*x1**3 - 0.115359295984787*x1**2*x2**2 - 0.215749874720701*x1**2*x2 + 0.392248559653296*x1**2 + 0.0724316487189328*x1*x2**3 + 0.429916606145423*x1*x2**2 + 0.108687234160552*x1*x2 - 0.547925568075387*x1 + 0.12561294692688*x2**4 - 0.346745615740183*x2**3 - 0.266024237537446*x2**2 + 0.6922339879402*x2 + 0.111093353880225
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:11
0-> accuracy1:100.0, accuracy2:54.3571412563324, accuracy3:100.0, loss:0.27417728304862976
10-> accuracy1:100.0, accuracy2:54.28571701049805, accuracy3:100.0, loss:0.27466240525245667
20-> accuracy1:100.0, accuracy2:54.28571701049805, accuracy3:100.0, loss:0.2751307487487793
30-> accuracy1:100.0, accuracy2:54.28571701049805, accuracy3:100.0, loss:0.2751257121562958
40-> accuracy1:100.0, accuracy2:54.28571701049805, accuracy3:100.0, loss:0.274931937456131
50-> accuracy1:100.0, accuracy2:54.28571701049805, accuracy3:100.0, loss:0.2748156785964966
60-> accuracy1:100.0, accuracy2:54.28571701049805, accuracy3:100.0, loss:0.27484583854675293
70-> accuracy1:100.0, accuracy2:54.28571701049805, accuracy3:100.0, loss:0.2748611569404602
80-> accuracy1:100.0, accuracy2:54.28571701049805, accuracy3:100.0, loss:0.27472612261772156
90-> accuracy1:100.0, accuracy2:54.3571412563324, accuracy3:100.0, loss:0.27468642592430115
B(x) = 0.0144264540553655*x1**4 + 0.0714232920021242*x1**3*x2 - 0.055504810540197*x1**3 - 0.147305122006896*x1**2*x2**2 - 0.195716755481933*x1**2*x2 + 0.407659893876564*x1**2 + 0.100588592169022*x1*x2**3 + 0.433957083023*x1*x2**2 + 0.0481227045401253*x1*x2 - 0.620543769917916*x1 + 0.0735385864287765*x2**4 - 0.328165868022428*x2**3 - 0.221666737100004*x2**2 + 0.636939980169261*x2 + 0.107776380979956
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:12
0-> accuracy1:100.0, accuracy2:50.66666603088379, accuracy3:100.0, loss:0.30076080560684204
10-> accuracy1:100.0, accuracy2:50.66666603088379, accuracy3:100.0, loss:0.30116960406303406
20-> accuracy1:100.0, accuracy2:50.66666603088379, accuracy3:100.0, loss:0.30148282647132874
30-> accuracy1:100.0, accuracy2:50.66666603088379, accuracy3:100.0, loss:0.30152538418769836
40-> accuracy1:100.0, accuracy2:50.599998235702515, accuracy3:100.0, loss:0.3014446794986725
50-> accuracy1:100.0, accuracy2:50.599998235702515, accuracy3:100.0, loss:0.30144646763801575
60-> accuracy1:100.0, accuracy2:50.599998235702515, accuracy3:100.0, loss:0.3015303611755371
70-> accuracy1:100.0, accuracy2:50.66666603088379, accuracy3:100.0, loss:0.3021048307418823
80-> accuracy1:100.0, accuracy2:50.73333382606506, accuracy3:100.0, loss:0.30317628383636475
90-> accuracy1:100.0, accuracy2:50.66666603088379, accuracy3:100.0, loss:0.3031761944293976
B(x) = 0.00669710926966787*x1**4 + 0.0647980732207142*x1**3*x2 - 0.030444795168407*x1**3 - 0.153242090530941*x1**2*x2**2 - 0.175254465335836*x1**2*x2 + 0.405343876456192*x1**2 + 0.0977388028177555*x1*x2**3 + 0.425770279116354*x1*x2**2 + 0.0292316668683371*x1*x2 - 0.652000762185152*x1 + 0.0642713320568244*x2**4 - 0.308360085411729*x2**3 - 0.215229522438993*x2**2 + 0.60461252244357*x2 + 0.1108401764698
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:13
0-> accuracy1:100.0, accuracy2:47.56250083446503, accuracy3:100.0, loss:0.3257233500480652
10-> accuracy1:100.0, accuracy2:47.56250083446503, accuracy3:100.0, loss:0.3257034420967102
20-> accuracy1:100.0, accuracy2:47.62499928474426, accuracy3:100.0, loss:0.32553523778915405
30-> accuracy1:100.0, accuracy2:47.62499928474426, accuracy3:100.0, loss:0.32543283700942993
40-> accuracy1:100.0, accuracy2:47.62499928474426, accuracy3:100.0, loss:0.3254486620426178
50-> accuracy1:100.0, accuracy2:47.62499928474426, accuracy3:100.0, loss:0.3253861367702484
60-> accuracy1:100.0, accuracy2:47.62499928474426, accuracy3:100.0, loss:0.3252979516983032
70-> accuracy1:100.0, accuracy2:47.62499928474426, accuracy3:100.0, loss:0.325222909450531
80-> accuracy1:100.0, accuracy2:47.68750071525574, accuracy3:100.0, loss:0.32517358660697937
90-> accuracy1:100.0, accuracy2:47.68750071525574, accuracy3:100.0, loss:0.3251863121986389
B(x) = 0.00217277817657608*x1**4 + 0.0621675103025491*x1**3*x2 - 0.0151782433437546*x1**3 - 0.17476418796748*x1**2*x2**2 - 0.160456541249603*x1**2*x2 + 0.402181618266112*x1**2 + 0.113197551455138*x1*x2**3 + 0.439830137132649*x1*x2**2 + 0.00472603819484126*x1*x2 - 0.644085418911851*x1 + 0.0710935736400752*x2**4 - 0.321292460214163*x2**3 - 0.225797358951984*x2**2 + 0.618933407230474*x2 + 0.108305770286975
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:14
0-> accuracy1:100.0, accuracy2:44.88235414028168, accuracy3:100.0, loss:0.3449142575263977
10-> accuracy1:100.0, accuracy2:44.823530316352844, accuracy3:100.0, loss:0.34508004784584045
20-> accuracy1:100.0, accuracy2:44.76470649242401, accuracy3:100.0, loss:0.3449519872665405
30-> accuracy1:100.0, accuracy2:44.823530316352844, accuracy3:100.0, loss:0.3447319567203522
40-> accuracy1:100.0, accuracy2:44.76470649242401, accuracy3:100.0, loss:0.3445092439651489
50-> accuracy1:100.0, accuracy2:44.823530316352844, accuracy3:100.0, loss:0.34426766633987427
60-> accuracy1:100.0, accuracy2:44.823530316352844, accuracy3:100.0, loss:0.34405702352523804
70-> accuracy1:100.0, accuracy2:44.823530316352844, accuracy3:100.0, loss:0.3438383936882019
80-> accuracy1:100.0, accuracy2:44.823530316352844, accuracy3:100.0, loss:0.3435820937156677
90-> accuracy1:100.0, accuracy2:44.823530316352844, accuracy3:100.0, loss:0.3433475196361542
B(x) = 0.000154304592293658*x1**4 + 0.0559053642151827*x1**3*x2 - 0.00660572399329469*x1**3 - 0.184835949378138*x1**2*x2**2 - 0.145962887380094*x1**2*x2 + 0.392148266539686*x1**2 + 0.115022393912064*x1*x2**3 + 0.439290874824847*x1*x2**2 + 0.00251963980674705*x1*x2 - 0.599260399311202*x1 + 0.0883435652587177*x2**4 - 0.325869057888385*x2**3 - 0.249521713923667*x2**2 + 0.652079358264882*x2 + 0.106573224169972
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:15
0-> accuracy1:100.0, accuracy2:42.33333468437195, accuracy3:100.0, loss:0.359223872423172
10-> accuracy1:100.0, accuracy2:42.33333468437195, accuracy3:100.0, loss:0.3591766357421875
20-> accuracy1:100.0, accuracy2:42.33333468437195, accuracy3:100.0, loss:0.35895681381225586
30-> accuracy1:100.0, accuracy2:42.33333468437195, accuracy3:100.0, loss:0.3586064875125885
40-> accuracy1:100.0, accuracy2:42.33333468437195, accuracy3:100.0, loss:0.35826459527015686
50-> accuracy1:100.0, accuracy2:42.33333468437195, accuracy3:100.0, loss:0.35788190364837646
60-> accuracy1:100.0, accuracy2:42.222222685813904, accuracy3:100.0, loss:0.35746699571609497
70-> accuracy1:100.0, accuracy2:41.94444417953491, accuracy3:100.0, loss:0.3570398688316345
80-> accuracy1:100.0, accuracy2:41.88888967037201, accuracy3:100.0, loss:0.3565954267978668
90-> accuracy1:100.0, accuracy2:41.88888967037201, accuracy3:100.0, loss:0.3561549186706543
B(x) = -0.000245549659503767*x1**4 + 0.0471258501370547*x1**3*x2 - 0.00281379481573608*x1**3 - 0.19091258232261*x1**2*x2**2 - 0.133918390578035*x1**2*x2 + 0.383872687472306*x1**2 + 0.107420043651948*x1*x2**3 + 0.432163230786496*x1*x2**2 + 0.0274269696531023*x1*x2 - 0.535967183430279*x1 + 0.113423530657647*x2**4 - 0.322680931669694*x2**3 - 0.284588950828034*x2**2 + 0.690660986863249*x2 + 0.108715447909598
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:16
0-> accuracy1:100.0, accuracy2:39.63157832622528, accuracy3:100.0, loss:0.3687599301338196
10-> accuracy1:100.0, accuracy2:39.57894742488861, accuracy3:100.0, loss:0.36846816539764404
20-> accuracy1:100.0, accuracy2:39.47368562221527, accuracy3:100.0, loss:0.368319034576416
30-> accuracy1:100.0, accuracy2:39.47368562221527, accuracy3:100.0, loss:0.3680546283721924
40-> accuracy1:100.0, accuracy2:39.52631652355194, accuracy3:100.0, loss:0.3675581216812134
50-> accuracy1:100.0, accuracy2:39.42105174064636, accuracy3:100.0, loss:0.36763787269592285
60-> accuracy1:100.0, accuracy2:39.47368562221527, accuracy3:100.0, loss:0.36700594425201416
70-> accuracy1:100.0, accuracy2:39.47368562221527, accuracy3:100.0, loss:0.3668305277824402
80-> accuracy1:100.0, accuracy2:39.42105174064636, accuracy3:100.0, loss:0.3665562868118286
90-> accuracy1:100.0, accuracy2:39.57894742488861, accuracy3:100.0, loss:0.36587876081466675
B(x) = -0.000464862951914115*x1**4 + 0.0402933893873272*x1**3*x2 - 0.000291171178171823*x1**3 - 0.181887092380062*x1**2*x2**2 - 0.126122967428495*x1**2*x2 + 0.384897285833667*x1**2 + 0.0909224142640809*x1*x2**3 + 0.414406491405965*x1*x2**2 + 0.0716769936386726*x1*x2 - 0.497548041727768*x1 + 0.122045983679766*x2**4 - 0.312773308298712*x2**3 - 0.292654767293979*x2**2 + 0.706388579784413*x2 + 0.110879064842648
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:17
0-> accuracy1:100.0, accuracy2:37.5, accuracy3:100.0, loss:0.37713465094566345
10-> accuracy1:100.0, accuracy2:37.59999871253967, accuracy3:100.0, loss:0.3765646815299988
20-> accuracy1:100.0, accuracy2:37.59999871253967, accuracy3:100.0, loss:0.37644365429878235
30-> accuracy1:100.0, accuracy2:37.59999871253967, accuracy3:100.0, loss:0.3763423562049866
40-> accuracy1:100.0, accuracy2:37.79999911785126, accuracy3:100.0, loss:0.3757941424846649
50-> accuracy1:100.0, accuracy2:37.74999976158142, accuracy3:100.0, loss:0.3757311999797821
60-> accuracy1:100.0, accuracy2:37.90000081062317, accuracy3:100.0, loss:0.3753531873226166
70-> accuracy1:100.0, accuracy2:38.199999928474426, accuracy3:100.0, loss:0.3747187852859497
80-> accuracy1:100.0, accuracy2:38.15000057220459, accuracy3:100.0, loss:0.3746963441371918
90-> accuracy1:100.0, accuracy2:38.199999928474426, accuracy3:100.0, loss:0.3740675747394562
B(x) = -0.000701856727453636*x1**4 + 0.0383405887223769*x1**3*x2 + 0.00166174226286966*x1**3 - 0.181598020434528*x1**2*x2**2 - 0.128190331886197*x1**2*x2 + 0.404472811601591*x1**2 + 0.0658283170019525*x1*x2**3 + 0.409247092253884*x1*x2**2 + 0.148545765747807*x1*x2 - 0.491017930741972*x1 + 0.136469384128002*x2**4 - 0.299389264195849*x2**3 - 0.299104292196353*x2**2 + 0.696785560573667*x2 + 0.122438096892873
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:18
0-> accuracy1:100.0, accuracy2:36.38095259666443, accuracy3:100.0, loss:0.3838292956352234
10-> accuracy1:100.0, accuracy2:36.38095259666443, accuracy3:100.0, loss:0.3839344382286072
20-> accuracy1:100.0, accuracy2:36.42857074737549, accuracy3:100.0, loss:0.3834374248981476
30-> accuracy1:100.0, accuracy2:36.47619187831879, accuracy3:100.0, loss:0.3830910325050354
40-> accuracy1:100.0, accuracy2:36.47619187831879, accuracy3:100.0, loss:0.38282209634780884
50-> accuracy1:100.0, accuracy2:36.523810029029846, accuracy3:100.0, loss:0.38272032141685486
60-> accuracy1:100.0, accuracy2:36.523810029029846, accuracy3:100.0, loss:0.38219740986824036
70-> accuracy1:100.0, accuracy2:36.523810029029846, accuracy3:100.0, loss:0.3817433714866638
80-> accuracy1:100.0, accuracy2:36.523810029029846, accuracy3:100.0, loss:0.38120320439338684
90-> accuracy1:100.0, accuracy2:36.523810029029846, accuracy3:100.0, loss:0.38119009137153625
B(x) = -0.00110240000928247*x1**4 + 0.0399914538418394*x1**3*x2 + 0.00342248988732876*x1**3 - 0.178384913556988*x1**2*x2**2 - 0.131067295304717*x1**2*x2 + 0.443391821170545*x1**2 + 0.0295912414529293*x1*x2**3 + 0.389910799146632*x1*x2**2 + 0.244348060394552*x1*x2 - 0.501121322892824*x1 + 0.141429570936717*x2**4 - 0.267989655187089*x2**3 - 0.274938666939164*x2**2 + 0.670801676523199*x2 + 0.126266614170884
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:19
0-> accuracy1:100.0, accuracy2:34.863635897636414, accuracy3:100.0, loss:0.390119731426239
10-> accuracy1:100.0, accuracy2:34.863635897636414, accuracy3:100.0, loss:0.38972508907318115
20-> accuracy1:100.0, accuracy2:34.863635897636414, accuracy3:100.0, loss:0.38934949040412903
30-> accuracy1:100.0, accuracy2:34.863635897636414, accuracy3:100.0, loss:0.38892069458961487
40-> accuracy1:100.0, accuracy2:34.90909039974213, accuracy3:100.0, loss:0.38857540488243103
50-> accuracy1:100.0, accuracy2:34.90909039974213, accuracy3:100.0, loss:0.38820263743400574
60-> accuracy1:100.0, accuracy2:34.90909039974213, accuracy3:100.0, loss:0.38802292943000793
70-> accuracy1:100.0, accuracy2:34.90909039974213, accuracy3:100.0, loss:0.38788121938705444
80-> accuracy1:100.0, accuracy2:34.95454490184784, accuracy3:100.0, loss:0.38744819164276123
90-> accuracy1:100.0, accuracy2:34.95454490184784, accuracy3:100.0, loss:0.38704803586006165
B(x) = -0.00114013838741601*x1**4 + 0.0408777444937825*x1**3*x2 + 0.00298238994350739*x1**3 - 0.177820740405449*x1**2*x2**2 - 0.124336095591966*x1**2*x2 + 0.498957100905895*x1**2 - 0.0121910661830024*x1*x2**3 + 0.359699437133134*x1*x2**2 + 0.354028514142031*x1*x2 - 0.529261378917226*x1 + 0.140733846404859*x2**4 - 0.234763777683664*x2**3 - 0.218458664152522*x2**2 + 0.630232187230654*x2 + 0.12875580436742
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:20
0-> accuracy1:100.0, accuracy2:33.434781432151794, accuracy3:100.0, loss:0.39545872807502747
10-> accuracy1:100.0, accuracy2:33.434781432151794, accuracy3:100.0, loss:0.39501458406448364
20-> accuracy1:100.0, accuracy2:33.434781432151794, accuracy3:100.0, loss:0.3945482671260834
30-> accuracy1:100.0, accuracy2:33.434781432151794, accuracy3:100.0, loss:0.3940281867980957
40-> accuracy1:100.0, accuracy2:33.434781432151794, accuracy3:100.0, loss:0.3935185372829437
50-> accuracy1:100.0, accuracy2:33.60869586467743, accuracy3:100.0, loss:0.39308127760887146
60-> accuracy1:100.0, accuracy2:33.60869586467743, accuracy3:100.0, loss:0.3926468789577484
70-> accuracy1:100.0, accuracy2:33.60869586467743, accuracy3:100.0, loss:0.39215171337127686
80-> accuracy1:100.0, accuracy2:33.60869586467743, accuracy3:100.0, loss:0.3915885388851166
90-> accuracy1:100.0, accuracy2:33.60869586467743, accuracy3:100.0, loss:0.39096489548683167
B(x) = -0.000840317742092177*x1**4 + 0.0431149633628245*x1**3*x2 - 0.000297364960043469*x1**3 - 0.190215620900727*x1**2*x2**2 - 0.105873600951525*x1**2*x2 + 0.584563546640895*x1**2 - 0.0508100306971288*x1*x2**3 + 0.340403662405647*x1*x2**2 + 0.456392488156924*x1*x2 - 0.596153733779641*x1 + 0.132584114408075*x2**4 - 0.221515126452649*x2**3 - 0.122341589918067*x2**2 + 0.578775353365203*x2 + 0.122636189101326
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
Failed
Elapsed Time: 111.38219032809138
