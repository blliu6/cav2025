{'batch_size': 800, 'lr': np.float64(0.24999999999999997), 'loss_weight_continuous': (1, 1, 1), 'R_b': 0.4, 'margin': 0.4, 'DEG_continuous': [2, 4, 4, 2], 'learning_loops': 100, 'max_iter': 20, 'err': 0.02677454477719443}

Mosek can be used normally.
iter:1
0-> accuracy1:0.0, accuracy2:16.249999403953552, accuracy3:0.0, loss:1.3368639945983887
10-> accuracy1:100.0, accuracy2:97.62499928474426, accuracy3:36.250001192092896, loss:2.2835941314697266
20-> accuracy1:91.75000190734863, accuracy2:97.50000238418579, accuracy3:100.0, loss:0.9195517897605896
30-> accuracy1:92.37499833106995, accuracy2:95.24999856948853, accuracy3:100.0, loss:14.484163284301758
40-> accuracy1:93.37499737739563, accuracy2:97.62499928474426, accuracy3:100.0, loss:24.17851448059082
50-> accuracy1:95.49999833106995, accuracy2:96.62500023841858, accuracy3:100.0, loss:15.952150344848633
60-> accuracy1:100.0, accuracy2:92.5000011920929, accuracy3:100.0, loss:251.25082397460938
70-> accuracy1:90.87499976158142, accuracy2:92.12499856948853, accuracy3:100.0, loss:152.59571838378906
80-> accuracy1:87.37499713897705, accuracy2:95.37500143051147, accuracy3:100.0, loss:200.1813201904297
90-> accuracy1:100.0, accuracy2:97.25000262260437, accuracy3:100.0, loss:79.68939208984375
B(x) = 494.680167287242*x1**4 + 4240.60276229094*x1**3*x2 - 2574.42436821552*x1**3 + 5009.00905055092*x1**2*x2**2 - 16007.3126739845*x1**2*x2 + 11202.1295674412*x1**2 + 1685.616376108*x1*x2**3 - 8240.91501607337*x1*x2**2 + 17637.6411075812*x1*x2 - 10159.3272764991*x1 - 246.613970791286*x2**4 + 6714.94889295674*x2**3 - 14563.563599531*x2**2 + 9572.20812039566*x2 - 1784.35141052538
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:2
0-> accuracy1:95.12500166893005, accuracy2:87.44444251060486, accuracy3:100.0, loss:285.7062683105469
10-> accuracy1:80.37499785423279, accuracy2:95.2222228050232, accuracy3:100.0, loss:66.66702270507812
20-> accuracy1:94.24999952316284, accuracy2:88.88888955116272, accuracy3:100.0, loss:25.586177825927734
30-> accuracy1:92.37499833106995, accuracy2:95.6666648387909, accuracy3:100.0, loss:5.0005340576171875
40-> accuracy1:98.7500011920929, accuracy2:96.55555486679077, accuracy3:100.0, loss:1.0152230262756348
50-> accuracy1:98.00000190734863, accuracy2:97.88888692855835, accuracy3:100.0, loss:0.6634582877159119
60-> accuracy1:100.0, accuracy2:98.77777695655823, accuracy3:100.0, loss:0.32286974787712097
70-> accuracy1:99.75000023841858, accuracy2:99.44444298744202, accuracy3:100.0, loss:0.19838078320026398
80-> accuracy1:99.87499713897705, accuracy2:99.44444298744202, accuracy3:100.0, loss:0.13725385069847107
90-> accuracy1:99.75000023841858, accuracy2:99.44444298744202, accuracy3:100.0, loss:0.09539517760276794
B(x) = 145.595799714873*x1**4 + 887.089702297513*x1**3*x2 - 525.249670081124*x1**3 + 1378.27940975072*x1**2*x2**2 - 2184.48810232467*x1**2*x2 + 998.611207323729*x1**2 + 899.50479985303*x1*x2**3 - 1872.13039679553*x1*x2**2 + 1298.8830081862*x1*x2 - 236.662039701084*x1 + 274.227106118345*x2**4 - 485.255477955819*x2**3 + 58.7245518763033*x2**2 + 263.609956427762*x2 - 83.8836057535653
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:3
0-> accuracy1:100.0, accuracy2:89.60000276565552, accuracy3:100.0, loss:3.240506887435913
10-> accuracy1:92.25000143051147, accuracy2:89.60000276565552, accuracy3:100.0, loss:2.015197515487671
20-> accuracy1:97.12499976158142, accuracy2:89.3999993801117, accuracy3:100.0, loss:1.461593508720398
30-> accuracy1:94.12500262260437, accuracy2:89.3999993801117, accuracy3:100.0, loss:1.0221219062805176
40-> accuracy1:97.37499952316284, accuracy2:89.70000147819519, accuracy3:99.37499761581421, loss:0.7303692102432251
50-> accuracy1:96.24999761581421, accuracy2:89.99999761581421, accuracy3:99.62499737739563, loss:0.518651008605957
60-> accuracy1:97.62499928474426, accuracy2:90.70000052452087, accuracy3:100.0, loss:0.3795458674430847
70-> accuracy1:97.87499904632568, accuracy2:91.29999876022339, accuracy3:100.0, loss:0.28103089332580566
80-> accuracy1:98.50000143051147, accuracy2:91.69999957084656, accuracy3:100.0, loss:0.21390409767627716
90-> accuracy1:98.50000143051147, accuracy2:92.1999990940094, accuracy3:100.0, loss:0.16635853052139282
B(x) = 27.7995338836741*x1**4 + 146.04650598739*x1**3*x2 - 92.2139501238253*x1**3 + 238.179584155954*x1**2*x2**2 - 364.606107477739*x1**2*x2 + 145.697355082073*x1**2 + 172.716717684011*x1*x2**3 - 381.11365852645*x1*x2**2 + 251.978046433576*x1*x2 - 33.5853434759337*x1 + 54.1101507118358*x2**4 - 132.293391238941*x2**3 + 86.4274932905492*x2**2 + 4.18183316758794*x2 - 5.13368905316735
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 95 counterexamples!
iter:4
0-> accuracy1:98.50000143051147, accuracy2:84.4748854637146, accuracy3:100.0, loss:0.3090497553348541
10-> accuracy1:95.74999809265137, accuracy2:84.74885821342468, accuracy3:100.0, loss:0.24658972024917603
20-> accuracy1:97.75000214576721, accuracy2:84.56621170043945, accuracy3:98.87499809265137, loss:0.20710594952106476
30-> accuracy1:97.12499976158142, accuracy2:84.56621170043945, accuracy3:99.62499737739563, loss:0.17675156891345978
40-> accuracy1:98.00000190734863, accuracy2:84.38355922698975, accuracy3:100.0, loss:0.1552761197090149
50-> accuracy1:98.25000166893005, accuracy2:84.38355922698975, accuracy3:100.0, loss:0.14030690491199493
60-> accuracy1:98.7500011920929, accuracy2:83.92693996429443, accuracy3:100.0, loss:0.12842431664466858
70-> accuracy1:99.12499785423279, accuracy2:83.5616409778595, accuracy3:100.0, loss:0.11914218962192535
80-> accuracy1:99.25000071525574, accuracy2:83.10502171516418, accuracy3:100.0, loss:0.11243586242198944
90-> accuracy1:99.37499761581421, accuracy2:82.64840245246887, accuracy3:100.0, loss:0.10730428993701935
B(x) = 4.97490146834893*x1**4 + 24.9615870854853*x1**3*x2 - 16.2960312635613*x1**3 + 40.8370760423223*x1**2*x2**2 - 62.5549683610209*x1**2*x2 + 24.4073543265167*x1**2 + 29.6807499935622*x1*x2**3 - 66.5089981777972*x1*x2**2 + 44.3354047993398*x1*x2 - 5.41654375385868*x1 + 9.16157598309964*x2**4 - 23.4892352945471*x2**3 + 16.288503671827*x2**2 + 0.571302914580363*x2 - 0.562229377696108
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 89 counterexamples!
iter:5
0-> accuracy1:100.0, accuracy2:76.18243098258972, accuracy3:100.0, loss:0.1452479511499405
10-> accuracy1:99.25000071525574, accuracy2:75.84459185600281, accuracy3:100.0, loss:0.13980327546596527
20-> accuracy1:100.0, accuracy2:75.50675868988037, accuracy3:100.0, loss:0.13547545671463013
30-> accuracy1:100.0, accuracy2:75.16891956329346, accuracy3:100.0, loss:0.13189733028411865
40-> accuracy1:100.0, accuracy2:75.08445978164673, accuracy3:100.0, loss:0.12890276312828064
50-> accuracy1:100.0, accuracy2:75.0, accuracy3:100.0, loss:0.1268434226512909
60-> accuracy1:100.0, accuracy2:74.91554021835327, accuracy3:100.0, loss:0.12557558715343475
70-> accuracy1:100.0, accuracy2:74.83108043670654, accuracy3:100.0, loss:0.12531006336212158
80-> accuracy1:100.0, accuracy2:74.57770109176636, accuracy3:100.0, loss:0.12583357095718384
90-> accuracy1:100.0, accuracy2:74.32432174682617, accuracy3:100.0, loss:0.12711508572101593
B(x) = 0.887260392028337*x1**4 + 4.38801169635764*x1**3*x2 - 2.94655710833824*x1**3 + 7.08307871178185*x1**2*x2**2 - 11.1433836850472*x1**2*x2 + 4.52784869527345*x1**2 + 5.03993098086999*x1*x2**3 - 11.6060187218048*x1*x2**2 + 8.37671154244897*x1*x2 - 1.33637200967849*x1 + 1.56009305137092*x2**4 - 4.02880162617911*x2**3 + 2.79599122198298*x2**2 + 0.235575590043264*x2 + 0.11746873764632
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:6
0-> accuracy1:100.0, accuracy2:67.6791250705719, accuracy3:100.0, loss:0.15741321444511414
10-> accuracy1:100.0, accuracy2:66.74454808235168, accuracy3:100.0, loss:0.1595354825258255
20-> accuracy1:100.0, accuracy2:66.27725958824158, accuracy3:100.0, loss:0.16239577531814575
30-> accuracy1:100.0, accuracy2:65.18691778182983, accuracy3:100.0, loss:0.16546151041984558
40-> accuracy1:100.0, accuracy2:64.33022022247314, accuracy3:100.0, loss:0.16924309730529785
50-> accuracy1:100.0, accuracy2:63.473522663116455, accuracy3:100.0, loss:0.17344065010547638
60-> accuracy1:100.0, accuracy2:62.071651220321655, accuracy3:100.0, loss:0.1776902675628662
70-> accuracy1:100.0, accuracy2:60.74766516685486, accuracy3:100.0, loss:0.1816253960132599
80-> accuracy1:100.0, accuracy2:59.813082218170166, accuracy3:100.0, loss:0.1855623871088028
90-> accuracy1:100.0, accuracy2:58.800625801086426, accuracy3:100.0, loss:0.18983736634254456
B(x) = 0.161153778669352*x1**4 + 0.808704308503219*x1**3*x2 - 0.553269988710123*x1**3 + 1.24878651701509*x1**2*x2**2 - 2.1165280262317*x1**2*x2 + 1.03865679586622*x1**2 + 0.857196591250678*x1*x2**3 - 2.05641678201371*x1*x2**2 + 1.87452947221305*x1*x2 - 0.605466875714367*x1 + 0.284779112074051*x2**4 - 0.711915846590463*x2**3 + 0.44230615572038*x2**2 + 0.324293602855925*x2 + 0.146170102583555
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:7
0-> accuracy1:100.0, accuracy2:54.33526039123535, accuracy3:100.0, loss:0.24443164467811584
10-> accuracy1:100.0, accuracy2:54.11849617958069, accuracy3:100.0, loss:0.24197806417942047
20-> accuracy1:100.0, accuracy2:53.97399067878723, accuracy3:100.0, loss:0.23932906985282898
30-> accuracy1:100.0, accuracy2:53.32369804382324, accuracy3:100.0, loss:0.2373879998922348
40-> accuracy1:100.0, accuracy2:52.96242833137512, accuracy3:100.0, loss:0.2383067011833191
50-> accuracy1:100.0, accuracy2:52.67341136932373, accuracy3:100.0, loss:0.24101069569587708
60-> accuracy1:100.0, accuracy2:51.95086598396301, accuracy3:100.0, loss:0.2447572946548462
70-> accuracy1:100.0, accuracy2:51.58959627151489, accuracy3:100.0, loss:0.24973486363887787
80-> accuracy1:100.0, accuracy2:50.57803392410278, accuracy3:100.0, loss:0.2555559575557709
90-> accuracy1:100.0, accuracy2:49.92774426937103, accuracy3:100.0, loss:0.2617390751838684
B(x) = 0.0263508079877966*x1**4 + 0.166371078218547*x1**3*x2 - 0.109589986702587*x1**3 + 0.218313248847368*x1**2*x2**2 - 0.43284243391532*x1**2*x2 + 0.31713235771958*x1**2 + 0.147644233203809*x1*x2**3 - 0.330606572367936*x1*x2**2 + 0.463311279885031*x1*x2 - 0.34950884046369*x1 + 0.0779765481444013*x2**4 - 0.199224389703275*x2**3 + 0.113317288438113*x2**2 + 0.503513404184375*x2 + 0.0690037093999567
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:8
0-> accuracy1:100.0, accuracy2:46.02425992488861, accuracy3:100.0, loss:0.3003898561000824
10-> accuracy1:100.0, accuracy2:45.35040557384491, accuracy3:100.0, loss:0.30700746178627014
20-> accuracy1:100.0, accuracy2:44.94609236717224, accuracy3:100.0, loss:0.31424421072006226
30-> accuracy1:100.0, accuracy2:44.27223801612854, accuracy3:100.0, loss:0.3209420144557953
40-> accuracy1:100.0, accuracy2:43.396225571632385, accuracy3:100.0, loss:0.326962411403656
50-> accuracy1:100.0, accuracy2:42.38544404506683, accuracy3:100.0, loss:0.3332470953464508
60-> accuracy1:100.0, accuracy2:41.71158969402313, accuracy3:100.0, loss:0.33968520164489746
70-> accuracy1:100.0, accuracy2:40.7681941986084, accuracy3:100.0, loss:0.34620392322540283
80-> accuracy1:100.0, accuracy2:40.22911190986633, accuracy3:100.0, loss:0.35252729058265686
90-> accuracy1:100.0, accuracy2:39.62264060974121, accuracy3:100.0, loss:0.3584297299385071
B(x) = 0.00479246981277458*x1**4 + 0.0420951803275675*x1**3*x2 - 0.023527642635592*x1**3 + 0.0402430528344612*x1**2*x2**2 - 0.11157096640639*x1**2*x2 + 0.14260816461522*x1**2 + 0.0262743099914733*x1*x2**3 - 0.0385281384469559*x1*x2**2 + 0.156538286965122*x1*x2 - 0.213468808860914*x1 + 0.0207646514186289*x2**4 - 0.0596175880688662*x2**3 + 0.0240850055059788*x2**2 + 0.581512410595709*x2 + 0.0709028849254639
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:9
0-> accuracy1:100.0, accuracy2:36.80555522441864, accuracy3:100.0, loss:0.3884375989437103
10-> accuracy1:100.0, accuracy2:36.42676770687103, accuracy3:100.0, loss:0.3935558497905731
20-> accuracy1:100.0, accuracy2:36.11111044883728, accuracy3:100.0, loss:0.3981643319129944
30-> accuracy1:100.0, accuracy2:35.79545319080353, accuracy3:100.0, loss:0.40192773938179016
40-> accuracy1:100.0, accuracy2:34.59596037864685, accuracy3:100.0, loss:0.40521568059921265
50-> accuracy1:100.0, accuracy2:34.15403962135315, accuracy3:100.0, loss:0.4084498882293701
60-> accuracy1:100.0, accuracy2:33.71212184429169, accuracy3:100.0, loss:0.41147980093955994
70-> accuracy1:100.0, accuracy2:33.20707082748413, accuracy3:100.0, loss:0.4142107367515564
80-> accuracy1:100.0, accuracy2:32.82828330993652, accuracy3:100.0, loss:0.4163037836551666
90-> accuracy1:100.0, accuracy2:32.51262605190277, accuracy3:100.0, loss:0.4178925156593323
B(x) = 0.000543213784969424*x1**4 + 0.0154787560720833*x1**3*x2 - 0.00356240797834211*x1**3 + 0.00579943475798121*x1**2*x2**2 - 0.0473041575508015*x1**2*x2 + 0.0873287819712115*x1**2 + 0.00700949729149313*x1*x2**3 + 0.021580996129022*x1*x2**2 + 0.0728352452678521*x1*x2 - 0.178087476397542*x1 + 0.00553002593361349*x2**4 - 0.0328117696889937*x2**3 + 0.0123900300654765*x2**2 + 0.608777548923897*x2 + 0.0737960591331319
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:10
0-> accuracy1:100.0, accuracy2:30.344417691230774, accuracy3:100.0, loss:0.4399403929710388
10-> accuracy1:100.0, accuracy2:30.819478631019592, accuracy3:100.0, loss:0.4413771629333496
20-> accuracy1:100.0, accuracy2:31.116390228271484, accuracy3:100.0, loss:0.44274386763572693
30-> accuracy1:100.0, accuracy2:31.947743892669678, accuracy3:100.0, loss:0.44331592321395874
40-> accuracy1:100.0, accuracy2:31.888359785079956, accuracy3:100.0, loss:0.4433766305446625
50-> accuracy1:100.0, accuracy2:31.947743892669678, accuracy3:100.0, loss:0.44313058257102966
60-> accuracy1:100.0, accuracy2:32.06650912761688, accuracy3:100.0, loss:0.4425077438354492
70-> accuracy1:100.0, accuracy2:32.42280185222626, accuracy3:100.0, loss:0.4414498507976532
80-> accuracy1:100.0, accuracy2:32.24465548992157, accuracy3:100.0, loss:0.43991658091545105
90-> accuracy1:100.0, accuracy2:32.30403661727905, accuracy3:100.0, loss:0.4383203685283661
B(x) = 0.000187507567905057*x1**4 + 0.00615416348459071*x1**3*x2 + 0.0042554181327987*x1**3 - 0.00240831761832469*x1**2*x2**2 - 0.0398971690273136*x1**2*x2 + 0.0602604311873899*x1**2 + 0.0099170814532684*x1*x2**3 + 0.0489902472867888*x1*x2**2 + 0.0480519357082027*x1*x2 - 0.18975487720889*x1 - 0.00347568673062379*x2**4 - 0.0323679288281325*x2**3 + 0.0161543905492498*x2**2 + 0.613066579330072*x2 + 0.078933045674011
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:11
0-> accuracy1:100.0, accuracy2:30.43721914291382, accuracy3:100.0, loss:0.45811665058135986
10-> accuracy1:100.0, accuracy2:30.493274331092834, accuracy3:100.0, loss:0.4582783281803131
20-> accuracy1:100.0, accuracy2:30.43721914291382, accuracy3:100.0, loss:0.45851218700408936
30-> accuracy1:100.0, accuracy2:30.493274331092834, accuracy3:100.0, loss:0.45812860131263733
40-> accuracy1:100.0, accuracy2:30.493274331092834, accuracy3:100.0, loss:0.45708560943603516
50-> accuracy1:100.0, accuracy2:30.661433935165405, accuracy3:100.0, loss:0.4557477831840515
60-> accuracy1:100.0, accuracy2:30.71748912334442, accuracy3:100.0, loss:0.4542519152164459
70-> accuracy1:100.0, accuracy2:30.71748912334442, accuracy3:100.0, loss:0.45272135734558105
80-> accuracy1:100.0, accuracy2:30.71748912334442, accuracy3:100.0, loss:0.4512338638305664
90-> accuracy1:100.0, accuracy2:30.88565170764923, accuracy3:100.0, loss:0.44966498017311096
B(x) = 0.00162955531578097*x1**4 - 0.00244705630599612*x1**3*x2 + 0.00873095152074602*x1**3 + 0.00235294599928048*x1**2*x2**2 - 0.04528516842499*x1**2*x2 + 0.0565964107649555*x1**2 + 0.00901125149843886*x1*x2**3 + 0.0644180673099093*x1*x2**2 + 0.0438370036249193*x1*x2 - 0.214106733779811*x1 - 0.00680757984152344*x2**4 - 0.0341601307931231*x2**3 + 0.0177432114279359*x2**2 + 0.602489576760992*x2 + 0.076180406219534
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:12
0-> accuracy1:100.0, accuracy2:29.352441430091858, accuracy3:100.0, loss:0.4685516953468323
10-> accuracy1:100.0, accuracy2:29.352441430091858, accuracy3:100.0, loss:0.46748408675193787
20-> accuracy1:100.0, accuracy2:29.511678218841553, accuracy3:100.0, loss:0.46668314933776855
30-> accuracy1:100.0, accuracy2:29.564756155014038, accuracy3:100.0, loss:0.4654540717601776
40-> accuracy1:100.0, accuracy2:29.77707087993622, accuracy3:100.0, loss:0.4639272689819336
50-> accuracy1:100.0, accuracy2:29.77707087993622, accuracy3:100.0, loss:0.46205708384513855
60-> accuracy1:100.0, accuracy2:29.88322675228119, accuracy3:100.0, loss:0.4598144292831421
70-> accuracy1:100.0, accuracy2:30.148619413375854, accuracy3:100.0, loss:0.45693933963775635
80-> accuracy1:100.0, accuracy2:30.30785620212555, accuracy3:100.0, loss:0.4533647894859314
90-> accuracy1:100.0, accuracy2:30.360934138298035, accuracy3:100.0, loss:0.44921889901161194
B(x) = 0.00409110841048927*x1**4 - 0.011016542855489*x1**3*x2 + 0.0141323334274724*x1**3 + 0.0071350004347605*x1**2*x2**2 - 0.0590297399925294*x1**2*x2 + 0.0810730082627765*x1**2 + 0.0112954825861981*x1*x2**3 + 0.0789664275348651*x1*x2**2 + 0.0437518390005554*x1*x2 - 0.260451018541551*x1 - 0.0096371804733275*x2**4 - 0.0360438016893387*x2**3 + 0.0150452983757495*x2**2 + 0.58279084481459*x2 + 0.0662580155153111
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:13
0-> accuracy1:100.0, accuracy2:29.133063554763794, accuracy3:100.0, loss:0.4627135694026947
10-> accuracy1:100.0, accuracy2:29.53628897666931, accuracy3:100.0, loss:0.4578476548194885
20-> accuracy1:100.0, accuracy2:29.83871102333069, accuracy3:100.0, loss:0.4521893560886383
30-> accuracy1:100.0, accuracy2:30.141130089759827, accuracy3:100.0, loss:0.446272075176239
40-> accuracy1:100.0, accuracy2:30.393144488334656, accuracy3:100.0, loss:0.440297931432724
50-> accuracy1:100.0, accuracy2:30.846774578094482, accuracy3:100.0, loss:0.4336759150028229
60-> accuracy1:100.0, accuracy2:31.30040466785431, accuracy3:100.0, loss:0.42620402574539185
70-> accuracy1:100.0, accuracy2:31.955644488334656, accuracy3:100.0, loss:0.41768476366996765
80-> accuracy1:100.0, accuracy2:32.35886991024017, accuracy3:100.0, loss:0.40843403339385986
90-> accuracy1:100.0, accuracy2:32.91330635547638, accuracy3:100.0, loss:0.3985619843006134
B(x) = 0.0109929621952166*x1**4 - 0.0253615327898518*x1**3*x2 + 0.0306895917580818*x1**3 + 0.00770467513810222*x1**2*x2**2 - 0.102080411724999*x1**2*x2 + 0.207645872496714*x1**2 + 0.0234910910038242*x1*x2**3 + 0.112190596525358*x1*x2**2 + 0.0730973250647068*x1*x2 - 0.309198532675484*x1 - 0.0148135183737498*x2**4 - 0.0413515006464724*x2**3 + 0.00551177265456431*x2**2 + 0.626986422960098*x2 + 0.0304172156095514
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:14
0-> accuracy1:100.0, accuracy2:31.62188231945038, accuracy3:100.0, loss:0.39773914217948914
10-> accuracy1:100.0, accuracy2:32.24568068981171, accuracy3:100.0, loss:0.3871724009513855
20-> accuracy1:100.0, accuracy2:32.43761956691742, accuracy3:100.0, loss:0.3759898543357849
30-> accuracy1:100.0, accuracy2:32.581573724746704, accuracy3:100.0, loss:0.36394181847572327
40-> accuracy1:100.0, accuracy2:33.061420917510986, accuracy3:100.0, loss:0.3503299057483673
50-> accuracy1:100.0, accuracy2:33.925142884254456, accuracy3:100.0, loss:0.3343869149684906
60-> accuracy1:100.0, accuracy2:34.88483726978302, accuracy3:100.0, loss:0.31553390622138977
70-> accuracy1:100.0, accuracy2:48.32053780555725, accuracy3:97.50000238418579, loss:0.29308438301086426
80-> accuracy1:98.25000166893005, accuracy2:57.77351260185242, accuracy3:95.24999856948853, loss:0.2673409581184387
90-> accuracy1:100.0, accuracy2:59.35700535774231, accuracy3:97.75000214576721, loss:0.24856290221214294
B(x) = 0.0339690558221649*x1**4 - 0.0494081477939294*x1**3*x2 + 0.0888237399313416*x1**3 - 0.0154157658261601*x1**2*x2**2 - 0.212043998441172*x1**2*x2 + 0.710420490992475*x1**2 + 0.0557901677989297*x1*x2**3 + 0.167573990233111*x1*x2**2 + 0.265275074750665*x1*x2 - 0.433809418802127*x1 - 0.0218528705556725*x2**4 - 0.0440502922629419*x2**3 - 0.00412052226324688*x2**2 + 0.902762121288607*x2 - 0.0785354826659532
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:15
0-> accuracy1:100.0, accuracy2:58.974361419677734, accuracy3:98.87499809265137, loss:0.304706335067749
10-> accuracy1:100.0, accuracy2:61.446887254714966, accuracy3:99.62499737739563, loss:0.2921636402606964
20-> accuracy1:100.0, accuracy2:63.09523582458496, accuracy3:99.12499785423279, loss:0.28309696912765503
30-> accuracy1:100.0, accuracy2:63.41575384140015, accuracy3:99.00000095367432, loss:0.2750416696071625
40-> accuracy1:100.0, accuracy2:62.86630034446716, accuracy3:100.0, loss:0.2663399279117584
50-> accuracy1:100.0, accuracy2:62.08791136741638, accuracy3:100.0, loss:0.25741904973983765
60-> accuracy1:100.0, accuracy2:61.95054650306702, accuracy3:100.0, loss:0.2482302039861679
70-> accuracy1:100.0, accuracy2:61.90476417541504, accuracy3:100.0, loss:0.23886625468730927
80-> accuracy1:100.0, accuracy2:61.858975887298584, accuracy3:100.0, loss:0.22881834208965302
90-> accuracy1:100.0, accuracy2:61.58424615859985, accuracy3:100.0, loss:0.21789127588272095
B(x) = 0.0196188093662891*x1**4 - 0.0365595961412486*x1**3*x2 + 0.101868161359548*x1**3 + 0.00915040486681057*x1**2*x2**2 - 0.254465650040728*x1**2*x2 + 0.984979557289747*x1**2 + 0.0198302496932122*x1*x2**3 + 0.210686220173672*x1*x2**2 + 0.696565592819873*x1*x2 - 0.904345673218411*x1 - 0.00972340947170776*x2**4 - 0.0583231956595936*x2**3 + 0.133753880507404*x2**2 + 0.484850435957652*x2 - 0.0331259162869407
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:16
0-> accuracy1:100.0, accuracy2:59.194397926330566, accuracy3:100.0, loss:0.22740912437438965
10-> accuracy1:100.0, accuracy2:60.98949313163757, accuracy3:100.0, loss:0.21539685130119324
20-> accuracy1:100.0, accuracy2:62.04028129577637, accuracy3:100.0, loss:0.20510852336883545
30-> accuracy1:100.0, accuracy2:62.08406090736389, accuracy3:100.0, loss:0.19782677292823792
40-> accuracy1:100.0, accuracy2:61.427319049835205, accuracy3:100.0, loss:0.19359974563121796
50-> accuracy1:100.0, accuracy2:61.0332727432251, accuracy3:100.0, loss:0.19147294759750366
60-> accuracy1:100.0, accuracy2:60.726797580718994, accuracy3:100.0, loss:0.19003143906593323
70-> accuracy1:100.0, accuracy2:60.63923239707947, accuracy3:100.0, loss:0.18876592814922333
80-> accuracy1:100.0, accuracy2:60.68301200866699, accuracy3:100.0, loss:0.18745273351669312
90-> accuracy1:100.0, accuracy2:60.63923239707947, accuracy3:100.0, loss:0.18604065477848053
B(x) = 0.0159262748721529*x1**4 - 0.0360763561075235*x1**3*x2 + 0.103200621002034*x1**3 + 0.0182525117015007*x1**2*x2**2 - 0.282185354016417*x1**2*x2 + 1.08913289303435*x1**2 + 0.0112418799658903*x1*x2**3 + 0.256155614578571*x1*x2**2 + 1.15450652529081*x1*x2 - 0.915771754926427*x1 - 0.00792998661242642*x2**4 - 0.0777230224767453*x2**3 + 0.280598976411595*x2**2 + 0.467821144679274*x2 + 0.0166419426611056
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:17
0-> accuracy1:100.0, accuracy2:58.22147727012634, accuracy3:100.0, loss:0.2000204622745514
10-> accuracy1:100.0, accuracy2:58.13758373260498, accuracy3:100.0, loss:0.19934150576591492
20-> accuracy1:100.0, accuracy2:58.09563994407654, accuracy3:100.0, loss:0.19903415441513062
30-> accuracy1:100.0, accuracy2:57.969796657562256, accuracy3:100.0, loss:0.19881433248519897
40-> accuracy1:100.0, accuracy2:57.76006579399109, accuracy3:100.0, loss:0.19856879115104675
50-> accuracy1:100.0, accuracy2:57.76006579399109, accuracy3:100.0, loss:0.19821877777576447
60-> accuracy1:100.0, accuracy2:57.80201554298401, accuracy3:100.0, loss:0.19774536788463593
70-> accuracy1:100.0, accuracy2:58.011746406555176, accuracy3:100.0, loss:0.19713211059570312
80-> accuracy1:100.0, accuracy2:58.09563994407654, accuracy3:100.0, loss:0.1963980495929718
90-> accuracy1:100.0, accuracy2:58.22147727012634, accuracy3:100.0, loss:0.19556957483291626
B(x) = 0.0207047229280458*x1**4 - 0.0412140386082381*x1**3*x2 + 0.118322705702645*x1**3 + 0.0145946324857683*x1**2*x2**2 - 0.310286883234497*x1**2*x2 + 1.08697303059699*x1**2 + 0.0149617237254768*x1*x2**3 + 0.270553379045431*x1*x2**2 + 1.22566099995961*x1*x2 - 0.928677610699682*x1 - 0.00827323212021274*x2**4 - 0.0787224214531257*x2**3 + 0.301224014975036*x2**2 + 0.467850517585679*x2 + 0.027490115076921
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:18
0-> accuracy1:100.0, accuracy2:56.03864789009094, accuracy3:100.0, loss:0.2093372792005539
10-> accuracy1:100.0, accuracy2:56.07890486717224, accuracy3:100.0, loss:0.20889288187026978
20-> accuracy1:100.0, accuracy2:56.19967579841614, accuracy3:100.0, loss:0.20878095924854279
30-> accuracy1:100.0, accuracy2:56.19967579841614, accuracy3:100.0, loss:0.20867201685905457
40-> accuracy1:100.0, accuracy2:56.36070966720581, accuracy3:100.0, loss:0.20843689143657684
50-> accuracy1:100.0, accuracy2:56.36070966720581, accuracy3:100.0, loss:0.2080686092376709
60-> accuracy1:100.0, accuracy2:56.44122362136841, accuracy3:100.0, loss:0.20763440430164337
70-> accuracy1:100.0, accuracy2:56.521737575531006, accuracy3:100.0, loss:0.20715895295143127
80-> accuracy1:100.0, accuracy2:56.64251446723938, accuracy3:100.0, loss:0.20666155219078064
90-> accuracy1:100.0, accuracy2:56.843799352645874, accuracy3:100.0, loss:0.20609313249588013
B(x) = 0.0230973344594561*x1**4 - 0.0385456550342419*x1**3*x2 + 0.135035789863784*x1**3 + 0.00467203012675887*x1**2*x2**2 - 0.338772057055772*x1**2*x2 + 1.09621092536945*x1**2 + 0.0198070638323838*x1*x2**3 + 0.282583234816035*x1*x2**2 + 1.26546547959363*x1*x2 - 0.961312326301424*x1 - 0.00835387491849525*x2**4 - 0.0785233493746073*x2**3 + 0.314937451246764*x2**2 + 0.454477883294336*x2 + 0.0305264388765643
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:19
0-> accuracy1:100.0, accuracy2:54.76006269454956, accuracy3:100.0, loss:0.21911835670471191
10-> accuracy1:100.0, accuracy2:54.876160621643066, accuracy3:100.0, loss:0.21879571676254272
20-> accuracy1:100.0, accuracy2:54.95356321334839, accuracy3:100.0, loss:0.2186577469110489
30-> accuracy1:100.0, accuracy2:54.99225854873657, accuracy3:100.0, loss:0.21846507489681244
40-> accuracy1:100.0, accuracy2:55.069661140441895, accuracy3:100.0, loss:0.2181720733642578
50-> accuracy1:100.0, accuracy2:55.1857590675354, accuracy3:100.0, loss:0.21779674291610718
60-> accuracy1:100.0, accuracy2:55.263155698776245, accuracy3:100.0, loss:0.21733739972114563
70-> accuracy1:100.0, accuracy2:55.37925958633423, accuracy3:100.0, loss:0.21680417656898499
80-> accuracy1:100.0, accuracy2:55.53405284881592, accuracy3:100.0, loss:0.2161845564842224
90-> accuracy1:100.0, accuracy2:55.6501567363739, accuracy3:100.0, loss:0.21543271839618683
B(x) = 0.0228398857124168*x1**4 - 0.0275884428901397*x1**3*x2 + 0.156194921147711*x1**3 - 0.0128801304688729*x1**2*x2**2 - 0.376769305670364*x1**2*x2 + 1.11343852253244*x1**2 + 0.0275596054687518*x1*x2**3 + 0.301842997928583*x1*x2**2 + 1.29937008446905*x1*x2 - 1.00349059670736*x1 - 0.00892464185328564*x2**4 - 0.0804078949000033*x2**3 + 0.335508663161504*x2**2 + 0.441667444540334*x2 + 0.027819130604855
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:20
0-> accuracy1:100.0, accuracy2:53.912073373794556, accuracy3:100.0, loss:0.22736108303070068
10-> accuracy1:100.0, accuracy2:54.02384400367737, accuracy3:100.0, loss:0.2268538624048233
20-> accuracy1:100.0, accuracy2:54.061102867126465, accuracy3:100.0, loss:0.2265978753566742
30-> accuracy1:100.0, accuracy2:54.09836173057556, accuracy3:100.0, loss:0.22632479667663574
40-> accuracy1:100.0, accuracy2:54.02384400367737, accuracy3:100.0, loss:0.22595666348934174
50-> accuracy1:100.0, accuracy2:54.061102867126465, accuracy3:100.0, loss:0.2254514992237091
60-> accuracy1:100.0, accuracy2:54.43367958068848, accuracy3:100.0, loss:0.2248149961233139
70-> accuracy1:100.0, accuracy2:54.47093844413757, accuracy3:100.0, loss:0.2240847647190094
80-> accuracy1:100.0, accuracy2:54.806262254714966, accuracy3:100.0, loss:0.2232809066772461
90-> accuracy1:100.0, accuracy2:54.99255061149597, accuracy3:100.0, loss:0.2224232703447342
B(x) = 0.0183630999196682*x1**4 - 0.0067747622081256*x1**3*x2 + 0.183166306214508*x1**3 - 0.0378632719864931*x1**2*x2**2 - 0.431783970003158*x1**2*x2 + 1.11736432410823*x1**2 + 0.0376926168359257*x1*x2**3 + 0.337246873172036*x1*x2**2 + 1.33640579071397*x1*x2 - 1.02499811011388*x1 - 0.00987771628714667*x2**4 - 0.0873756304710092*x2**3 + 0.359146064896971*x2**2 + 0.45500386985328*x2 + 0.0197242030648704
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
Failed
Elapsed Time: 110.11241712491028
