{'batch_size': 600, 'lr': np.float64(0.11999999999999998), 'loss_weight_continuous': (1, 1, 1), 'R_b': 0.4, 'margin': 0.4, 'DEG_continuous': [2, 4, 4, 2], 'learning_loops': 100, 'max_iter': 20, 'err': 0.02677454477719443}

Mosek can be used normally.
iter:1
0-> accuracy1:0.0, accuracy2:23.999999463558197, accuracy3:0.0, loss:1.1977741718292236
10-> accuracy1:100.0, accuracy2:97.50000238418579, accuracy3:100.0, loss:0.05584191158413887
20-> accuracy1:100.0, accuracy2:99.16666746139526, accuracy3:100.0, loss:-0.0046037896536290646
30-> accuracy1:100.0, accuracy2:98.83333444595337, accuracy3:91.8333351612091, loss:0.20798051357269287
40-> accuracy1:100.0, accuracy2:98.50000143051147, accuracy3:100.0, loss:0.11257056891918182
50-> accuracy1:100.0, accuracy2:99.6666669845581, accuracy3:97.83333539962769, loss:0.010101805441081524
60-> accuracy1:100.0, accuracy2:99.6666669845581, accuracy3:100.0, loss:-0.010897318832576275
70-> accuracy1:100.0, accuracy2:99.83333349227905, accuracy3:100.0, loss:-0.01216399297118187
80-> accuracy1:100.0, accuracy2:99.6666669845581, accuracy3:100.0, loss:-0.012172387912869453
90-> accuracy1:100.0, accuracy2:99.6666669845581, accuracy3:100.0, loss:-0.010835266672074795
B(x) = 3.42423437623656*x1**4 + 22.0415197038055*x1**3*x2 - 6.93495216049006*x1**3 + 33.02870903942*x1**2*x2**2 - 23.5082697986988*x1**2*x2 + 26.832451423104*x1**2 + 22.0620699442858*x1*x2**3 - 2.48327272435002*x1*x2**2 + 46.9649417481922*x1*x2 - 12.5249822902399*x1 + 6.00073167549376*x2**4 + 3.36337249877636*x2**3 + 14.5752177249953*x2**2 + 3.70791016913396*x2 - 1.33112588462867
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:2
0-> accuracy1:100.0, accuracy2:85.4285717010498, accuracy3:100.0, loss:0.27798891067504883
10-> accuracy1:97.50000238418579, accuracy2:98.71428608894348, accuracy3:100.0, loss:0.031129050999879837
20-> accuracy1:100.0, accuracy2:99.00000095367432, accuracy3:99.50000047683716, loss:0.006012327969074249
30-> accuracy1:100.0, accuracy2:99.1428554058075, accuracy3:100.0, loss:0.007581199053674936
40-> accuracy1:100.0, accuracy2:99.28571581840515, accuracy3:100.0, loss:0.0026633786037564278
50-> accuracy1:100.0, accuracy2:99.28571581840515, accuracy3:100.0, loss:0.0021938923746347427
60-> accuracy1:100.0, accuracy2:99.28571581840515, accuracy3:100.0, loss:-0.0031089026015251875
70-> accuracy1:100.0, accuracy2:99.28571581840515, accuracy3:100.0, loss:-0.0032196256797760725
80-> accuracy1:100.0, accuracy2:99.42857027053833, accuracy3:100.0, loss:-0.004519334994256496
90-> accuracy1:100.0, accuracy2:99.57143068313599, accuracy3:100.0, loss:-0.004794970154762268
B(x) = 1.01465430635097*x1**4 + 5.76332581717785*x1**3*x2 - 1.98994941577929*x1**3 + 10.9114617763092*x1**2*x2**2 - 5.2499356937303*x1**2*x2 + 9.73354030209014*x1**2 + 8.16500017029368*x1*x2**3 + 1.080569947959*x1*x2**2 + 13.6478980925444*x1*x2 - 5.09071927119034*x1 + 2.3505786542099*x2**4 + 0.310414986408391*x2**3 + 5.52652524610278*x2**2 + 2.39831015167891*x2 + 1.1109993736685
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:3
0-> accuracy1:100.0, accuracy2:87.00000047683716, accuracy3:100.0, loss:0.15050993859767914
10-> accuracy1:100.0, accuracy2:86.50000095367432, accuracy3:97.00000286102295, loss:0.0968175083398819
20-> accuracy1:100.0, accuracy2:86.62499785423279, accuracy3:100.0, loss:0.08114439249038696
30-> accuracy1:100.0, accuracy2:86.75000071525574, accuracy3:100.0, loss:0.08032529801130295
40-> accuracy1:100.0, accuracy2:86.87499761581421, accuracy3:100.0, loss:0.07696125656366348
50-> accuracy1:100.0, accuracy2:86.87499761581421, accuracy3:100.0, loss:0.07456869632005692
60-> accuracy1:100.0, accuracy2:87.00000047683716, accuracy3:100.0, loss:0.06943406909704208
70-> accuracy1:100.0, accuracy2:85.50000190734863, accuracy3:100.0, loss:0.06121807172894478
80-> accuracy1:100.0, accuracy2:90.49999713897705, accuracy3:100.0, loss:0.03763829171657562
90-> accuracy1:100.0, accuracy2:95.37500143051147, accuracy3:100.0, loss:0.022344430908560753
B(x) = 1.19773282351688*x1**4 + 11.7531036388092*x1**3*x2 - 0.875700637660926*x1**3 + 23.9657586334182*x1**2*x2**2 + 5.47791230472886*x1**2*x2 + 21.6707704537483*x1**2 + 37.9804941570097*x1*x2**3 + 54.2315489744311*x1*x2**2 + 25.8265485168826*x1*x2 - 26.3882212260944*x1 + 17.7463676996541*x2**4 + 31.1976259545257*x2**3 + 8.29128970280176*x2**2 - 12.5143789708513*x2 + 1.0871549960809
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:4
0-> accuracy1:100.0, accuracy2:84.11111235618591, accuracy3:99.6666669845581, loss:0.4920634925365448
10-> accuracy1:100.0, accuracy2:87.55555748939514, accuracy3:31.49999976158142, loss:31.553260803222656
20-> accuracy1:79.666668176651, accuracy2:79.11111116409302, accuracy3:100.0, loss:359.8807373046875
30-> accuracy1:90.3333306312561, accuracy2:88.44444155693054, accuracy3:100.0, loss:190.9604034423828
40-> accuracy1:79.666668176651, accuracy2:88.55555653572083, accuracy3:100.0, loss:226.25914001464844
50-> accuracy1:93.00000071525574, accuracy2:92.77777671813965, accuracy3:91.50000214576721, loss:33.837974548339844
60-> accuracy1:89.16666507720947, accuracy2:89.66666460037231, accuracy3:100.0, loss:33.94844055175781
70-> accuracy1:94.9999988079071, accuracy2:91.00000262260437, accuracy3:100.0, loss:10.381658554077148
80-> accuracy1:94.16666626930237, accuracy2:94.44444179534912, accuracy3:98.50000143051147, loss:6.024378776550293
90-> accuracy1:95.6666648387909, accuracy2:90.66666960716248, accuracy3:100.0, loss:3.127423048019409
B(x) = -33.4990884870596*x1**4 + 11.9133886704229*x1**3*x2 + 473.174251472737*x1**3 + 519.043124731771*x1**2*x2**2 - 1842.62524937162*x1**2*x2 + 3941.28467976088*x1**2 + 384.616468388833*x1*x2**3 - 1264.32452339779*x1*x2**2 + 7632.66215566095*x1*x2 - 1770.71485586087*x1 + 186.274789454527*x2**4 + 176.826293250862*x2**3 + 2846.80858083177*x2**2 - 585.980491821288*x2 - 97.4310134925583
Add 97 counterexamples!
iter:5
0-> accuracy1:98.16666841506958, accuracy2:86.15847826004028, accuracy3:99.33333396911621, loss:7.991864204406738
10-> accuracy1:95.333331823349, accuracy2:86.35907769203186, accuracy3:100.0, loss:5.3722758293151855
20-> accuracy1:96.16666436195374, accuracy2:85.95787286758423, accuracy3:100.0, loss:3.7001519203186035
30-> accuracy1:96.66666388511658, accuracy2:85.5566680431366, accuracy3:99.00000095367432, loss:3.054002046585083
40-> accuracy1:97.00000286102295, accuracy2:86.05817556381226, accuracy3:99.00000095367432, loss:2.5022661685943604
50-> accuracy1:94.9999988079071, accuracy2:86.65997982025146, accuracy3:99.50000047683716, loss:2.0394318103790283
60-> accuracy1:95.6666648387909, accuracy2:86.86057925224304, accuracy3:99.00000095367432, loss:1.7769969701766968
70-> accuracy1:94.49999928474426, accuracy2:87.26178407669067, accuracy3:99.33333396911621, loss:1.5334750413894653
80-> accuracy1:96.16666436195374, accuracy2:86.76028251647949, accuracy3:99.83333349227905, loss:1.3215100765228271
90-> accuracy1:94.83333230018616, accuracy2:86.96088194847107, accuracy3:99.33333396911621, loss:1.124942421913147
B(x) = -11.9521294128838*x1**4 - 7.35322091371216*x1**3*x2 + 6.8688234970332*x1**3 + 77.9977531067451*x1**2*x2**2 - 486.802065899592*x1**2*x2 + 1011.91084757504*x1**2 + 61.1984087578829*x1*x2**3 - 487.550829480753*x1*x2**2 + 2067.21052672249*x1*x2 - 303.767042257578*x1 + 25.9124586435563*x2**4 - 89.0129962028536*x2**3 + 899.158224834062*x2**2 - 113.549257421741*x2 - 25.0386344697084
Add 33 counterexamples!
Add 85 counterexamples!
iter:6
0-> accuracy1:90.67930579185486, accuracy2:79.75970506668091, accuracy3:99.50000047683716, loss:1.59756600856781
10-> accuracy1:92.8909957408905, accuracy2:80.59149980545044, accuracy3:99.83333349227905, loss:1.3444633483886719
20-> accuracy1:95.8925724029541, accuracy2:79.3900191783905, accuracy3:99.00000095367432, loss:1.1900479793548584
30-> accuracy1:94.47077512741089, accuracy2:79.0203332901001, accuracy3:100.0, loss:1.0051064491271973
40-> accuracy1:94.15481686592102, accuracy2:79.3900191783905, accuracy3:98.83333444595337, loss:0.8593015670776367
50-> accuracy1:94.62875127792358, accuracy2:79.3900191783905, accuracy3:99.6666669845581, loss:0.7684316635131836
60-> accuracy1:96.05055451393127, accuracy2:79.11275625228882, accuracy3:100.0, loss:0.6916788816452026
70-> accuracy1:92.57503747940063, accuracy2:79.3900191783905, accuracy3:98.66666793823242, loss:0.5906160473823547
80-> accuracy1:90.99525809288025, accuracy2:80.406653881073, accuracy3:99.33333396911621, loss:0.5439551472663879
90-> accuracy1:91.94312691688538, accuracy2:79.57485914230347, accuracy3:99.83333349227905, loss:0.49094220995903015
B(x) = -4.06565352324649*x1**4 - 3.29790345221954*x1**3*x2 - 30.1394832701834*x1**3 + 15.2304284828651*x1**2*x2**2 - 169.650928205716*x1**2*x2 + 300.007026616042*x1**2 + 8.59268421283997*x1*x2**3 - 160.279544735432*x1*x2**2 + 607.196787265065*x1*x2 - 66.5569471317992*x1 + 3.95943345586475*x2**4 - 37.910071602404*x2**3 + 262.418777810002*x2**2 - 18.8745803897364*x2 - 6.81761631157986
Add 73 counterexamples!
iter:7
0-> accuracy1:92.73301959037781, accuracy2:74.19913411140442, accuracy3:99.6666669845581, loss:0.5071576833724976
10-> accuracy1:100.0, accuracy2:69.17749047279358, accuracy3:100.0, loss:3.6298742294311523
20-> accuracy1:99.36808943748474, accuracy2:67.79220700263977, accuracy3:100.0, loss:3.8020732402801514
30-> accuracy1:95.10268568992615, accuracy2:73.33333492279053, accuracy3:97.66666889190674, loss:2.15763521194458
40-> accuracy1:95.57662010192871, accuracy2:71.60173058509827, accuracy3:98.33333492279053, loss:1.6378998756408691
50-> accuracy1:94.15481686592102, accuracy2:72.46752977371216, accuracy3:100.0, loss:1.2596044540405273
60-> accuracy1:96.84044122695923, accuracy2:73.33333492279053, accuracy3:97.33333587646484, loss:0.9506884217262268
70-> accuracy1:96.05055451393127, accuracy2:73.67965579032898, accuracy3:100.0, loss:0.6808240413665771
80-> accuracy1:97.31437563896179, accuracy2:74.54545497894287, accuracy3:99.50000047683716, loss:0.48457297682762146
90-> accuracy1:98.10426831245422, accuracy2:73.9393949508667, accuracy3:100.0, loss:0.5063452124595642
B(x) = 23.5260783541657*x1**4 + 169.730242199475*x1**3*x2 + 89.6735893341023*x1**3 + 368.991448517849*x1**2*x2**2 + 360.127540636076*x1**2*x2 + 215.402854130837*x1**2 + 323.71734269054*x1*x2**3 + 518.207399085423*x1*x2**2 + 416.022028997098*x1*x2 - 60.129153903757*x1 + 102.690711168981*x2**4 + 220.7714707223*x2**3 + 182.049192059868*x2**2 - 26.7776114831618*x2 - 3.19912102873398
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 69 counterexamples!
iter:8
0-> accuracy1:97.31437563896179, accuracy2:71.48692607879639, accuracy3:100.0, loss:0.4525778591632843
10-> accuracy1:97.31437563896179, accuracy2:71.97712659835815, accuracy3:100.0, loss:0.3302883505821228
20-> accuracy1:99.52606558799744, accuracy2:65.27777910232544, accuracy3:100.0, loss:0.6485795378684998
30-> accuracy1:96.05055451393127, accuracy2:70.09803652763367, accuracy3:100.0, loss:0.46733784675598145
40-> accuracy1:97.63033390045166, accuracy2:69.03594732284546, accuracy3:98.00000190734863, loss:0.36028894782066345
50-> accuracy1:96.36650681495667, accuracy2:71.73202633857727, accuracy3:99.83333349227905, loss:0.29036813974380493
60-> accuracy1:96.68246507644653, accuracy2:71.89542651176453, accuracy3:100.0, loss:0.2513374090194702
70-> accuracy1:97.31437563896179, accuracy2:72.14052081108093, accuracy3:99.6666669845581, loss:0.2090311050415039
80-> accuracy1:97.31437563896179, accuracy2:72.95751571655273, accuracy3:98.83333444595337, loss:0.19178064167499542
90-> accuracy1:97.31437563896179, accuracy2:72.0588207244873, accuracy3:100.0, loss:0.17920087277889252
B(x) = 9.27497506899198*x1**4 + 72.9124347482428*x1**3*x2 + 27.2906210688675*x1**3 + 166.947316682005*x1**2*x2**2 + 140.328536447613*x1**2*x2 + 74.8763560902291*x1**2 + 150.519576884985*x1*x2**3 + 217.736506389053*x1*x2**2 + 149.604601024437*x1*x2 - 17.389773242749*x1 + 49.0937649130429*x2**4 + 97.873704329197*x2**3 + 68.3051884345135*x2**2 - 9.53428349611754*x2 - 0.36605053576801
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
iter:9
0-> accuracy1:96.84044122695923, accuracy2:72.46732115745544, accuracy3:99.33333396911621, loss:0.1715685874223709
10-> accuracy1:96.99841737747192, accuracy2:71.8137264251709, accuracy3:100.0, loss:0.1654038429260254
20-> accuracy1:97.63033390045166, accuracy2:70.5065369606018, accuracy3:98.33333492279053, loss:0.1770019233226776
30-> accuracy1:97.1563994884491, accuracy2:70.5065369606018, accuracy3:100.0, loss:0.165304496884346
40-> accuracy1:96.99841737747192, accuracy2:69.93464231491089, accuracy3:99.00000095367432, loss:0.16669327020645142
50-> accuracy1:97.63033390045166, accuracy2:68.38235259056091, accuracy3:100.0, loss:0.16580229997634888
60-> accuracy1:97.63033390045166, accuracy2:67.97385811805725, accuracy3:99.00000095367432, loss:0.16193625330924988
70-> accuracy1:97.63033390045166, accuracy2:68.05555820465088, accuracy3:99.00000095367432, loss:0.16404496133327484
80-> accuracy1:97.63033390045166, accuracy2:67.48365759849548, accuracy3:99.16666746139526, loss:0.16384591162204742
90-> accuracy1:97.63033390045166, accuracy2:66.58496856689453, accuracy3:100.0, loss:0.1622198075056076
B(x) = 4.34076811068388*x1**4 + 32.8327563435238*x1**3*x2 + 11.7593123524732*x1**3 + 74.7485036835624*x1**2*x2**2 + 61.2036095018231*x1**2*x2 + 30.4194947949642*x1**2 + 67.7840804520105*x1*x2**3 + 96.1618104941351*x1*x2**2 + 60.2308256459952*x1*x2 - 7.6073355358782*x1 + 22.3608534940012*x2**4 + 43.4531048532273*x2**3 + 27.3556876585908*x2**2 - 4.11126239395089*x2 - 0.0019410325119501
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:10
0-> accuracy1:97.63033390045166, accuracy2:61.17824912071228, accuracy3:99.6666669845581, loss:0.21720749139785767
10-> accuracy1:97.63033390045166, accuracy2:61.02719306945801, accuracy3:99.00000095367432, loss:0.20937210321426392
20-> accuracy1:98.26224446296692, accuracy2:59.06344652175903, accuracy3:97.1666693687439, loss:0.21015198528766632
30-> accuracy1:99.8420238494873, accuracy2:58.98791551589966, accuracy3:100.0, loss:0.1999189853668213
40-> accuracy1:100.0, accuracy2:57.930511236190796, accuracy3:100.0, loss:0.1982560157775879
50-> accuracy1:99.52606558799744, accuracy2:57.32628107070923, accuracy3:100.0, loss:0.19959326088428497
60-> accuracy1:98.73617887496948, accuracy2:57.32628107070923, accuracy3:100.0, loss:0.2033897191286087
70-> accuracy1:100.0, accuracy2:56.268882751464844, accuracy3:100.0, loss:0.2036294788122177
80-> accuracy1:99.36808943748474, accuracy2:55.74018359184265, accuracy3:100.0, loss:0.20635968446731567
90-> accuracy1:99.52606558799744, accuracy2:54.53172326087952, accuracy3:100.0, loss:0.20929160714149475
B(x) = 1.78830410053731*x1**4 + 14.7887346538767*x1**3*x2 + 4.49363144745046*x1**3 + 35.717334198963*x1**2*x2**2 + 26.7989675753584*x1**2*x2 + 12.4334096778676*x1**2 + 33.3421634587043*x1*x2**3 + 44.9095289239231*x1*x2**2 + 24.5626578261102*x1*x2 - 3.21342337163866*x1 + 11.0478205323789*x2**4 + 20.3319172604142*x2**3 + 11.4666634337135*x2**2 - 1.19279614615718*x2 + 0.00602855238794271
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:11
0-> accuracy1:100.0, accuracy2:50.070226192474365, accuracy3:100.0, loss:0.23724743723869324
10-> accuracy1:100.0, accuracy2:49.64887499809265, accuracy3:100.0, loss:0.23996950685977936
20-> accuracy1:100.0, accuracy2:49.087077379226685, accuracy3:100.0, loss:0.242660254240036
30-> accuracy1:100.0, accuracy2:48.17415773868561, accuracy3:100.0, loss:0.24497203528881073
40-> accuracy1:100.0, accuracy2:47.33146131038666, accuracy3:100.0, loss:0.2476070523262024
50-> accuracy1:100.0, accuracy2:46.699437499046326, accuracy3:100.0, loss:0.2502131164073944
60-> accuracy1:100.0, accuracy2:45.57584226131439, accuracy3:100.0, loss:0.2527209222316742
70-> accuracy1:100.0, accuracy2:44.9438214302063, accuracy3:100.0, loss:0.25585469603538513
80-> accuracy1:100.0, accuracy2:44.31179761886597, accuracy3:100.0, loss:0.25775831937789917
90-> accuracy1:100.0, accuracy2:43.89044940471649, accuracy3:100.0, loss:0.25986114144325256
B(x) = 0.785318817472636*x1**4 + 6.85300999770681*x1**3*x2 + 2.29960772896201*x1**3 + 17.042704259037*x1**2*x2**2 + 13.4746920554169*x1**2*x2 + 6.1385252024491*x1**2 + 16.0840682352352*x1*x2**3 + 22.3770440812353*x1*x2**2 + 12.3892490864557*x1*x2 - 1.43359208720393*x1 + 5.29870583247123*x2**4 + 9.87887327437774*x2**3 + 5.92354651107222*x2**2 - 0.021518101692872*x2 + 0.0156899381994759
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:12
0-> accuracy1:100.0, accuracy2:40.74803292751312, accuracy3:100.0, loss:0.280359148979187
10-> accuracy1:100.0, accuracy2:40.15747904777527, accuracy3:100.0, loss:0.28204062581062317
20-> accuracy1:100.0, accuracy2:40.02624750137329, accuracy3:100.0, loss:0.28395789861679077
30-> accuracy1:100.0, accuracy2:39.69816267490387, accuracy3:100.0, loss:0.28589609265327454
40-> accuracy1:100.0, accuracy2:39.23884630203247, accuracy3:100.0, loss:0.2876439392566681
50-> accuracy1:100.0, accuracy2:39.041996002197266, accuracy3:100.0, loss:0.289377361536026
60-> accuracy1:100.0, accuracy2:38.713911175727844, accuracy3:100.0, loss:0.29109859466552734
70-> accuracy1:100.0, accuracy2:38.713911175727844, accuracy3:100.0, loss:0.29272159934043884
80-> accuracy1:100.0, accuracy2:38.713911175727844, accuracy3:100.0, loss:0.2942119836807251
90-> accuracy1:100.0, accuracy2:38.713911175727844, accuracy3:100.0, loss:0.2957010567188263
B(x) = 0.305989924782354*x1**4 + 3.03333331865225*x1**3*x2 + 1.02597066414*x1**3 + 8.078313026984*x1**2*x2**2 + 6.36605122932149*x1**2*x2 + 2.84450019378333*x1**2 + 7.77049964689188*x1*x2**3 + 10.9645699792979*x1*x2**2 + 6.00680056494919*x1*x2 - 0.739839250443054*x1 + 2.5116411969666*x2**4 + 4.72230202680904*x2**3 + 2.93166567679331*x2**2 + 0.383829995665779*x2 + 0.0629746398388674
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:13
0-> accuracy1:100.0, accuracy2:36.20689511299133, accuracy3:100.0, loss:0.313473641872406
10-> accuracy1:100.0, accuracy2:36.20689511299133, accuracy3:100.0, loss:0.3146625757217407
20-> accuracy1:100.0, accuracy2:36.145320534706116, accuracy3:100.0, loss:0.31574273109436035
30-> accuracy1:100.0, accuracy2:36.145320534706116, accuracy3:100.0, loss:0.31688129901885986
40-> accuracy1:100.0, accuracy2:36.145320534706116, accuracy3:100.0, loss:0.3181428909301758
50-> accuracy1:100.0, accuracy2:36.145320534706116, accuracy3:100.0, loss:0.3193416893482208
60-> accuracy1:100.0, accuracy2:36.08374297618866, accuracy3:100.0, loss:0.32050999999046326
70-> accuracy1:100.0, accuracy2:36.08374297618866, accuracy3:100.0, loss:0.32181161642074585
80-> accuracy1:100.0, accuracy2:36.02216839790344, accuracy3:100.0, loss:0.3224996030330658
90-> accuracy1:100.0, accuracy2:35.89901626110077, accuracy3:100.0, loss:0.3236336410045624
B(x) = 0.111062818212222*x1**4 + 1.26008472983597*x1**3*x2 + 0.457803120676907*x1**3 + 3.75209516181846*x1**2*x2**2 + 2.84270817807831*x1**2*x2 + 1.38061687274073*x1**2 + 3.72049057582527*x1*x2**3 + 5.28545099642044*x1*x2**2 + 2.99054481309225*x1*x2 - 0.561593491637238*x1 + 1.17138135109365*x2**4 + 2.22621298812377*x2**3 + 1.5835471711037*x2**2 + 0.515338524875128*x2 + 0.0559798542511738
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:14
0-> accuracy1:100.0, accuracy2:33.758699893951416, accuracy3:100.0, loss:0.33871760964393616
10-> accuracy1:100.0, accuracy2:33.700695633888245, accuracy3:100.0, loss:0.3398333489894867
20-> accuracy1:100.0, accuracy2:33.700695633888245, accuracy3:100.0, loss:0.3398958742618561
30-> accuracy1:100.0, accuracy2:33.700695633888245, accuracy3:100.0, loss:0.3408508598804474
40-> accuracy1:100.0, accuracy2:33.700695633888245, accuracy3:100.0, loss:0.3412277400493622
50-> accuracy1:100.0, accuracy2:33.700695633888245, accuracy3:100.0, loss:0.34204474091529846
60-> accuracy1:100.0, accuracy2:33.700695633888245, accuracy3:100.0, loss:0.3426436483860016
70-> accuracy1:100.0, accuracy2:33.700695633888245, accuracy3:100.0, loss:0.34331637620925903
80-> accuracy1:100.0, accuracy2:33.46867859363556, accuracy3:100.0, loss:0.3439127504825592
90-> accuracy1:100.0, accuracy2:33.41067433357239, accuracy3:100.0, loss:0.3446083664894104
B(x) = 0.0278093689518338*x1**4 + 0.445907972466734*x1**3*x2 + 0.185855708279183*x1**3 + 1.72993272376246*x1**2*x2**2 + 1.11730183321596*x1**2*x2 + 0.718501136236014*x1**2 + 1.84274098657187*x1*x2**3 + 2.55792518944715*x1*x2**2 + 1.6168109377158*x1*x2 - 0.487593334018157*x1 + 0.564051567470906*x2**4 + 1.07021196299113*x2**3 + 1.01787383241559*x2**2 + 0.60049357149687*x2 + 0.0476267367072385
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:15
0-> accuracy1:100.0, accuracy2:31.52412176132202, accuracy3:100.0, loss:0.3597848117351532
10-> accuracy1:100.0, accuracy2:31.414473056793213, accuracy3:100.0, loss:0.36033183336257935
20-> accuracy1:100.0, accuracy2:31.414473056793213, accuracy3:100.0, loss:0.3608896732330322
30-> accuracy1:100.0, accuracy2:31.414473056793213, accuracy3:100.0, loss:0.3614034652709961
40-> accuracy1:100.0, accuracy2:31.35964870452881, accuracy3:100.0, loss:0.3620539903640747
50-> accuracy1:100.0, accuracy2:31.304824352264404, accuracy3:100.0, loss:0.3626950979232788
60-> accuracy1:100.0, accuracy2:31.304824352264404, accuracy3:100.0, loss:0.36334189772605896
70-> accuracy1:100.0, accuracy2:31.14035129547119, accuracy3:100.0, loss:0.3639334738254547
80-> accuracy1:100.0, accuracy2:31.085526943206787, accuracy3:100.0, loss:0.3645089864730835
90-> accuracy1:100.0, accuracy2:31.030702590942383, accuracy3:100.0, loss:0.3650805354118347
B(x) = -0.000476264776752563*x1**4 + 0.0959820892047042*x1**3*x2 + 0.0801750479654717*x1**3 + 0.803140902998672*x1**2*x2**2 + 0.329347122547163*x1**2*x2 + 0.408241342260381*x1**2 + 0.965789056715066*x1*x2**3 + 1.26786467138224*x1*x2**2 + 0.928655816932888*x1*x2 - 0.471063274770312*x1 + 0.275741247802581*x2**4 + 0.511428041624002*x2**3 + 0.702468456179634*x2**2 + 0.619169374228969*x2 + 0.0457929701598523
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:16
0-> accuracy1:100.0, accuracy2:29.261955618858337, accuracy3:100.0, loss:0.38244521617889404
10-> accuracy1:100.0, accuracy2:29.261955618858337, accuracy3:100.0, loss:0.3829028606414795
20-> accuracy1:100.0, accuracy2:29.261955618858337, accuracy3:100.0, loss:0.3834589421749115
30-> accuracy1:100.0, accuracy2:29.261955618858337, accuracy3:100.0, loss:0.384268581867218
40-> accuracy1:100.0, accuracy2:29.261955618858337, accuracy3:100.0, loss:0.38457953929901123
50-> accuracy1:100.0, accuracy2:29.158005118370056, accuracy3:100.0, loss:0.38499101996421814
60-> accuracy1:100.0, accuracy2:29.158005118370056, accuracy3:100.0, loss:0.38535428047180176
70-> accuracy1:100.0, accuracy2:29.106029868125916, accuracy3:100.0, loss:0.38572975993156433
80-> accuracy1:100.0, accuracy2:29.054054617881775, accuracy3:100.0, loss:0.3861062526702881
90-> accuracy1:100.0, accuracy2:29.054054617881775, accuracy3:100.0, loss:0.38642963767051697
B(x) = -0.00291522379759543*x1**4 - 0.0370142552876549*x1**3*x2 + 0.0559889799944863*x1**3 + 0.370584773236438*x1**2*x2**2 + 0.000714794035055885*x1**2*x2 + 0.258002284819079*x1**2 + 0.53199048981324*x1*x2**3 + 0.662845023748701*x1*x2**2 + 0.578804197287765*x1*x2 - 0.454959336016323*x1 + 0.129034489089645*x2**4 + 0.230689571615533*x2**3 + 0.526848278285132*x2**2 + 0.631913823615796*x2 + 0.0407418289699252
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:17
0-> accuracy1:100.0, accuracy2:27.56916880607605, accuracy3:100.0, loss:0.4078190326690674
10-> accuracy1:100.0, accuracy2:27.56916880607605, accuracy3:100.0, loss:0.4079914093017578
20-> accuracy1:100.0, accuracy2:27.66798436641693, accuracy3:100.0, loss:0.40846696496009827
30-> accuracy1:100.0, accuracy2:27.56916880607605, accuracy3:100.0, loss:0.40897229313850403
40-> accuracy1:100.0, accuracy2:27.56916880607605, accuracy3:100.0, loss:0.4094122052192688
50-> accuracy1:100.0, accuracy2:27.56916880607605, accuracy3:100.0, loss:0.40968137979507446
60-> accuracy1:100.0, accuracy2:27.470356225967407, accuracy3:100.0, loss:0.40984466671943665
70-> accuracy1:100.0, accuracy2:27.470356225967407, accuracy3:100.0, loss:0.4099709093570709
80-> accuracy1:100.0, accuracy2:27.470356225967407, accuracy3:100.0, loss:0.4101261794567108
90-> accuracy1:100.0, accuracy2:27.420949935913086, accuracy3:100.0, loss:0.4103417992591858
B(x) = 0.00110342014360721*x1**4 - 0.0710681014370495*x1**3*x2 + 0.062402013956747*x1**3 + 0.185350894996577*x1**2*x2**2 - 0.105075182165988*x1**2*x2 + 0.212544737463162*x1**2 + 0.319230747448395*x1*x2**3 + 0.388467647763589*x1*x2**2 + 0.444153135853303*x1*x2 - 0.432650462826401*x1 + 0.0555486893656465*x2**4 + 0.0868218594005067*x2**3 + 0.43619507676861*x2**2 + 0.623813904676128*x2 + 0.0242719615874346
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:18
0-> accuracy1:100.0, accuracy2:26.03578269481659, accuracy3:100.0, loss:0.4303940534591675
10-> accuracy1:100.0, accuracy2:25.98870098590851, accuracy3:100.0, loss:0.4301362633705139
20-> accuracy1:100.0, accuracy2:26.03578269481659, accuracy3:100.0, loss:0.4297510087490082
30-> accuracy1:100.0, accuracy2:25.941619277000427, accuracy3:100.0, loss:0.42936971783638
40-> accuracy1:100.0, accuracy2:25.847458839416504, accuracy3:100.0, loss:0.4289841651916504
50-> accuracy1:100.0, accuracy2:25.800377130508423, accuracy3:100.0, loss:0.4284958839416504
60-> accuracy1:100.0, accuracy2:25.70621371269226, accuracy3:100.0, loss:0.4278765618801117
70-> accuracy1:100.0, accuracy2:25.612053275108337, accuracy3:100.0, loss:0.427190899848938
80-> accuracy1:100.0, accuracy2:25.517889857292175, accuracy3:100.0, loss:0.4264334738254547
90-> accuracy1:100.0, accuracy2:25.470811128616333, accuracy3:100.0, loss:0.42555806040763855
B(x) = -0.00105379858384354*x1**4 - 0.0835403041102615*x1**3*x2 + 0.0680771805056149*x1**3 + 0.102987350570175*x1**2*x2**2 - 0.132922073390417*x1**2*x2 + 0.25098998964789*x1**2 + 0.20826316043539*x1*x2**3 + 0.242725683163044*x1*x2**2 + 0.457471729526572*x1*x2 - 0.345337415926067*x1 + 0.0241772739052672*x2**4 + 0.0173487448968339*x2**3 + 0.398587932938685*x2**2 + 0.704052009311362*x2 + 0.0140132871291397
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:19
0-> accuracy1:100.0, accuracy2:24.280574917793274, accuracy3:100.0, loss:0.43543437123298645
10-> accuracy1:100.0, accuracy2:24.280574917793274, accuracy3:100.0, loss:0.4337509572505951
20-> accuracy1:100.0, accuracy2:24.32553917169571, accuracy3:100.0, loss:0.4315784275531769
30-> accuracy1:100.0, accuracy2:24.280574917793274, accuracy3:100.0, loss:0.4291851222515106
40-> accuracy1:100.0, accuracy2:24.280574917793274, accuracy3:100.0, loss:0.4264768362045288
50-> accuracy1:100.0, accuracy2:24.280574917793274, accuracy3:100.0, loss:0.4234789311885834
60-> accuracy1:100.0, accuracy2:24.235612154006958, accuracy3:100.0, loss:0.42016172409057617
70-> accuracy1:100.0, accuracy2:24.235612154006958, accuracy3:100.0, loss:0.4163968563079834
80-> accuracy1:100.0, accuracy2:24.280574917793274, accuracy3:100.0, loss:0.41208624839782715
90-> accuracy1:100.0, accuracy2:24.190647900104523, accuracy3:100.0, loss:0.4069877564907074
B(x) = -0.00460008003542467*x1**4 - 0.127154708244901*x1**3*x2 + 0.109861249013876*x1**3 + 0.0504825748867083*x1**2*x2**2 - 0.164882420025656*x1**2*x2 + 0.457041132607821*x1**2 + 0.160533319764888*x1*x2**3 + 0.157022962419363*x1*x2**2 + 0.663081104325919*x1*x2 - 0.24893584303784*x1 + 0.0170911098863992*x2**4 - 0.0116060438066426*x2**3 + 0.429511783867456*x2**2 + 0.88872021578089*x2 - 0.0248807406468784
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:20
0-> accuracy1:100.0, accuracy2:23.14974218606949, accuracy3:100.0, loss:0.40585482120513916
10-> accuracy1:99.21011328697205, accuracy2:23.235800862312317, accuracy3:100.0, loss:0.3992323875427246
20-> accuracy1:98.57819676399231, accuracy2:24.655765295028687, accuracy3:100.0, loss:0.39143499732017517
30-> accuracy1:98.10426831245422, accuracy2:29.561102390289307, accuracy3:100.0, loss:0.38178983330726624
40-> accuracy1:97.47235178947449, accuracy2:32.87435472011566, accuracy3:99.16666746139526, loss:0.37044557929039
50-> accuracy1:98.42022061347961, accuracy2:34.07917320728302, accuracy3:98.66666793823242, loss:0.3615999221801758
60-> accuracy1:99.36808943748474, accuracy2:34.89672839641571, accuracy3:99.16666746139526, loss:0.3558165431022644
70-> accuracy1:100.0, accuracy2:36.05852127075195, accuracy3:98.33333492279053, loss:0.35150468349456787
80-> accuracy1:100.0, accuracy2:36.488813161849976, accuracy3:98.16666841506958, loss:0.3479529619216919
90-> accuracy1:100.0, accuracy2:36.74698770046234, accuracy3:98.33333492279053, loss:0.3449264168739319
B(x) = 0.0485056931670338*x1**4 - 0.216966464518466*x1**3*x2 + 0.347627371811595*x1**3 - 0.0633422331060884*x1**2*x2**2 - 0.220024186984332*x1**2*x2 + 0.865048076129898*x1**2 + 0.16564042459931*x1*x2**3 + 0.109618235026919*x1*x2**2 + 1.05485892178514*x1*x2 - 0.444811353532747*x1 + 0.0199798239613241*x2**4 - 0.0320636124751807*x2**3 + 0.618767064733333*x2**2 + 1.1114937924805*x2 - 0.126574807853121
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
Failed
Elapsed Time: 110.15792149701156
