{'batch_size': 500, 'lr': np.float64(0.21999999999999997), 'loss_weight_continuous': (1, 1, 1), 'R_b': 0.4, 'margin': 0.4, 'DEG_continuous': [2, 4, 4, 2], 'learning_loops': 100, 'max_iter': 20, 'err': 0.24416471067351453}

Mosek can be used normally.
iter:1
0-> accuracy1:0.0, accuracy2:31.799998879432678, accuracy3:0.0, loss:1.2562222480773926
10-> accuracy1:100.0, accuracy2:94.19999718666077, accuracy3:93.00000071525574, loss:0.41287416219711304
20-> accuracy1:96.79999947547913, accuracy2:95.99999785423279, accuracy3:100.0, loss:4.042026042938232
30-> accuracy1:100.0, accuracy2:93.99999976158142, accuracy3:100.0, loss:12.4903564453125
40-> accuracy1:95.20000219345093, accuracy2:98.4000027179718, accuracy3:100.0, loss:3.833862781524658
50-> accuracy1:97.60000109672546, accuracy2:82.99999833106995, accuracy3:100.0, loss:1033.1173095703125
60-> accuracy1:100.0, accuracy2:96.39999866485596, accuracy3:100.0, loss:25.195423126220703
70-> accuracy1:98.00000190734863, accuracy2:97.39999771118164, accuracy3:100.0, loss:27.06034278869629
80-> accuracy1:94.9999988079071, accuracy2:96.79999947547913, accuracy3:100.0, loss:55.03568649291992
90-> accuracy1:100.0, accuracy2:97.39999771118164, accuracy3:100.0, loss:113.89619445800781
B(x) = -409.273918494047*x1**4 + 6613.83503902863*x1**3*x2 + 2609.08341418844*x1**3 + 7443.34727583456*x1**2*x2**2 - 18738.0889599252*x1**2*x2 + 11809.5170349346*x1**2 + 1796.41388074691*x1*x2**3 - 3216.88291639756*x1*x2**2 + 20897.9995474957*x1*x2 - 14003.1654136372*x1 - 106.175344131554*x2**4 + 3682.62232655986*x2**3 - 19774.0916298986*x2**2 + 25937.6504804808*x2 - 4817.73131143595
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:2
0-> accuracy1:100.0, accuracy2:81.33333325386047, accuracy3:100.0, loss:1108.1163330078125
10-> accuracy1:86.00000143051147, accuracy2:89.99999761581421, accuracy3:100.0, loss:177.6505126953125
20-> accuracy1:83.79999995231628, accuracy2:98.16666841506958, accuracy3:100.0, loss:93.79908752441406
30-> accuracy1:86.00000143051147, accuracy2:85.16666889190674, accuracy3:100.0, loss:48.084754943847656
40-> accuracy1:89.80000019073486, accuracy2:86.33333444595337, accuracy3:100.0, loss:30.82373046875
50-> accuracy1:88.40000033378601, accuracy2:98.66666793823242, accuracy3:97.2000002861023, loss:12.856978416442871
60-> accuracy1:92.79999732971191, accuracy2:89.99999761581421, accuracy3:100.0, loss:6.755102157592773
70-> accuracy1:94.59999799728394, accuracy2:95.16666531562805, accuracy3:100.0, loss:2.665245532989502
80-> accuracy1:94.40000057220459, accuracy2:94.33333277702332, accuracy3:98.00000190734863, loss:1.9021296501159668
90-> accuracy1:98.60000014305115, accuracy2:81.83333277702332, accuracy3:90.20000100135803, loss:15.67773723602295
B(x) = 37.5229842277116*x1**4 + 334.548523755492*x1**3*x2 + 68.4425125108641*x1**3 + 343.314701486779*x1**2*x2**2 - 1023.46985589363*x1**2*x2 + 1203.40169190789*x1**2 + 349.348891661639*x1*x2**3 - 217.741098282472*x1*x2**2 + 1953.36002763748*x1*x2 - 619.458645875608*x1 + 113.947041966916*x2**4 - 124.021632183193*x2**3 + 697.337349069775*x2**2 + 587.089427172812*x2 - 393.869779556399
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
Add 100 counterexamples!
iter:3
0-> accuracy1:71.16666436195374, accuracy2:81.99999928474426, accuracy3:100.0, loss:38.050758361816406
10-> accuracy1:84.33333039283752, accuracy2:80.14285564422607, accuracy3:100.0, loss:11.674276351928711
20-> accuracy1:77.8333306312561, accuracy2:85.28571724891663, accuracy3:100.0, loss:7.7332868576049805
30-> accuracy1:77.66666412353516, accuracy2:86.28571629524231, accuracy3:99.19999837875366, loss:2.931521415710449
40-> accuracy1:83.99999737739563, accuracy2:86.14285588264465, accuracy3:100.0, loss:1.4705126285552979
50-> accuracy1:85.00000238418579, accuracy2:86.8571400642395, accuracy3:100.0, loss:0.8753618597984314
60-> accuracy1:80.0000011920929, accuracy2:92.14285612106323, accuracy3:100.0, loss:0.7954379320144653
70-> accuracy1:82.4999988079071, accuracy2:90.57142734527588, accuracy3:98.19999933242798, loss:0.4741618037223816
80-> accuracy1:83.83333086967468, accuracy2:90.14285802841187, accuracy3:97.79999852180481, loss:0.30791494250297546
90-> accuracy1:94.83333230018616, accuracy2:79.5714259147644, accuracy3:98.4000027179718, loss:0.4090375006198883
B(x) = 6.84026480832978*x1**4 + 25.0848474783704*x1**3*x2 - 14.8310010589699*x1**3 + 29.6219644583714*x1**2*x2**2 - 81.500988932751*x1**2*x2 + 109.717431240848*x1**2 + 23.4029253646463*x1*x2**3 - 46.4380474852567*x1*x2**2 + 196.709904070313*x1*x2 - 46.8998522858753*x1 + 12.8959926789483*x2**4 + 0.215582115582228*x2**3 + 71.2927692535717*x2**2 - 17.0053683673123*x2 - 3.63412634336427
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 75 counterexamples!
Add 100 counterexamples!
iter:4
0-> accuracy1:83.55555534362793, accuracy2:69.62500214576721, accuracy3:100.0, loss:0.75543212890625
10-> accuracy1:69.03703808784485, accuracy2:95.99999785423279, accuracy3:100.0, loss:0.48780766129493713
20-> accuracy1:89.03703689575195, accuracy2:70.24999856948853, accuracy3:100.0, loss:0.4062347412109375
30-> accuracy1:84.29629802703857, accuracy2:74.00000095367432, accuracy3:100.0, loss:0.28343841433525085
40-> accuracy1:89.62963223457336, accuracy2:79.25000190734863, accuracy3:99.59999918937683, loss:0.22934170067310333
50-> accuracy1:91.25925898551941, accuracy2:68.50000023841858, accuracy3:100.0, loss:0.3115629553794861
60-> accuracy1:76.88888907432556, accuracy2:80.25000095367432, accuracy3:97.79999852180481, loss:0.22892683744430542
70-> accuracy1:86.07407212257385, accuracy2:71.74999713897705, accuracy3:100.0, loss:0.22038689255714417
80-> accuracy1:86.96296215057373, accuracy2:75.74999928474426, accuracy3:100.0, loss:0.2159368395805359
90-> accuracy1:90.96296429634094, accuracy2:69.12500262260437, accuracy3:100.0, loss:0.2058401256799698
B(x) = 1.10324376671738*x1**4 + 3.59758045356506*x1**3*x2 - 3.21593567553028*x1**3 + 4.16704370465815*x1**2*x2**2 - 13.0178199950914*x1**2*x2 + 17.8528950752116*x1**2 + 3.82264878097992*x1*x2**3 - 6.82340008733561*x1*x2**2 + 33.7239203261394*x1*x2 - 7.28896334761938*x1 + 2.30122003051429*x2**4 + 1.20575674352915*x2**3 + 11.7177465730408*x2**2 - 4.07186908597492*x2 + 0.403569511990362
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 95 counterexamples!
iter:5
0-> accuracy1:89.62963223457336, accuracy2:61.00558638572693, accuracy3:100.0, loss:0.2575850784778595
10-> accuracy1:89.62963223457336, accuracy2:59.10614728927612, accuracy3:100.0, loss:0.26570069789886475
20-> accuracy1:91.70370101928711, accuracy2:57.541900873184204, accuracy3:100.0, loss:0.2626689076423645
30-> accuracy1:92.74073839187622, accuracy2:56.759774684906006, accuracy3:100.0, loss:0.26178768277168274
40-> accuracy1:94.07407641410828, accuracy2:55.75419068336487, accuracy3:100.0, loss:0.2623499929904938
50-> accuracy1:94.37037110328674, accuracy2:55.64245581626892, accuracy3:100.0, loss:0.26269567012786865
60-> accuracy1:94.37037110328674, accuracy2:55.08379936218262, accuracy3:100.0, loss:0.263296902179718
70-> accuracy1:95.99999785423279, accuracy2:54.74860072135925, accuracy3:100.0, loss:0.26277753710746765
80-> accuracy1:97.0370352268219, accuracy2:54.74860072135925, accuracy3:100.0, loss:0.2630310356616974
90-> accuracy1:97.18518257141113, accuracy2:54.525136947631836, accuracy3:100.0, loss:0.26340457797050476
B(x) = 0.407178143056222*x1**4 + 1.25307498774293*x1**3*x2 - 0.858792667746463*x1**3 + 1.38619965442877*x1**2*x2**2 - 3.55911049229575*x1**2*x2 + 4.89637181264604*x1**2 + 0.925809379947277*x1*x2**3 - 1.69682482330618*x1*x2**2 + 9.33325560604325*x1*x2 - 2.36629335768199*x1 + 0.544141997333346*x2**4 + 0.315911032976009*x2**3 + 3.06936038194573*x2**2 - 0.904704419701176*x2 + 0.246139107922117
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:6
0-> accuracy1:99.11110997200012, accuracy2:49.045225977897644, accuracy3:100.0, loss:0.2966516315937042
10-> accuracy1:100.0, accuracy2:49.045225977897644, accuracy3:100.0, loss:0.2966946065425873
20-> accuracy1:100.0, accuracy2:49.045225977897644, accuracy3:100.0, loss:0.2969011068344116
30-> accuracy1:100.0, accuracy2:49.045225977897644, accuracy3:100.0, loss:0.2968144118785858
40-> accuracy1:100.0, accuracy2:49.045225977897644, accuracy3:100.0, loss:0.29677215218544006
50-> accuracy1:100.0, accuracy2:48.844221234321594, accuracy3:100.0, loss:0.2968098819255829
60-> accuracy1:100.0, accuracy2:48.844221234321594, accuracy3:100.0, loss:0.2966708838939667
70-> accuracy1:100.0, accuracy2:48.74371886253357, accuracy3:100.0, loss:0.2964373230934143
80-> accuracy1:100.0, accuracy2:48.643216490745544, accuracy3:100.0, loss:0.29628223180770874
90-> accuracy1:100.0, accuracy2:48.34170937538147, accuracy3:100.0, loss:0.2961347699165344
B(x) = 0.139254379025951*x1**4 + 0.405575727723393*x1**3*x2 - 0.210526368309567*x1**3 + 0.415665883574827*x1**2*x2**2 - 0.972604107305443*x1**2*x2 + 1.35537129155072*x1**2 + 0.211607693744372*x1*x2**3 - 0.368622757248037*x1*x2**2 + 2.74382407702436*x1*x2 - 0.939616187319171*x1 + 0.121692079443631*x2**4 + 0.104181867338264*x2**3 + 0.764334904262598*x2**2 + 0.00358966283695289*x2 + 0.174442136297364
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:7
0-> accuracy1:100.0, accuracy2:43.926939368247986, accuracy3:100.0, loss:0.32008105516433716
10-> accuracy1:100.0, accuracy2:43.744292855262756, accuracy3:100.0, loss:0.3206433653831482
20-> accuracy1:100.0, accuracy2:43.744292855262756, accuracy3:100.0, loss:0.3211709260940552
30-> accuracy1:100.0, accuracy2:43.56164336204529, accuracy3:100.0, loss:0.32189786434173584
40-> accuracy1:100.0, accuracy2:43.37899684906006, accuracy3:100.0, loss:0.3226221203804016
50-> accuracy1:100.0, accuracy2:43.287670612335205, accuracy3:100.0, loss:0.32332271337509155
60-> accuracy1:100.0, accuracy2:43.19634735584259, accuracy3:100.0, loss:0.32431933283805847
70-> accuracy1:100.0, accuracy2:43.01369786262512, accuracy3:100.0, loss:0.3255658447742462
80-> accuracy1:100.0, accuracy2:42.73972511291504, accuracy3:100.0, loss:0.32699039578437805
90-> accuracy1:100.0, accuracy2:42.10045635700226, accuracy3:100.0, loss:0.3285556733608246
B(x) = 0.057182205621725*x1**4 + 0.160888523474497*x1**3*x2 - 0.0557434339152128*x1**3 + 0.169937978582103*x1**2*x2**2 - 0.385789769941137*x1**2*x2 + 0.483611099580835*x1**2 + 0.0569797862540516*x1*x2**3 - 0.113291427488455*x1*x2**2 + 1.13319088012988*x1*x2 - 0.709578930485079*x1 + 0.0326499885348716*x2**4 + 0.026088462446268*x2**3 + 0.224858249624741*x2**2 + 0.160900017150259*x2 + 0.162889261791099
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:8
0-> accuracy1:100.0, accuracy2:38.242676854133606, accuracy3:100.0, loss:0.36660492420196533
10-> accuracy1:100.0, accuracy2:37.99163103103638, accuracy3:100.0, loss:0.3691965937614441
20-> accuracy1:100.0, accuracy2:37.74058520793915, accuracy3:100.0, loss:0.3719203770160675
30-> accuracy1:100.0, accuracy2:37.23849356174469, accuracy3:100.0, loss:0.37417107820510864
40-> accuracy1:100.0, accuracy2:37.07112967967987, accuracy3:100.0, loss:0.3771541714668274
50-> accuracy1:100.0, accuracy2:36.65271997451782, accuracy3:100.0, loss:0.38060468435287476
60-> accuracy1:100.0, accuracy2:36.317992210388184, accuracy3:100.0, loss:0.38421815633773804
70-> accuracy1:100.0, accuracy2:36.150628328323364, accuracy3:100.0, loss:0.38747644424438477
80-> accuracy1:100.0, accuracy2:35.899582505226135, accuracy3:100.0, loss:0.3908552825450897
90-> accuracy1:100.0, accuracy2:35.48117280006409, accuracy3:100.0, loss:0.39426010847091675
B(x) = 0.0223574110603595*x1**4 + 0.059173519379021*x1**3*x2 - 0.0110840359376451*x1**3 + 0.0649651538071576*x1**2*x2**2 - 0.157437653449751*x1**2*x2 + 0.199215774359153*x1**2 + 0.015755877588169*x1*x2**3 - 0.0193215743305198*x1*x2**2 + 0.486457729142224*x1*x2 - 0.554029885148749*x1 + 0.00930652515747025*x2**4 + 0.00943046748250055*x2**3 + 0.055338314081642*x2**2 + 0.26593019387454*x2 + 0.142840602429426
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:9
0-> accuracy1:100.0, accuracy2:32.74131417274475, accuracy3:100.0, loss:0.4341387450695038
10-> accuracy1:100.0, accuracy2:32.586872577667236, accuracy3:100.0, loss:0.4380004405975342
20-> accuracy1:100.0, accuracy2:32.04633295536041, accuracy3:100.0, loss:0.44148096442222595
30-> accuracy1:100.0, accuracy2:31.274130940437317, accuracy3:100.0, loss:0.4450060725212097
40-> accuracy1:100.0, accuracy2:30.424711108207703, accuracy3:100.0, loss:0.44876113533973694
50-> accuracy1:100.0, accuracy2:29.961389303207397, accuracy3:100.0, loss:0.4524998068809509
60-> accuracy1:100.0, accuracy2:29.343628883361816, accuracy3:100.0, loss:0.4563259780406952
70-> accuracy1:100.0, accuracy2:28.88031005859375, accuracy3:100.0, loss:0.4598757028579712
80-> accuracy1:100.0, accuracy2:28.339767456054688, accuracy3:100.0, loss:0.463385671377182
90-> accuracy1:100.0, accuracy2:27.95366942882538, accuracy3:100.0, loss:0.46704965829849243
B(x) = 0.0107385431788181*x1**4 + 0.0261652593309225*x1**3*x2 + 0.0031456083176841*x1**3 + 0.029252852813435*x1**2*x2**2 - 0.0678582116628516*x1**2*x2 + 0.113829050188354*x1**2 + 0.00518741614762474*x1*x2**3 + 0.00821085260160244*x1*x2**2 + 0.262124499711981*x1*x2 - 0.350699567979908*x1 + 0.00295718336618382*x2**4 + 0.0037564642072666*x2**3 + 0.00614660089111695*x2**2 + 0.401683370329399*x2 + 0.108171797195169
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:10
0-> accuracy1:100.0, accuracy2:25.44802725315094, accuracy3:100.0, loss:0.49825119972229004
10-> accuracy1:100.0, accuracy2:25.663083791732788, accuracy3:100.0, loss:0.50128173828125
20-> accuracy1:100.0, accuracy2:25.23297369480133, accuracy3:100.0, loss:0.5040436387062073
30-> accuracy1:100.0, accuracy2:25.23297369480133, accuracy3:100.0, loss:0.5062298774719238
40-> accuracy1:100.0, accuracy2:25.161290168762207, accuracy3:100.0, loss:0.5077267289161682
50-> accuracy1:100.0, accuracy2:25.01792013645172, accuracy3:100.0, loss:0.508842408657074
60-> accuracy1:100.0, accuracy2:24.946236610412598, accuracy3:100.0, loss:0.5097963213920593
70-> accuracy1:100.0, accuracy2:24.946236610412598, accuracy3:100.0, loss:0.5106813311576843
80-> accuracy1:100.0, accuracy2:24.659498035907745, accuracy3:100.0, loss:0.5116503238677979
90-> accuracy1:100.0, accuracy2:24.372759461402893, accuracy3:100.0, loss:0.5126539468765259
B(x) = 0.00722158956481162*x1**4 + 0.0136666649581395*x1**3*x2 + 0.00944623985408243*x1**3 + 0.0144179826683241*x1**2*x2**2 - 0.0383515659773851*x1**2*x2 + 0.104034108967203*x1**2 + 0.000140856664605433*x1*x2**3 + 0.0145334530856845*x1*x2**2 + 0.192178574891832*x1*x2 - 0.298252693781185*x1 + 0.000677662972535196*x2**4 + 0.000484874738166552*x2**3 - 0.0219717621393018*x2**2 + 0.428666780773826*x2 + 0.0981694536840613
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:11
0-> accuracy1:100.0, accuracy2:22.7424755692482, accuracy3:100.0, loss:0.5382420420646667
10-> accuracy1:100.0, accuracy2:23.411370813846588, accuracy3:100.0, loss:0.5325494408607483
20-> accuracy1:100.0, accuracy2:21.60535156726837, accuracy3:100.0, loss:0.5246561765670776
30-> accuracy1:100.0, accuracy2:21.404682099819183, accuracy3:100.0, loss:0.5157800912857056
40-> accuracy1:100.0, accuracy2:22.140468657016754, accuracy3:100.0, loss:0.5052799582481384
50-> accuracy1:100.0, accuracy2:27.75919735431671, accuracy3:100.0, loss:0.49220597743988037
60-> accuracy1:100.0, accuracy2:28.160536289215088, accuracy3:100.0, loss:0.4813966155052185
70-> accuracy1:100.0, accuracy2:28.361204266548157, accuracy3:100.0, loss:0.47743654251098633
80-> accuracy1:100.0, accuracy2:28.160536289215088, accuracy3:100.0, loss:0.4767877459526062
90-> accuracy1:100.0, accuracy2:28.22742462158203, accuracy3:100.0, loss:0.4774269759654999
B(x) = 0.00805094849097367*x1**4 + 0.0045600915851837*x1**3*x2 + 0.0225148387846261*x1**3 + 0.00876607888107109*x1**2*x2**2 - 0.031072703897317*x1**2*x2 + 0.144256990868533*x1**2 - 0.00276439764469254*x1*x2**3 + 0.0130800009231424*x1*x2**2 + 0.148562823877602*x1*x2 - 0.325342786200356*x1 + 0.000437388322420862*x2**4 - 0.00097979450053434*x2**3 - 0.0357893874897577*x2**2 + 0.451100860565338*x2 + 0.0875335524972475
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:12
0-> accuracy1:100.0, accuracy2:26.457679271697998, accuracy3:100.0, loss:0.49055933952331543
10-> accuracy1:100.0, accuracy2:26.33228898048401, accuracy3:100.0, loss:0.4909307062625885
20-> accuracy1:100.0, accuracy2:26.33228898048401, accuracy3:100.0, loss:0.4913724660873413
30-> accuracy1:100.0, accuracy2:26.269593834877014, accuracy3:100.0, loss:0.49186286330223083
40-> accuracy1:100.0, accuracy2:26.144200563430786, accuracy3:100.0, loss:0.4924846291542053
50-> accuracy1:100.0, accuracy2:26.08150541782379, accuracy3:100.0, loss:0.4931190013885498
60-> accuracy1:100.0, accuracy2:26.144200563430786, accuracy3:100.0, loss:0.4938351511955261
70-> accuracy1:100.0, accuracy2:26.144200563430786, accuracy3:100.0, loss:0.4945223927497864
80-> accuracy1:100.0, accuracy2:26.144200563430786, accuracy3:100.0, loss:0.495168536901474
90-> accuracy1:100.0, accuracy2:26.018807291984558, accuracy3:100.0, loss:0.4955940842628479
B(x) = 0.0079147277574097*x1**4 - 0.000386556470845122*x1**3*x2 + 0.026477648579268*x1**3 + 0.00515579553698909*x1**2*x2**2 - 0.0226038661698097*x1**2*x2 + 0.155290784475233*x1**2 - 0.00199597151598504*x1*x2**3 + 0.00893028831868527*x1*x2**2 + 0.124482720148854*x1*x2 - 0.424805705778244*x1 + 0.000266172282852409*x2**4 - 0.00102903612690678*x2**3 - 0.0346072676705518*x2**2 + 0.379629813337125*x2 + 0.090605491513878
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:13
0-> accuracy1:100.0, accuracy2:24.54277276992798, accuracy3:100.0, loss:0.5200986862182617
10-> accuracy1:100.0, accuracy2:24.719764292240143, accuracy3:100.0, loss:0.5175120234489441
20-> accuracy1:100.0, accuracy2:25.01474916934967, accuracy3:100.0, loss:0.512820303440094
30-> accuracy1:100.0, accuracy2:25.132742524147034, accuracy3:100.0, loss:0.5061561465263367
40-> accuracy1:100.0, accuracy2:25.486725568771362, accuracy3:100.0, loss:0.49748459458351135
50-> accuracy1:100.0, accuracy2:25.84070861339569, accuracy3:100.0, loss:0.4883090853691101
60-> accuracy1:100.0, accuracy2:26.312685012817383, accuracy3:100.0, loss:0.47909751534461975
70-> accuracy1:100.0, accuracy2:27.551621198654175, accuracy3:100.0, loss:0.4698304831981659
80-> accuracy1:100.0, accuracy2:27.669617533683777, accuracy3:100.0, loss:0.46081143617630005
90-> accuracy1:100.0, accuracy2:29.911503195762634, accuracy3:100.0, loss:0.4534057378768921
B(x) = 0.0101146086927358*x1**4 - 0.00503628338637237*x1**3*x2 + 0.037573418235945*x1**3 + 0.00407332253791434*x1**2*x2**2 - 0.0316550914596411*x1**2*x2 + 0.183969109570644*x1**2 - 0.00102496065729536*x1*x2**3 + 0.0105730125281916*x1*x2**2 + 0.236851654376879*x1*x2 - 0.483226824224407*x1 + 3.87460150043213e-5*x2**4 - 0.00122871730230969*x2**3 - 0.0777407761742008*x2**2 + 0.327310758668862*x2 + 0.132724453731255
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 91 counterexamples!
iter:14
0-> accuracy1:100.0, accuracy2:31.858903169631958, accuracy3:100.0, loss:0.4695127308368683
10-> accuracy1:100.0, accuracy2:32.026875019073486, accuracy3:100.0, loss:0.4569234848022461
20-> accuracy1:100.0, accuracy2:29.339304566383362, accuracy3:100.0, loss:0.43659350275993347
30-> accuracy1:100.0, accuracy2:31.802910566329956, accuracy3:100.0, loss:0.4109387695789337
40-> accuracy1:100.0, accuracy2:33.42665135860443, accuracy3:100.0, loss:0.3963620662689209
50-> accuracy1:100.0, accuracy2:37.96192705631256, accuracy3:100.0, loss:0.3831235468387604
60-> accuracy1:100.0, accuracy2:38.18589150905609, accuracy3:100.0, loss:0.3743980824947357
70-> accuracy1:100.0, accuracy2:38.017916679382324, accuracy3:100.0, loss:0.3700371980667114
80-> accuracy1:100.0, accuracy2:37.90593445301056, accuracy3:100.0, loss:0.3665592074394226
90-> accuracy1:100.0, accuracy2:37.849944829940796, accuracy3:100.0, loss:0.36211109161376953
B(x) = 0.0158939780358231*x1**4 - 0.0261127077330674*x1**3*x2 + 0.0698131566676701*x1**3 + 0.0181417940930151*x1**2*x2**2 - 0.0904731007770181*x1**2*x2 + 0.191516575335806*x1**2 - 0.00522272273655744*x1*x2**3 + 0.0375757573645309*x1*x2**2 + 0.234658705404675*x1*x2 - 0.58523690704303*x1 + 0.000500874623239678*x2**4 - 0.0050547990689432*x2**3 - 0.0981795827867298*x2**2 + 0.330371487457743*x2 + 0.144305388080947
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:15
0-> accuracy1:100.0, accuracy2:35.94909906387329, accuracy3:100.0, loss:0.3740810751914978
10-> accuracy1:100.0, accuracy2:35.94909906387329, accuracy3:100.0, loss:0.36789819598197937
20-> accuracy1:100.0, accuracy2:35.89607775211334, accuracy3:100.0, loss:0.36074110865592957
30-> accuracy1:100.0, accuracy2:35.843053460121155, accuracy3:100.0, loss:0.35225602984428406
40-> accuracy1:100.0, accuracy2:35.790032148361206, accuracy3:100.0, loss:0.3417997658252716
50-> accuracy1:100.0, accuracy2:37.380701303482056, accuracy3:100.0, loss:0.328092098236084
60-> accuracy1:100.0, accuracy2:41.198304295539856, accuracy3:100.0, loss:0.310489684343338
70-> accuracy1:100.0, accuracy2:45.705196261405945, accuracy3:100.0, loss:0.2937597334384918
80-> accuracy1:100.0, accuracy2:48.83351027965546, accuracy3:100.0, loss:0.28199800848960876
90-> accuracy1:100.0, accuracy2:50.42417645454407, accuracy3:100.0, loss:0.27471068501472473
B(x) = 0.0277287992293284*x1**4 - 0.0651583440723941*x1**3*x2 + 0.138587185489879*x1**3 + 0.0579632832562395*x1**2*x2**2 - 0.234854320019758*x1**2*x2 + 0.224240227258427*x1**2 - 0.0221310551193714*x1*x2**3 + 0.12827713814818*x1*x2**2 + 0.197305505572437*x1*x2 - 0.725814483456227*x1 + 0.00304406571838697*x2**4 - 0.0225430589936316*x2**3 - 0.108562513689008*x2**2 + 0.400936451104788*x2 + 0.112315313690414
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:16
0-> accuracy1:100.0, accuracy2:48.38871955871582, accuracy3:100.0, loss:0.29720601439476013
10-> accuracy1:100.0, accuracy2:48.94259870052338, accuracy3:100.0, loss:0.29324203729629517
20-> accuracy1:100.0, accuracy2:49.697884917259216, accuracy3:100.0, loss:0.289712131023407
30-> accuracy1:100.0, accuracy2:50.402820110321045, accuracy3:100.0, loss:0.28591543436050415
40-> accuracy1:100.0, accuracy2:50.65458416938782, accuracy3:100.0, loss:0.2817947268486023
50-> accuracy1:100.0, accuracy2:51.35951638221741, accuracy3:100.0, loss:0.27802643179893494
60-> accuracy1:100.0, accuracy2:52.014100551605225, accuracy3:100.0, loss:0.27494779229164124
70-> accuracy1:100.0, accuracy2:52.56797671318054, accuracy3:100.0, loss:0.2730676829814911
80-> accuracy1:100.0, accuracy2:52.92044281959534, accuracy3:100.0, loss:0.2717377245426178
90-> accuracy1:100.0, accuracy2:53.07149887084961, accuracy3:100.0, loss:0.270518958568573
B(x) = 0.0231774712078646*x1**4 - 0.0743934601294321*x1**3*x2 + 0.126946619942486*x1**3 + 0.087463907841571*x1**2*x2**2 - 0.275185749618413*x1**2*x2 + 0.13956092888609*x1**2 - 0.0437925908088176*x1*x2**3 + 0.189748168505621*x1*x2**2 + 0.248420890875804*x1*x2 - 0.686955205266604*x1 + 0.00781710429289232*x2**4 - 0.0411385099864457*x2**3 - 0.134691150049308*x2**2 + 0.422986543629656*x2 + 0.140187924693253
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:17
0-> accuracy1:100.0, accuracy2:50.91083645820618, accuracy3:100.0, loss:0.2983785569667816
10-> accuracy1:100.0, accuracy2:50.958770513534546, accuracy3:100.0, loss:0.2973143458366394
20-> accuracy1:100.0, accuracy2:51.05465054512024, accuracy3:100.0, loss:0.29599371552467346
30-> accuracy1:100.0, accuracy2:51.1984646320343, accuracy3:100.0, loss:0.29387909173965454
40-> accuracy1:100.0, accuracy2:51.34228467941284, accuracy3:100.0, loss:0.2915952205657959
50-> accuracy1:100.0, accuracy2:51.72579288482666, accuracy3:100.0, loss:0.28943416476249695
60-> accuracy1:100.0, accuracy2:51.821666955947876, accuracy3:100.0, loss:0.2873092293739319
70-> accuracy1:100.0, accuracy2:51.86960697174072, accuracy3:100.0, loss:0.2850443124771118
80-> accuracy1:100.0, accuracy2:52.013421058654785, accuracy3:100.0, loss:0.28247466683387756
90-> accuracy1:100.0, accuracy2:52.30105519294739, accuracy3:100.0, loss:0.2794796824455261
B(x) = 0.0165663675927688*x1**4 - 0.0728834494476008*x1**3*x2 + 0.11417368654048*x1**3 + 0.110597540710052*x1**2*x2**2 - 0.297240402381001*x1**2*x2 + 0.0996580571562023*x1**2 - 0.069416240959927*x1*x2**3 + 0.245020447549383*x1*x2**2 + 0.322425622943577*x1*x2 - 0.616440496673083*x1 + 0.0152341212861592*x2**4 - 0.063125909557729*x2**3 - 0.190654654501229*x2**2 + 0.466128348494629*x2 + 0.160669437652748
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:18
0-> accuracy1:100.0, accuracy2:50.274473428726196, accuracy3:100.0, loss:0.3030535876750946
10-> accuracy1:100.0, accuracy2:50.228726863861084, accuracy3:100.0, loss:0.30028578639030457
20-> accuracy1:100.0, accuracy2:50.45745372772217, accuracy3:100.0, loss:0.2971169650554657
30-> accuracy1:100.0, accuracy2:50.54894685745239, accuracy3:100.0, loss:0.2932419180870056
40-> accuracy1:100.0, accuracy2:50.77767372131348, accuracy3:100.0, loss:0.2893178164958954
50-> accuracy1:100.0, accuracy2:51.00640654563904, accuracy3:100.0, loss:0.28628501296043396
60-> accuracy1:100.0, accuracy2:51.097893714904785, accuracy3:100.0, loss:0.28379255533218384
70-> accuracy1:100.0, accuracy2:51.23513340950012, accuracy3:100.0, loss:0.2818846106529236
80-> accuracy1:100.0, accuracy2:51.23513340950012, accuracy3:100.0, loss:0.28016215562820435
90-> accuracy1:100.0, accuracy2:51.280879974365234, accuracy3:100.0, loss:0.27861446142196655
B(x) = 0.00914247452101966*x1**4 - 0.0651677604176214*x1**3*x2 + 0.100943461706573*x1**3 + 0.130972332737537*x1**2*x2**2 - 0.314485054938838*x1**2*x2 + 0.0996709149278679*x1**2 - 0.10153973300046*x1*x2**3 + 0.306217809657556*x1*x2**2 + 0.40941054008304*x1*x2 - 0.533005889063281*x1 + 0.0266077529556663*x2**4 - 0.0921788585642877*x2**3 - 0.269163359628375*x2**2 + 0.559430105932729*x2 + 0.182354597238637
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:19
0-> accuracy1:100.0, accuracy2:49.16885495185852, accuracy3:100.0, loss:0.2991294860839844
10-> accuracy1:100.0, accuracy2:49.21259880065918, accuracy3:100.0, loss:0.2976531982421875
20-> accuracy1:100.0, accuracy2:49.25634264945984, accuracy3:100.0, loss:0.2959897220134735
30-> accuracy1:100.0, accuracy2:49.25634264945984, accuracy3:100.0, loss:0.2940140962600708
40-> accuracy1:100.0, accuracy2:49.16885495185852, accuracy3:100.0, loss:0.2920108735561371
50-> accuracy1:100.0, accuracy2:49.3000864982605, accuracy3:100.0, loss:0.2898501455783844
60-> accuracy1:100.0, accuracy2:49.21259880065918, accuracy3:100.0, loss:0.2877366542816162
70-> accuracy1:100.0, accuracy2:49.21259880065918, accuracy3:100.0, loss:0.2855873703956604
80-> accuracy1:100.0, accuracy2:49.21259880065918, accuracy3:100.0, loss:0.28336140513420105
90-> accuracy1:100.0, accuracy2:49.3000864982605, accuracy3:100.0, loss:0.2811168432235718
B(x) = 0.00112492717444925*x1**4 - 0.0468043558438257*x1**3*x2 + 0.079733809684382*x1**3 + 0.132268297907632*x1**2*x2**2 - 0.301098841521192*x1**2*x2 + 0.151011041827909*x1**2 - 0.124396056999924*x1*x2**3 + 0.34311312277173*x1*x2**2 + 0.439628823997781*x1*x2 - 0.422891322710519*x1 + 0.037378491160932*x2**4 - 0.117520236766764*x2**3 - 0.321590126689775*x2**2 + 0.690702698186406*x2 + 0.174898842543483
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:20
0-> accuracy1:100.0, accuracy2:47.23386466503143, accuracy3:100.0, loss:0.29568415880203247
10-> accuracy1:100.0, accuracy2:47.108131647109985, accuracy3:100.0, loss:0.2937055230140686
20-> accuracy1:100.0, accuracy2:47.23386466503143, accuracy3:100.0, loss:0.2919344902038574
30-> accuracy1:100.0, accuracy2:47.27577567100525, accuracy3:100.0, loss:0.28995707631111145
40-> accuracy1:100.0, accuracy2:47.19195365905762, accuracy3:100.0, loss:0.28765079379081726
50-> accuracy1:100.0, accuracy2:47.27577567100525, accuracy3:100.0, loss:0.28520622849464417
60-> accuracy1:100.0, accuracy2:47.35959768295288, accuracy3:100.0, loss:0.2826990485191345
70-> accuracy1:100.0, accuracy2:47.35959768295288, accuracy3:100.0, loss:0.2801111340522766
80-> accuracy1:100.0, accuracy2:47.317686676979065, accuracy3:100.0, loss:0.2773631811141968
90-> accuracy1:100.0, accuracy2:47.19195365905762, accuracy3:100.0, loss:0.27435502409935
B(x) = -0.00559954867646108*x1**4 - 0.0290383156716239*x1**3*x2 + 0.0600419052656419*x1**3 + 0.134817406629102*x1**2*x2**2 - 0.290856203863126*x1**2*x2 + 0.243308618395429*x1**2 - 0.152120285818899*x1*x2**3 + 0.389555348199146*x1*x2**2 + 0.526096472907712*x1*x2 - 0.319292919613075*x1 + 0.0497246552632167*x2**4 - 0.145754979550753*x2**3 - 0.37917487967025*x2**2 + 0.843204106409582*x2 + 0.173374528357958
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
Failed
Elapsed Time: 115.67596648610197
