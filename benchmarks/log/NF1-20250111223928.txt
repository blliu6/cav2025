{'batch_size': 1000, 'lr': np.float64(0.07999999999999999), 'loss_weight_continuous': (1, 1, 1), 'R_b': 0.4, 'margin': 0.4, 'DEG_continuous': [2, 4, 4, 2], 'learning_loops': 100, 'max_iter': 20, 'err': 0.02677454477719443}

Mosek can be used normally.
iter:1
0-> accuracy1:0.0, accuracy2:28.600001335144043, accuracy3:0.0, loss:1.3969390392303467
10-> accuracy1:100.0, accuracy2:94.30000185966492, accuracy3:100.0, loss:0.04777127876877785
20-> accuracy1:100.0, accuracy2:98.19999933242798, accuracy3:100.0, loss:0.007756463252007961
30-> accuracy1:100.0, accuracy2:98.50000143051147, accuracy3:100.0, loss:0.0013156207278370857
40-> accuracy1:100.0, accuracy2:99.40000176429749, accuracy3:100.0, loss:-0.008148486725986004
50-> accuracy1:100.0, accuracy2:92.29999780654907, accuracy3:100.0, loss:0.44198209047317505
60-> accuracy1:100.0, accuracy2:97.69999980926514, accuracy3:100.0, loss:0.14013977348804474
70-> accuracy1:97.60000109672546, accuracy2:98.29999804496765, accuracy3:100.0, loss:0.10854681581258774
80-> accuracy1:98.7999975681305, accuracy2:99.00000095367432, accuracy3:100.0, loss:0.022630086168646812
90-> accuracy1:100.0, accuracy2:99.29999709129333, accuracy3:100.0, loss:-0.0010910658165812492
B(x) = 2.30904821547397*x1**4 + 5.06936241996755*x1**3*x2 + 5.03978508190636*x1**3 - 3.55265558601732*x1**2*x2**2 - 11.4963738805163*x1**2*x2 + 20.3161730004483*x1**2 + 0.0640570395289011*x1*x2**3 + 0.138191684220578*x1*x2**2 + 26.2289066943995*x1*x2 - 6.81586640315667*x1 + 0.0918196125149536*x2**4 - 1.06138961508988*x2**3 + 4.63147874898006*x2**2 + 22.0809887930932*x2 - 6.09987551237325
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 18 counterexamples!
Add 100 counterexamples!
iter:2
0-> accuracy1:96.75834774971008, accuracy2:89.6363615989685, accuracy3:100.0, loss:0.48020753264427185
10-> accuracy1:94.3025529384613, accuracy2:99.36363697052002, accuracy3:100.0, loss:0.057242684066295624
20-> accuracy1:97.64243364334106, accuracy2:99.2727279663086, accuracy3:100.0, loss:0.006325890775769949
30-> accuracy1:100.0, accuracy2:98.81818294525146, accuracy3:100.0, loss:-0.006682937033474445
40-> accuracy1:100.0, accuracy2:99.45454597473145, accuracy3:100.0, loss:-0.010349643416702747
50-> accuracy1:100.0, accuracy2:99.36363697052002, accuracy3:100.0, loss:-0.010130072012543678
60-> accuracy1:100.0, accuracy2:99.54545497894287, accuracy3:100.0, loss:-0.010977496393024921
70-> accuracy1:100.0, accuracy2:99.54545497894287, accuracy3:100.0, loss:-0.01107198465615511
80-> accuracy1:100.0, accuracy2:99.54545497894287, accuracy3:100.0, loss:-0.010943103581666946
90-> accuracy1:100.0, accuracy2:99.54545497894287, accuracy3:100.0, loss:-0.010968646965920925
B(x) = 1.05007407550063*x1**4 + 3.01407383512903*x1**3*x2 + 5.0679739811803*x1**3 - 1.25045943125963*x1**2*x2**2 + 2.51518437076187*x1**2*x2 + 17.3658833296281*x1**2 + 0.16173368196242*x1*x2**3 + 3.97245392642859*x1*x2**2 + 27.9275334295037*x1*x2 - 3.84505439564274*x1 + 0.108135493699441*x2**4 - 4.4558058811666*x2**3 + 10.5044514926042*x2**2 + 8.55847808987308*x2 - 1.59372206960834
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:3
0-> accuracy1:100.0, accuracy2:91.25000238418579, accuracy3:100.0, loss:0.08151374757289886
10-> accuracy1:100.0, accuracy2:98.83333444595337, accuracy3:100.0, loss:-0.0012475419789552689
20-> accuracy1:100.0, accuracy2:99.08333420753479, accuracy3:100.0, loss:-0.00095778563991189
30-> accuracy1:100.0, accuracy2:99.25000071525574, accuracy3:100.0, loss:-0.0034531529527157545
40-> accuracy1:100.0, accuracy2:99.25000071525574, accuracy3:100.0, loss:-0.0047559188678860664
50-> accuracy1:100.0, accuracy2:99.33333396911621, accuracy3:100.0, loss:-0.005945646204054356
60-> accuracy1:100.0, accuracy2:99.33333396911621, accuracy3:100.0, loss:-0.006310509983450174
70-> accuracy1:100.0, accuracy2:99.33333396911621, accuracy3:100.0, loss:-0.006857329048216343
80-> accuracy1:100.0, accuracy2:99.33333396911621, accuracy3:100.0, loss:-0.007132535334676504
90-> accuracy1:100.0, accuracy2:99.33333396911621, accuracy3:100.0, loss:-0.007470129989087582
B(x) = 0.649506999427929*x1**4 + 1.97263617141945*x1**3*x2 + 2.12926076334023*x1**3 - 0.141580941782517*x1**2*x2**2 + 2.89083754840571*x1**2*x2 + 14.5592183358463*x1**2 + 0.0629534731931806*x1*x2**3 + 4.86558794999268*x1*x2**2 + 23.3574428598102*x1*x2 - 5.09707532668564*x1 + 0.146407280386957*x2**4 - 2.01228109612044*x2**3 + 9.14589791409549*x2**2 + 3.68440004597909*x2 + 0.714977557146528
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:4
0-> accuracy1:100.0, accuracy2:91.69231057167053, accuracy3:100.0, loss:0.1350303441286087
10-> accuracy1:100.0, accuracy2:87.6153826713562, accuracy3:60.29999852180481, loss:1.7962310314178467
20-> accuracy1:100.0, accuracy2:88.92307877540588, accuracy3:100.0, loss:0.5145843029022217
30-> accuracy1:100.0, accuracy2:89.84615206718445, accuracy3:100.0, loss:1.2224715948104858
40-> accuracy1:79.56777811050415, accuracy2:90.46154022216797, accuracy3:100.0, loss:6.35803747177124
50-> accuracy1:95.38310170173645, accuracy2:90.38461446762085, accuracy3:100.0, loss:23.592042922973633
60-> accuracy1:71.90569639205933, accuracy2:82.30769038200378, accuracy3:100.0, loss:132.498046875
70-> accuracy1:88.40864300727844, accuracy2:91.69231057167053, accuracy3:100.0, loss:32.12322998046875
80-> accuracy1:94.89194750785828, accuracy2:88.92307877540588, accuracy3:100.0, loss:50.077327728271484
90-> accuracy1:91.65029525756836, accuracy2:81.8461537361145, accuracy3:89.89999890327454, loss:35.57799530029297
B(x) = -83.8410707531879*x1**4 + 281.103661651347*x1**3*x2 + 61.0554067703629*x1**3 + 40.0080156962457*x1**2*x2**2 - 1475.41709177058*x1**2*x2 + 1427.0414791591*x1**2 - 61.0323614532262*x1*x2**3 - 37.2854521924837*x1*x2**2 + 2440.43202785344*x1*x2 - 1579.7967204811*x1 + 6.60548647365072*x2**4 - 25.4191744783837*x2**3 - 986.721191697364*x2**2 + 1365.54161144817*x2 - 278.389291314068
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:5
0-> accuracy1:92.82907843589783, accuracy2:84.85714197158813, accuracy3:100.0, loss:55.14411544799805
10-> accuracy1:96.56188488006592, accuracy2:84.07142758369446, accuracy3:100.0, loss:19.762832641601562
20-> accuracy1:94.3025529384613, accuracy2:90.35714268684387, accuracy3:100.0, loss:3.6380043029785156
30-> accuracy1:100.0, accuracy2:89.49999809265137, accuracy3:98.7999975681305, loss:2.0337202548980713
40-> accuracy1:98.52652549743652, accuracy2:93.64285469055176, accuracy3:100.0, loss:1.0365406274795532
50-> accuracy1:100.0, accuracy2:93.99999976158142, accuracy3:100.0, loss:0.7942073345184326
60-> accuracy1:100.0, accuracy2:94.9999988079071, accuracy3:100.0, loss:0.6384281516075134
70-> accuracy1:100.0, accuracy2:95.28571367263794, accuracy3:99.6999979019165, loss:0.565109372138977
80-> accuracy1:99.21414256095886, accuracy2:95.28571367263794, accuracy3:99.40000176429749, loss:0.5122368931770325
90-> accuracy1:99.70530271530151, accuracy2:94.64285969734192, accuracy3:100.0, loss:0.481956422328949
B(x) = -13.8427353649734*x1**4 + 62.4702319922242*x1**3*x2 + 75.6087902584987*x1**3 + 84.1507104665698*x1**2*x2**2 - 589.307432434989*x1**2*x2 + 809.705225803769*x1**2 + 55.4485626934287*x1*x2**3 - 558.789598843616*x1*x2**2 + 1486.1473539856*x1*x2 - 419.117297609848*x1 + 9.93991212391097*x2**4 - 218.35953610593*x2**3 + 635.434069854225*x2**2 - 117.831562566297*x2 - 31.7190012638772
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Add 100 counterexamples!
iter:6
0-> accuracy1:99.70530271530151, accuracy2:88.86666893959045, accuracy3:99.00000095367432, loss:1.8596487045288086
10-> accuracy1:99.50883984565735, accuracy2:88.13333511352539, accuracy3:99.09999966621399, loss:1.542204737663269
20-> accuracy1:99.4106113910675, accuracy2:87.5333309173584, accuracy3:99.19999837875366, loss:1.250494122505188
30-> accuracy1:99.4106113910675, accuracy2:87.00000047683716, accuracy3:98.90000224113464, loss:1.0193918943405151
40-> accuracy1:99.4106113910675, accuracy2:86.40000224113464, accuracy3:100.0, loss:0.8499000072479248
50-> accuracy1:99.21414256095886, accuracy2:86.40000224113464, accuracy3:99.19999837875366, loss:0.7050792574882507
60-> accuracy1:99.21414256095886, accuracy2:86.00000143051147, accuracy3:100.0, loss:0.5892559289932251
70-> accuracy1:99.0176796913147, accuracy2:85.9333336353302, accuracy3:100.0, loss:0.49197766184806824
80-> accuracy1:99.11591410636902, accuracy2:86.19999885559082, accuracy3:99.09999966621399, loss:0.4130887985229492
90-> accuracy1:99.21414256095886, accuracy2:84.93333458900452, accuracy3:99.40000176429749, loss:0.3546399474143982
B(x) = -2.54540886418377*x1**4 + 11.5575915014754*x1**3*x2 + 11.7730799574235*x1**3 + 17.4296023106895*x1**2*x2**2 - 78.8117706770655*x1**2*x2 + 124.101158968446*x1**2 + 5.60078133664546*x1*x2**3 - 73.7164101328519*x1*x2**2 + 243.58132871519*x1*x2 - 49.2066942836846*x1 + 0.511409100727743*x2**4 - 41.3743681996409*x2**3 + 106.922642556735*x2**2 + 1.22171144447922*x2 - 3.1001980866046
Add 100 counterexamples!
iter:7
0-> accuracy1:99.0176796913147, accuracy2:81.06250166893005, accuracy3:97.50000238418579, loss:0.5401633381843567
10-> accuracy1:99.4106113910675, accuracy2:79.56249713897705, accuracy3:99.09999966621399, loss:0.41935619711875916
20-> accuracy1:98.13359379768372, accuracy2:79.62499856948853, accuracy3:95.09999752044678, loss:0.3785993158817291
30-> accuracy1:100.0, accuracy2:69.0625011920929, accuracy3:100.0, loss:0.5126901268959045
40-> accuracy1:93.02554130554199, accuracy2:67.93749928474426, accuracy3:98.00000190734863, loss:1.2047312259674072
50-> accuracy1:100.0, accuracy2:76.06250047683716, accuracy3:100.0, loss:0.40755707025527954
60-> accuracy1:98.33005666732788, accuracy2:81.74999952316284, accuracy3:99.29999709129333, loss:0.2524372339248657
70-> accuracy1:97.4459707736969, accuracy2:82.4999988079071, accuracy3:98.00000190734863, loss:0.23143160343170166
80-> accuracy1:97.8389024734497, accuracy2:82.43749737739563, accuracy3:100.0, loss:0.19243989884853363
90-> accuracy1:99.0176796913147, accuracy2:81.87500238418579, accuracy3:100.0, loss:0.17277134954929352
B(x) = -0.924373115128346*x1**4 + 3.69874610462405*x1**3*x2 + 3.912365798801*x1**3 + 6.57615169685745*x1**2*x2**2 - 23.2958018536993*x1**2*x2 + 39.1145873006603*x1**2 + 1.02232830395454*x1*x2**3 - 23.9170147450302*x1*x2**2 + 77.2322860276235*x1*x2 - 14.1817910457913*x1 - 0.507128685473637*x2**4 - 10.1259856348317*x2**3 + 34.72091109992*x2**2 - 0.643053943961611*x2 - 2.13673663913492
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 95 counterexamples!
iter:8
0-> accuracy1:98.52652549743652, accuracy2:76.7551600933075, accuracy3:100.0, loss:0.20700712502002716
10-> accuracy1:96.66011929512024, accuracy2:75.63421726226807, accuracy3:100.0, loss:0.19391976296901703
20-> accuracy1:94.89194750785828, accuracy2:73.21534156799316, accuracy3:100.0, loss:0.20340019464492798
30-> accuracy1:98.13359379768372, accuracy2:75.63421726226807, accuracy3:95.99999785423279, loss:0.19047467410564423
40-> accuracy1:98.13359379768372, accuracy2:74.631267786026, accuracy3:100.0, loss:0.1664338856935501
50-> accuracy1:97.54420518875122, accuracy2:75.98820328712463, accuracy3:100.0, loss:0.15505287051200867
60-> accuracy1:99.0176796913147, accuracy2:75.33923387527466, accuracy3:100.0, loss:0.1538943648338318
70-> accuracy1:98.33005666732788, accuracy2:75.28023719787598, accuracy3:100.0, loss:0.14927168190479279
80-> accuracy1:100.0, accuracy2:72.97934889793396, accuracy3:100.0, loss:0.1597924381494522
90-> accuracy1:98.4282910823822, accuracy2:75.63421726226807, accuracy3:98.1000006198883, loss:0.14824813604354858
B(x) = -0.479535430738222*x1**4 + 1.54966886338332*x1**3*x2 + 1.65783319802775*x1**3 + 3.19123180893606*x1**2*x2**2 - 8.43811930532759*x1**2*x2 + 15.2034051197687*x1**2 - 0.935877343314077*x1*x2**3 - 6.65364151574764*x1*x2**2 + 30.2333022111573*x1*x2 - 7.03386869830106*x1 - 0.66822817443034*x2**4 - 2.0050686895728*x2**3 + 12.8373578516882*x2**2 - 1.71664256367805*x2 - 0.574491352323533
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 95 counterexamples!
iter:9
0-> accuracy1:97.64243364334106, accuracy2:72.06704020500183, accuracy3:100.0, loss:0.17331963777542114
10-> accuracy1:99.60707426071167, accuracy2:71.50837779045105, accuracy3:98.7999975681305, loss:0.17410585284233093
20-> accuracy1:97.24950790405273, accuracy2:71.45251631736755, accuracy3:100.0, loss:0.17173875868320465
30-> accuracy1:99.4106113910675, accuracy2:70.94972133636475, accuracy3:100.0, loss:0.17169804871082306
40-> accuracy1:98.23182821273804, accuracy2:70.94972133636475, accuracy3:100.0, loss:0.1704902946949005
50-> accuracy1:99.50883984565735, accuracy2:70.44692635536194, accuracy3:100.0, loss:0.16917075216770172
60-> accuracy1:99.50883984565735, accuracy2:69.77653503417969, accuracy3:100.0, loss:0.16815431416034698
70-> accuracy1:99.60707426071167, accuracy2:70.33519744873047, accuracy3:100.0, loss:0.16783010959625244
80-> accuracy1:100.0, accuracy2:68.71508359909058, accuracy3:100.0, loss:0.175215482711792
90-> accuracy1:100.0, accuracy2:69.32960748672485, accuracy3:100.0, loss:0.17254972457885742
B(x) = -0.384517737825471*x1**4 + 0.967084227998275*x1**3*x2 + 0.752233129908708*x1**3 + 2.19477868637506*x1**2*x2**2 - 5.43220438929434*x1**2*x2 + 9.32959232488748*x1**2 - 1.07269077555562*x1*x2**3 - 2.58638863640383*x1*x2**2 + 18.3035057318608*x1*x2 - 5.08737273542977*x1 - 0.675253180641392*x2**4 - 0.6458233115921*x2**3 + 7.24707448809198*x2**2 - 1.18673900279428*x2 - 0.142047861128101
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:10
0-> accuracy1:100.0, accuracy2:66.08465313911438, accuracy3:100.0, loss:0.19346269965171814
10-> accuracy1:100.0, accuracy2:65.8730149269104, accuracy3:100.0, loss:0.19170017540454865
20-> accuracy1:100.0, accuracy2:65.13227224349976, accuracy3:100.0, loss:0.19059975445270538
30-> accuracy1:100.0, accuracy2:65.07936716079712, accuracy3:100.0, loss:0.19162392616271973
40-> accuracy1:100.0, accuracy2:64.55026268959045, accuracy3:100.0, loss:0.19558048248291016
50-> accuracy1:100.0, accuracy2:65.02645611763, accuracy3:100.0, loss:0.19073502719402313
60-> accuracy1:100.0, accuracy2:64.7089958190918, accuracy3:100.0, loss:0.1905931979417801
70-> accuracy1:100.0, accuracy2:64.23280239105225, accuracy3:100.0, loss:0.19004006683826447
80-> accuracy1:100.0, accuracy2:64.02116417884827, accuracy3:100.0, loss:0.19025032222270966
90-> accuracy1:100.0, accuracy2:64.02116417884827, accuracy3:100.0, loss:0.1900160312652588
B(x) = -0.315488363766639*x1**4 + 0.666134186322058*x1**3*x2 + 0.351486938976367*x1**3 + 1.72688327087886*x1**2*x2**2 - 4.3253921541023*x1**2*x2 + 6.88419509197527*x1**2 - 0.952941450943158*x1*x2**3 - 1.80973710689247*x1*x2**2 + 13.6039938807988*x1*x2 - 3.90669396178798*x1 - 0.551008962103264*x2**4 - 0.377289257407066*x2**3 + 5.25288306170599*x2**2 - 0.940798814091149*x2 + 0.00595457287967494
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:11
0-> accuracy1:100.0, accuracy2:60.904520750045776, accuracy3:100.0, loss:0.21035131812095642
10-> accuracy1:100.0, accuracy2:60.50251126289368, accuracy3:100.0, loss:0.2098509669303894
20-> accuracy1:100.0, accuracy2:60.40201187133789, accuracy3:100.0, loss:0.2097572535276413
30-> accuracy1:100.0, accuracy2:59.849244356155396, accuracy3:100.0, loss:0.20960640907287598
40-> accuracy1:100.0, accuracy2:59.396982192993164, accuracy3:100.0, loss:0.20950226485729218
50-> accuracy1:100.0, accuracy2:59.09547805786133, accuracy3:100.0, loss:0.20939338207244873
60-> accuracy1:100.0, accuracy2:58.994972705841064, accuracy3:100.0, loss:0.20935477316379547
70-> accuracy1:100.0, accuracy2:58.793967962265015, accuracy3:100.0, loss:0.209372416138649
80-> accuracy1:100.0, accuracy2:58.54271650314331, accuracy3:100.0, loss:0.2089712917804718
90-> accuracy1:100.0, accuracy2:58.241206407547, accuracy3:100.0, loss:0.20875082910060883
B(x) = -0.248168620587278*x1**4 + 0.475937701586564*x1**3*x2 + 0.143319580186629*x1**3 + 1.3209032935164*x1**2*x2**2 - 3.43120147393596*x1**2*x2 + 5.13858786411809*x1**2 - 0.77962000720685*x1*x2**3 - 1.24760685860549*x1*x2**2 + 10.1352321478687*x1*x2 - 3.05835468686487*x1 - 0.397946392559649*x2**4 - 0.295317424336872*x2**3 + 3.66963277116483*x2**2 - 0.600908960327356*x2 + 0.111324944345963
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
iter:12
0-> accuracy1:100.0, accuracy2:58.04020166397095, accuracy3:100.0, loss:0.20850545167922974
10-> accuracy1:100.0, accuracy2:57.788944244384766, accuracy3:100.0, loss:0.2082604318857193
20-> accuracy1:100.0, accuracy2:57.587939500808716, accuracy3:100.0, loss:0.20795562863349915
30-> accuracy1:100.0, accuracy2:57.48744010925293, accuracy3:100.0, loss:0.207611083984375
40-> accuracy1:100.0, accuracy2:57.336682081222534, accuracy3:100.0, loss:0.2072967290878296
50-> accuracy1:100.0, accuracy2:57.135677337646484, accuracy3:100.0, loss:0.20690488815307617
60-> accuracy1:100.0, accuracy2:57.0351779460907, accuracy3:100.0, loss:0.20650070905685425
70-> accuracy1:100.0, accuracy2:56.984925270080566, accuracy3:100.0, loss:0.20608356595039368
80-> accuracy1:100.0, accuracy2:56.984925270080566, accuracy3:100.0, loss:0.2056538462638855
90-> accuracy1:100.0, accuracy2:56.984925270080566, accuracy3:100.0, loss:0.20518586039543152
B(x) = -0.189098727771639*x1**4 + 0.351212264356613*x1**3*x2 + 0.0605456683760202*x1**3 + 0.972194419315658*x1**2*x2**2 - 2.76337072400579*x1**2*x2 + 3.90419651097942*x1**2 - 0.583879040112953*x1*x2**3 - 0.945038850321446*x1*x2**2 + 7.64511441974244*x1*x2 - 2.56043733984983*x1 - 0.270764015898211*x2**4 - 0.215954043465026*x2**3 + 2.51440437322931*x2**2 - 0.486672829450851*x2 + 0.23443375076754
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
iter:13
0-> accuracy1:100.0, accuracy2:56.984925270080566, accuracy3:100.0, loss:0.20462726056575775
10-> accuracy1:100.0, accuracy2:56.984925270080566, accuracy3:100.0, loss:0.20400986075401306
20-> accuracy1:100.0, accuracy2:56.984925270080566, accuracy3:100.0, loss:0.20335277915000916
30-> accuracy1:100.0, accuracy2:57.135677337646484, accuracy3:100.0, loss:0.20264244079589844
40-> accuracy1:100.0, accuracy2:57.08542466163635, accuracy3:100.0, loss:0.2017923891544342
50-> accuracy1:100.0, accuracy2:57.08542466163635, accuracy3:100.0, loss:0.20085416734218597
60-> accuracy1:100.0, accuracy2:57.0351779460907, accuracy3:100.0, loss:0.1998327076435089
70-> accuracy1:100.0, accuracy2:57.0351779460907, accuracy3:100.0, loss:0.19870886206626892
80-> accuracy1:100.0, accuracy2:57.08542466163635, accuracy3:100.0, loss:0.1975395679473877
90-> accuracy1:100.0, accuracy2:57.08542466163635, accuracy3:100.0, loss:0.19625897705554962
B(x) = -0.137373423398534*x1**4 + 0.263853717274234*x1**3*x2 + 0.0195971517906069*x1**3 + 0.66076126290953*x1**2*x2**2 - 2.10536496145121*x1**2*x2 + 2.83888565343074*x1**2 - 0.424712872572014*x1*x2**3 - 0.500651086742032*x1*x2**2 + 5.4756244020813*x1*x2 - 2.14906414143191*x1 - 0.155151390215581*x2**4 - 0.183737911906904*x2**3 + 1.44975851533905*x2**2 - 0.25748620367837*x2 + 0.396384956266174
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:14
0-> accuracy1:100.0, accuracy2:54.44976091384888, accuracy3:100.0, loss:0.21885471045970917
10-> accuracy1:100.0, accuracy2:54.35406565666199, accuracy3:100.0, loss:0.21774394810199738
20-> accuracy1:100.0, accuracy2:54.30622100830078, accuracy3:100.0, loss:0.21676206588745117
30-> accuracy1:100.0, accuracy2:54.30622100830078, accuracy3:100.0, loss:0.21578744053840637
40-> accuracy1:100.0, accuracy2:54.30622100830078, accuracy3:100.0, loss:0.21476535499095917
50-> accuracy1:100.0, accuracy2:54.2583703994751, accuracy3:100.0, loss:0.21367084980010986
60-> accuracy1:100.0, accuracy2:54.21052575111389, accuracy3:100.0, loss:0.21246051788330078
70-> accuracy1:100.0, accuracy2:54.44976091384888, accuracy3:100.0, loss:0.21118313074111938
80-> accuracy1:100.0, accuracy2:54.59330081939697, accuracy3:100.0, loss:0.20986130833625793
90-> accuracy1:100.0, accuracy2:54.68899607658386, accuracy3:100.0, loss:0.20847263932228088
B(x) = -0.097293301164155*x1**4 + 0.194621837897182*x1**3*x2 - 0.0169420023169162*x1**3 + 0.420080823661545*x1**2*x2**2 - 1.4681812466592*x1**2*x2 + 1.89754386654587*x1**2 - 0.306186073853703*x1*x2**3 - 0.0723122552037863*x1*x2**2 + 3.59945859308333*x1*x2 - 1.68790687096163*x1 - 0.0748478041766396*x2**4 - 0.161951401814794*x2**3 + 0.657024586784654*x2**2 + 0.0104906595823971*x2 + 0.454025761413057
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
iter:15
0-> accuracy1:100.0, accuracy2:54.83253598213196, accuracy3:100.0, loss:0.20700247585773468
10-> accuracy1:100.0, accuracy2:55.02392053604126, accuracy3:100.0, loss:0.20543302595615387
20-> accuracy1:100.0, accuracy2:55.11961579322815, accuracy3:100.0, loss:0.20379284024238586
30-> accuracy1:100.0, accuracy2:55.50239086151123, accuracy3:100.0, loss:0.20212775468826294
40-> accuracy1:100.0, accuracy2:55.69378137588501, accuracy3:100.0, loss:0.200450137257576
50-> accuracy1:100.0, accuracy2:55.88516592979431, accuracy3:100.0, loss:0.19871996343135834
60-> accuracy1:100.0, accuracy2:56.26794099807739, accuracy3:100.0, loss:0.19701097905635834
70-> accuracy1:100.0, accuracy2:56.88995122909546, accuracy3:100.0, loss:0.19526956975460052
80-> accuracy1:100.0, accuracy2:57.224881649017334, accuracy3:100.0, loss:0.19350646436214447
90-> accuracy1:100.0, accuracy2:57.65550136566162, accuracy3:100.0, loss:0.19174790382385254
B(x) = -0.0753203877237401*x1**4 + 0.161271462013498*x1**3*x2 - 0.0139186517287635*x1**3 + 0.303905832525594*x1**2*x2**2 - 1.24930570971175*x1**2*x2 + 1.52409715777425*x1**2 - 0.234311452221678*x1*x2**3 + 0.0993748113472421*x1*x2**2 + 2.79816919866245*x1*x2 - 1.60340021365958*x1 - 0.0313946894582265*x2**4 - 0.167157478973368*x2**3 + 0.288982189300945*x2**2 + 0.108707249651562*x2 + 0.500937979502527
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:16
0-> accuracy1:100.0, accuracy2:55.38812875747681, accuracy3:100.0, loss:0.21672402322292328
10-> accuracy1:100.0, accuracy2:55.61643838882446, accuracy3:100.0, loss:0.21520717442035675
20-> accuracy1:100.0, accuracy2:55.79908490180969, accuracy3:100.0, loss:0.21391505002975464
30-> accuracy1:100.0, accuracy2:56.02739453315735, accuracy3:100.0, loss:0.2128157764673233
40-> accuracy1:100.0, accuracy2:56.02739453315735, accuracy3:100.0, loss:0.21181800961494446
50-> accuracy1:100.0, accuracy2:56.30136728286743, accuracy3:100.0, loss:0.21086664497852325
60-> accuracy1:100.0, accuracy2:56.48401975631714, accuracy3:100.0, loss:0.2099090963602066
70-> accuracy1:100.0, accuracy2:56.894975900650024, accuracy3:100.0, loss:0.2089213877916336
80-> accuracy1:100.0, accuracy2:57.44292140007019, accuracy3:100.0, loss:0.2078760862350464
90-> accuracy1:100.0, accuracy2:57.990866899490356, accuracy3:100.0, loss:0.20675228536128998
B(x) = -0.0576323650607507*x1**4 + 0.125094636094655*x1**3*x2 - 0.000453187572951526*x1**3 + 0.243334670724917*x1**2*x2**2 - 1.10964325085884*x1**2*x2 + 1.28411505940545*x1**2 - 0.17798607704724*x1*x2**3 + 0.136625760452581*x1*x2**2 + 2.25967950418483*x1*x2 - 1.5066051674015*x1 - 0.0119437882526721*x2**4 - 0.172085768927572*x2**3 + 0.175080163387334*x2**2 + 0.170226255065207*x2 + 0.46487542860634
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:17
0-> accuracy1:100.0, accuracy2:56.06986880302429, accuracy3:100.0, loss:0.23008549213409424
10-> accuracy1:100.0, accuracy2:56.419211626052856, accuracy3:100.0, loss:0.22912226617336273
20-> accuracy1:100.0, accuracy2:56.593888998031616, accuracy3:100.0, loss:0.22830252349376678
30-> accuracy1:100.0, accuracy2:56.94323182106018, accuracy3:100.0, loss:0.22751197218894958
40-> accuracy1:100.0, accuracy2:57.379913330078125, accuracy3:100.0, loss:0.22670325636863708
50-> accuracy1:100.0, accuracy2:58.12227129936218, accuracy3:100.0, loss:0.225826695561409
60-> accuracy1:100.0, accuracy2:58.82096290588379, accuracy3:100.0, loss:0.22487133741378784
70-> accuracy1:100.0, accuracy2:59.78165864944458, accuracy3:100.0, loss:0.22381073236465454
80-> accuracy1:100.0, accuracy2:61.00436449050903, accuracy3:100.0, loss:0.22260144352912903
90-> accuracy1:100.0, accuracy2:63.187772035598755, accuracy3:100.0, loss:0.22116965055465698
B(x) = -0.0419090372487915*x1**4 + 0.0883111499211826*x1**3*x2 + 0.0120623801271212*x1**3 + 0.205668555900503*x1**2*x2**2 - 0.975238040436913*x1**2*x2 + 1.08398559076533*x1**2 - 0.139637604307469*x1*x2**3 + 0.159331414197399*x1*x2**2 + 1.86053771765326*x1*x2 - 1.45276324004374*x1 - 0.00460493794246757*x2**4 - 0.168731467841554*x2**3 + 0.121697355437394*x2**2 + 0.305538043514599*x2 + 0.50660957777506
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:18
0-> accuracy1:100.0, accuracy2:61.673641204833984, accuracy3:100.0, loss:0.2443205714225769
10-> accuracy1:100.0, accuracy2:63.26360106468201, accuracy3:100.0, loss:0.24299314618110657
20-> accuracy1:100.0, accuracy2:64.60251212120056, accuracy3:100.0, loss:0.24172905087471008
30-> accuracy1:100.0, accuracy2:65.60669541358948, accuracy3:100.0, loss:0.24040347337722778
40-> accuracy1:100.0, accuracy2:66.98744893074036, accuracy3:100.0, loss:0.23893755674362183
50-> accuracy1:100.0, accuracy2:68.49372386932373, accuracy3:100.0, loss:0.23724232614040375
60-> accuracy1:100.0, accuracy2:70.1255202293396, accuracy3:100.0, loss:0.23528291285037994
70-> accuracy1:100.0, accuracy2:71.75732254981995, accuracy3:100.0, loss:0.23313553631305695
80-> accuracy1:100.0, accuracy2:73.17991852760315, accuracy3:100.0, loss:0.230739027261734
90-> accuracy1:100.0, accuracy2:73.43096137046814, accuracy3:100.0, loss:0.2283085733652115
B(x) = -0.0271088617627397*x1**4 + 0.0469464103472077*x1**3*x2 + 0.0210033367889879*x1**3 + 0.192963822628705*x1**2*x2**2 - 0.847824945502888*x1**2*x2 + 0.895821905175135*x1**2 - 0.120266299425781*x1*x2**3 + 0.203839340859573*x1*x2**2 + 1.51368984908656*x1*x2 - 1.4210383406135*x1 - 0.00195736002978444*x2**4 - 0.180124825933648*x2**3 + 0.128829662931603*x2**2 + 0.618224356550695*x2 + 0.644219233466887
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:19
0-> accuracy1:100.0, accuracy2:70.5220878124237, accuracy3:100.0, loss:0.25376462936401367
10-> accuracy1:100.0, accuracy2:70.60241103172302, accuracy3:100.0, loss:0.2519632875919342
20-> accuracy1:100.0, accuracy2:70.76305150985718, accuracy3:100.0, loss:0.2503092885017395
30-> accuracy1:100.0, accuracy2:70.80321311950684, accuracy3:100.0, loss:0.24886178970336914
40-> accuracy1:100.0, accuracy2:70.8433747291565, accuracy3:100.0, loss:0.24746087193489075
50-> accuracy1:100.0, accuracy2:70.8433747291565, accuracy3:100.0, loss:0.24612043797969818
60-> accuracy1:100.0, accuracy2:70.88353633880615, accuracy3:100.0, loss:0.24485838413238525
70-> accuracy1:100.0, accuracy2:70.88353633880615, accuracy3:100.0, loss:0.2437087744474411
80-> accuracy1:100.0, accuracy2:70.8433747291565, accuracy3:100.0, loss:0.2426615059375763
90-> accuracy1:100.0, accuracy2:70.8433747291565, accuracy3:100.0, loss:0.24172325432300568
B(x) = -0.0150576989498468*x1**4 + 0.0145634633034748*x1**3*x2 + 0.0290712601238385*x1**3 + 0.174100579758581*x1**2*x2**2 - 0.675883450080396*x1**2*x2 + 0.705182453157287*x1**2 - 0.0962947956258459*x1*x2**3 + 0.173040991008789*x1*x2**2 + 1.12290507797421*x1*x2 - 1.19482446042042*x1 + 0.00161380633517874*x2**4 - 0.198979408659925*x2**3 + 0.25479021449504*x2**2 + 0.87315753906049*x2 + 0.592589413557711
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:20
0-> accuracy1:100.0, accuracy2:68.06949973106384, accuracy3:100.0, loss:0.2668036222457886
10-> accuracy1:100.0, accuracy2:68.03088784217834, accuracy3:100.0, loss:0.2659260034561157
20-> accuracy1:100.0, accuracy2:68.06949973106384, accuracy3:100.0, loss:0.26513150334358215
30-> accuracy1:100.0, accuracy2:68.06949973106384, accuracy3:100.0, loss:0.264274537563324
40-> accuracy1:100.0, accuracy2:68.10810565948486, accuracy3:100.0, loss:0.26354193687438965
50-> accuracy1:100.0, accuracy2:68.10810565948486, accuracy3:100.0, loss:0.26293808221817017
60-> accuracy1:100.0, accuracy2:68.10810565948486, accuracy3:100.0, loss:0.26239481568336487
70-> accuracy1:100.0, accuracy2:68.06949973106384, accuracy3:100.0, loss:0.26184362173080444
80-> accuracy1:100.0, accuracy2:68.03088784217834, accuracy3:100.0, loss:0.2613452672958374
90-> accuracy1:100.0, accuracy2:68.03088784217834, accuracy3:100.0, loss:0.26091212034225464
B(x) = -0.00881110739130086*x1**4 + 0.00451897458987683*x1**3*x2 + 0.0285292462460939*x1**3 + 0.13382027409247*x1**2*x2**2 - 0.472082472874052*x1**2*x2 + 0.516463857861995*x1**2 - 0.076220357480975*x1*x2**3 + 0.142389315967085*x1*x2**2 + 0.786836450747917*x1*x2 - 0.90564673274259*x1 + 0.00511762829032532*x2**4 - 0.193678439942656*x2**3 + 0.323652087669136*x2**2 + 1.07308534770917*x2 + 0.529479530900949
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
Failed
Elapsed Time: 111.8974403780885
