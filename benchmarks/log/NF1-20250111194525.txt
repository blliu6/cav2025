{'batch_size': 700, 'lr': np.float64(0.049999999999999996), 'loss_weight_continuous': (1, 1, 1), 'R_b': 0.4, 'margin': 0.4, 'DEG_continuous': [2, 4, 4, 2], 'learning_loops': 100, 'max_iter': 20, 'err': 0.02677454477719443}

Mosek can be used normally.
iter:1
0-> accuracy1:0.0, accuracy2:41.428571939468384, accuracy3:0.0, loss:1.2239749431610107
10-> accuracy1:100.0, accuracy2:94.42856907844543, accuracy3:100.0, loss:0.027052398771047592
20-> accuracy1:100.0, accuracy2:99.00000095367432, accuracy3:100.0, loss:-0.0016329153440892696
30-> accuracy1:100.0, accuracy2:99.42857027053833, accuracy3:100.0, loss:-0.0038405645173043013
40-> accuracy1:100.0, accuracy2:99.00000095367432, accuracy3:100.0, loss:0.0015638177283108234
50-> accuracy1:100.0, accuracy2:99.1428554058075, accuracy3:100.0, loss:-0.0038087363354861736
60-> accuracy1:100.0, accuracy2:98.85714054107666, accuracy3:100.0, loss:-0.002669853623956442
70-> accuracy1:100.0, accuracy2:99.42857027053833, accuracy3:100.0, loss:-0.0067139784805476665
80-> accuracy1:100.0, accuracy2:99.28571581840515, accuracy3:100.0, loss:-0.005913379602134228
90-> accuracy1:100.0, accuracy2:99.42857027053833, accuracy3:100.0, loss:-0.0060031781904399395
B(x) = 1.18055736860228*x1**4 + 4.75806275819437*x1**3*x2 - 0.143708741242558*x1**3 + 6.04383896576437*x1**2*x2**2 - 1.95834079053388*x1**2*x2 + 9.83836252409848*x1**2 + 4.1635562067474*x1*x2**3 + 5.20129693119438*x1*x2**2 + 17.1202568164821*x1*x2 - 5.86938475100623*x1 + 1.64488269115591*x2**4 + 1.96505546158188*x2**3 + 8.56758568569248*x2**2 + 3.89860062802681*x2 + 1.82270436805485
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:2
0-> accuracy1:100.0, accuracy2:86.87499761581421, accuracy3:100.0, loss:0.2157781571149826
10-> accuracy1:99.28571581840515, accuracy2:98.62499833106995, accuracy3:100.0, loss:0.024273226037621498
20-> accuracy1:99.85714554786682, accuracy2:97.62499928474426, accuracy3:100.0, loss:0.021894989535212517
30-> accuracy1:100.0, accuracy2:99.25000071525574, accuracy3:100.0, loss:-0.0032268729992210865
40-> accuracy1:100.0, accuracy2:99.12499785423279, accuracy3:100.0, loss:-0.0009719431400299072
50-> accuracy1:100.0, accuracy2:99.62499737739563, accuracy3:100.0, loss:-0.008074112236499786
60-> accuracy1:100.0, accuracy2:99.62499737739563, accuracy3:100.0, loss:-0.009051145054399967
70-> accuracy1:100.0, accuracy2:99.62499737739563, accuracy3:100.0, loss:-0.009360901080071926
80-> accuracy1:100.0, accuracy2:99.75000023841858, accuracy3:100.0, loss:-0.009890803135931492
90-> accuracy1:100.0, accuracy2:99.75000023841858, accuracy3:100.0, loss:-0.0100299883633852
B(x) = 3.69528848940301*x1**4 + 15.6400101056351*x1**3*x2 - 5.3509020296691*x1**3 + 23.1855138962375*x1**2*x2**2 - 18.7359697782794*x1**2*x2 + 23.3118124162258*x1**2 + 14.0944308580028*x1*x2**3 - 7.39204139396464*x1*x2**2 + 45.3743761622527*x1*x2 - 7.66462121654673*x1 + 3.312102792875*x2**4 - 0.381330281974086*x2**3 + 13.0931746283343*x2**2 + 7.7697716406445*x2 - 2.41584421839158
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:3
0-> accuracy1:100.0, accuracy2:88.55555653572083, accuracy3:100.0, loss:0.2331845611333847
10-> accuracy1:93.14285516738892, accuracy2:95.88888883590698, accuracy3:100.0, loss:0.05608293041586876
20-> accuracy1:97.42857217788696, accuracy2:97.33333587646484, accuracy3:100.0, loss:0.013175887987017632
30-> accuracy1:99.71428513526917, accuracy2:98.33333492279053, accuracy3:100.0, loss:0.000644749728962779
40-> accuracy1:100.0, accuracy2:99.33333396911621, accuracy3:100.0, loss:-0.005648608785122633
50-> accuracy1:100.0, accuracy2:98.66666793823242, accuracy3:100.0, loss:-0.006176068913191557
60-> accuracy1:100.0, accuracy2:99.44444298744202, accuracy3:100.0, loss:-0.008346627466380596
70-> accuracy1:100.0, accuracy2:99.6666669845581, accuracy3:100.0, loss:-0.010649722069501877
80-> accuracy1:100.0, accuracy2:99.5555579662323, accuracy3:100.0, loss:-0.010761954821646214
90-> accuracy1:100.0, accuracy2:99.6666669845581, accuracy3:100.0, loss:-0.010994193144142628
B(x) = 5.80814087690851*x1**4 + 32.1921169659296*x1**3*x2 - 25.9605140181173*x1**3 + 57.1884851996212*x1**2*x2**2 - 68.3496865927143*x1**2*x2 + 58.3302869887154*x1**2 + 33.6046011082495*x1*x2**3 - 22.8026567579466*x1*x2**2 + 109.688196688713*x1*x2 - 26.2729792747109*x1 + 8.32963626623788*x2**4 + 3.24454885776301*x2**3 + 44.2396597671622*x2**2 - 9.80829176066033*x2 - 0.962889070552704
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 96 counterexamples!
iter:4
0-> accuracy1:100.0, accuracy2:90.0602400302887, accuracy3:100.0, loss:0.1316235363483429
10-> accuracy1:91.8571412563324, accuracy2:88.45381736755371, accuracy3:100.0, loss:0.21409496665000916
20-> accuracy1:95.99999785423279, accuracy2:70.783132314682, accuracy3:100.0, loss:10.670330047607422
30-> accuracy1:82.42856860160828, accuracy2:79.11646366119385, accuracy3:100.0, loss:2.393056631088257
40-> accuracy1:73.71428608894348, accuracy2:79.51807379722595, accuracy3:100.0, loss:1.6169241666793823
50-> accuracy1:82.57142901420593, accuracy2:80.12048006057739, accuracy3:100.0, loss:0.5306742787361145
60-> accuracy1:89.99999761581421, accuracy2:81.12449645996094, accuracy3:100.0, loss:0.21158282458782196
70-> accuracy1:90.28571248054504, accuracy2:82.12851285934448, accuracy3:100.0, loss:0.18160319328308105
80-> accuracy1:91.14285707473755, accuracy2:84.5381498336792, accuracy3:100.0, loss:0.13629013299942017
90-> accuracy1:91.00000262260437, accuracy2:84.9397599697113, accuracy3:100.0, loss:0.132784903049469
B(x) = 7.81154417855355*x1**4 + 27.9762395016867*x1**3*x2 - 14.1688178983961*x1**3 + 36.3475051620836*x1**2*x2**2 - 51.4985678225575*x1**2*x2 + 37.9875257265915*x1**2 + 20.2092843608307*x1*x2**3 - 52.2124738257803*x1*x2**2 + 70.4824521504495*x1*x2 - 4.34897373032815*x1 + 4.28643001927872*x2**4 - 15.3412583443315*x2**3 + 25.5933902381772*x2**2 + 3.79426427322483*x2 - 1.86847733301642
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 68 counterexamples!
Add 89 counterexamples!
iter:5
0-> accuracy1:82.8125, accuracy2:78.61751317977905, accuracy3:100.0, loss:0.2307630181312561
10-> accuracy1:93.22916865348816, accuracy2:79.35484051704407, accuracy3:100.0, loss:0.17813733220100403
20-> accuracy1:91.27604365348816, accuracy2:82.39631056785583, accuracy3:100.0, loss:0.16347366571426392
30-> accuracy1:92.578125, accuracy2:80.55299520492554, accuracy3:100.0, loss:0.16043256223201752
40-> accuracy1:93.75, accuracy2:82.21198320388794, accuracy3:100.0, loss:0.14232227206230164
50-> accuracy1:93.75, accuracy2:82.85714387893677, accuracy3:100.0, loss:0.12959371507167816
60-> accuracy1:96.61458134651184, accuracy2:81.56682252883911, accuracy3:100.0, loss:0.13081026077270508
70-> accuracy1:94.921875, accuracy2:83.31797122955322, accuracy3:100.0, loss:0.12180011719465256
80-> accuracy1:96.74479365348816, accuracy2:82.94931054115295, accuracy3:100.0, loss:0.11784341931343079
90-> accuracy1:96.484375, accuracy2:83.04147720336914, accuracy3:100.0, loss:0.11662466824054718
B(x) = 5.11704976878291*x1**4 + 23.0808969145738*x1**3*x2 - 18.8759198124374*x1**3 + 33.3575613002512*x1**2*x2**2 - 53.2698379547253*x1**2*x2 + 33.8678277903496*x1**2 + 17.0287270535028*x1*x2**3 - 42.6424394856057*x1*x2**2 + 64.9907122638727*x1*x2 - 6.39574675773866*x1 + 2.88999871984767*x2**4 - 10.5095805220678*x2**3 + 26.1620021541068*x2**2 - 1.07798834471209*x2 - 0.394405683431008
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 87 counterexamples!
iter:6
0-> accuracy1:97.00520634651184, accuracy2:76.79181098937988, accuracy3:100.0, loss:0.15887433290481567
10-> accuracy1:95.18229365348816, accuracy2:76.02388858795166, accuracy3:99.71428513526917, loss:0.1590835452079773
20-> accuracy1:96.484375, accuracy2:75.93856453895569, accuracy3:100.0, loss:0.15476664900779724
30-> accuracy1:96.35416865348816, accuracy2:76.27986073493958, accuracy3:100.0, loss:0.15619675815105438
40-> accuracy1:96.484375, accuracy2:76.27986073493958, accuracy3:100.0, loss:0.15270277857780457
50-> accuracy1:96.61458134651184, accuracy2:76.79181098937988, accuracy3:100.0, loss:0.152513787150383
60-> accuracy1:95.96354365348816, accuracy2:77.38907933235168, accuracy3:100.0, loss:0.15227319300174713
70-> accuracy1:97.00520634651184, accuracy2:76.10921263694763, accuracy3:100.0, loss:0.15141013264656067
80-> accuracy1:96.61458134651184, accuracy2:76.02388858795166, accuracy3:100.0, loss:0.1517866551876068
90-> accuracy1:97.265625, accuracy2:77.81569957733154, accuracy3:100.0, loss:0.15158621966838837
B(x) = 5.07516431586633*x1**4 + 20.9218472937192*x1**3*x2 - 16.5919309299605*x1**3 + 29.8024676564842*x1**2*x2**2 - 48.937696687377*x1**2*x2 + 33.9279441953431*x1**2 + 13.8733504625553*x1*x2**3 - 36.1346244392062*x1*x2**2 + 66.301702117611*x1*x2 - 8.16276081313445*x1 + 1.7447815110936*x2**4 - 7.36709101730383*x2**3 + 27.4019879187918*x2**2 - 2.60076078483157*x2 - 0.317295796638559
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 89 counterexamples!
iter:7
0-> accuracy1:96.484375, accuracy2:71.60983085632324, accuracy3:100.0, loss:0.1879667341709137
10-> accuracy1:97.13541865348816, accuracy2:72.40285277366638, accuracy3:100.0, loss:0.18723493814468384
20-> accuracy1:96.484375, accuracy2:70.73751091957092, accuracy3:100.0, loss:0.18387050926685333
30-> accuracy1:96.875, accuracy2:71.37192487716675, accuracy3:100.0, loss:0.18482434749603271
40-> accuracy1:96.875, accuracy2:71.84774279594421, accuracy3:100.0, loss:0.18301355838775635
50-> accuracy1:96.484375, accuracy2:71.29262685775757, accuracy3:100.0, loss:0.17968341708183289
60-> accuracy1:96.74479365348816, accuracy2:71.84774279594421, accuracy3:100.0, loss:0.17923887073993683
70-> accuracy1:96.22395634651184, accuracy2:71.84774279594421, accuracy3:100.0, loss:0.1788637638092041
80-> accuracy1:97.00520634651184, accuracy2:72.3235547542572, accuracy3:100.0, loss:0.17597495019435883
90-> accuracy1:97.265625, accuracy2:70.89611291885376, accuracy3:100.0, loss:0.17239715158939362
B(x) = 4.67728476684966*x1**4 + 18.587492564843*x1**3*x2 - 16.5638319215341*x1**3 + 25.1325780870768*x1**2*x2**2 - 43.4293841399919*x1**2*x2 + 28.934659883243*x1**2 + 9.91845625226864*x1*x2**3 - 22.4789677030062*x1*x2**2 + 54.5447797587095*x1*x2 - 8.87341290923334*x1 + 0.912201552895474*x2**4 - 1.82055527133017*x2**3 + 22.5584093686101*x2**2 - 2.87410917736382*x2 - 0.432876802786734
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 86 counterexamples!
iter:8
0-> accuracy1:98.17708134651184, accuracy2:66.22123122215271, accuracy3:100.0, loss:0.2103424221277237
10-> accuracy1:97.13541865348816, accuracy2:64.58797454833984, accuracy3:100.0, loss:0.20177805423736572
20-> accuracy1:95.57291865348816, accuracy2:64.73644971847534, accuracy3:100.0, loss:0.20127101242542267
30-> accuracy1:98.17708134651184, accuracy2:63.77134323120117, accuracy3:100.0, loss:0.1944332867860794
40-> accuracy1:98.17708134651184, accuracy2:65.18188714981079, accuracy3:100.0, loss:0.18763037025928497
50-> accuracy1:98.046875, accuracy2:68.0772066116333, accuracy3:100.0, loss:0.17568546533584595
60-> accuracy1:100.0, accuracy2:77.50557065010071, accuracy3:100.0, loss:0.13817137479782104
70-> accuracy1:100.0, accuracy2:92.35337972640991, accuracy3:97.57142663002014, loss:0.10301782190799713
80-> accuracy1:100.0, accuracy2:92.35337972640991, accuracy3:99.57143068313599, loss:0.09881897270679474
90-> accuracy1:100.0, accuracy2:92.13066101074219, accuracy3:100.0, loss:0.08238968253135681
B(x) = 3.93372180650288*x1**4 + 11.350125168545*x1**3*x2 - 5.64101798324959*x1**3 + 10.1162430031486*x1**2*x2**2 - 14.2338459001594*x1**2*x2 + 7.36135680672802*x1**2 + 3.05505440547649*x1*x2**3 - 3.07455840305387*x1*x2**2 + 15.4030092398174*x1*x2 - 3.15787536983469*x1 + 0.842347086323682*x2**4 + 1.68792916583276*x2**3 + 5.92857187332556*x2**2 + 0.166565820108507*x2 + 0.9031341644705
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:9
0-> accuracy1:100.0, accuracy2:85.8327567577362, accuracy3:100.0, loss:0.14245855808258057
10-> accuracy1:100.0, accuracy2:85.62543392181396, accuracy3:86.57143115997314, loss:0.1993791162967682
20-> accuracy1:100.0, accuracy2:85.62543392181396, accuracy3:100.0, loss:0.14185167849063873
30-> accuracy1:100.0, accuracy2:85.41810512542725, accuracy3:97.7142870426178, loss:0.13207051157951355
40-> accuracy1:100.0, accuracy2:85.41810512542725, accuracy3:100.0, loss:0.11693152785301208
50-> accuracy1:100.0, accuracy2:85.210782289505, accuracy3:100.0, loss:0.11895838379859924
60-> accuracy1:100.0, accuracy2:84.65791344642639, accuracy3:100.0, loss:0.12701478600502014
70-> accuracy1:100.0, accuracy2:84.58880186080933, accuracy3:100.0, loss:0.12528468668460846
80-> accuracy1:100.0, accuracy2:85.34899950027466, accuracy3:100.0, loss:0.12320275604724884
90-> accuracy1:100.0, accuracy2:85.210782289505, accuracy3:100.0, loss:0.11924653500318527
B(x) = 1.5534680141349*x1**4 + 4.66000470260614*x1**3*x2 - 2.46608788461706*x1**3 + 5.47549285714663*x1**2*x2**2 - 5.95092246208471*x1**2*x2 + 2.47456337525388*x1**2 + 2.90581022311726*x1*x2**3 - 1.32991610065247*x1*x2**2 + 5.435678942483*x1*x2 - 1.30128473744561*x1 + 0.821067355029643*x2**4 + 0.818022539518094*x2**3 + 2.74508976331373*x2**2 + 1.0176769329873*x2 + 0.572969625206662
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:10
0-> accuracy1:100.0, accuracy2:79.57336902618408, accuracy3:100.0, loss:0.17508246004581451
10-> accuracy1:100.0, accuracy2:79.57336902618408, accuracy3:100.0, loss:0.1686582714319229
20-> accuracy1:100.0, accuracy2:79.57336902618408, accuracy3:100.0, loss:0.16604751348495483
30-> accuracy1:100.0, accuracy2:79.50872778892517, accuracy3:100.0, loss:0.16322976350784302
40-> accuracy1:100.0, accuracy2:79.638010263443, accuracy3:100.0, loss:0.15934957563877106
50-> accuracy1:100.0, accuracy2:79.57336902618408, accuracy3:100.0, loss:0.15787643194198608
60-> accuracy1:100.0, accuracy2:79.57336902618408, accuracy3:100.0, loss:0.15674075484275818
70-> accuracy1:100.0, accuracy2:79.57336902618408, accuracy3:100.0, loss:0.15586021542549133
80-> accuracy1:100.0, accuracy2:79.638010263443, accuracy3:100.0, loss:0.15559375286102295
90-> accuracy1:100.0, accuracy2:79.638010263443, accuracy3:100.0, loss:0.15494796633720398
B(x) = 1.27263604543011*x1**4 + 3.82010123405898*x1**3*x2 - 1.50371702410925*x1**3 + 4.53070246797322*x1**2*x2**2 - 3.68308222512575*x1**2*x2 + 3.12881562919852*x1**2 + 2.78697336660709*x1*x2**3 + 0.0631546639321831*x1*x2**2 + 3.97132692658234*x1*x2 - 2.30640351772884*x1 + 0.73704368577035*x2**4 + 1.04503053963643*x2**3 + 2.22850115255646*x2**2 + 0.912137736329745*x2 + 0.307015006738815
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:11
0-> accuracy1:100.0, accuracy2:74.37765598297119, accuracy3:100.0, loss:0.2507151663303375
10-> accuracy1:100.0, accuracy2:74.80267286300659, accuracy3:100.0, loss:0.21425358951091766
20-> accuracy1:100.0, accuracy2:74.4990885257721, accuracy3:100.0, loss:0.20306241512298584
30-> accuracy1:100.0, accuracy2:74.620521068573, accuracy3:100.0, loss:0.19749020040035248
40-> accuracy1:100.0, accuracy2:74.7419536113739, accuracy3:100.0, loss:0.19363096356391907
50-> accuracy1:100.0, accuracy2:74.620521068573, accuracy3:100.0, loss:0.19156257808208466
60-> accuracy1:100.0, accuracy2:74.55980777740479, accuracy3:100.0, loss:0.19056186079978943
70-> accuracy1:100.0, accuracy2:74.55980777740479, accuracy3:100.0, loss:0.19000545144081116
80-> accuracy1:100.0, accuracy2:74.55980777740479, accuracy3:100.0, loss:0.18943190574645996
90-> accuracy1:100.0, accuracy2:74.55980777740479, accuracy3:100.0, loss:0.18890303373336792
B(x) = 0.633035450608495*x1**4 + 1.99164108096008*x1**3*x2 - 0.732443684545308*x1**3 + 2.32810331420312*x1**2*x2**2 - 1.59948360454983*x1**2*x2 + 1.24950289600054*x1**2 + 1.50357675297409*x1*x2**3 + 0.332728607728037*x1*x2**2 + 1.72198716996581*x1*x2 - 1.0767909270523*x1 + 0.401527118339185*x2**4 + 0.575951503068724*x2**3 + 1.51938435503241*x2**2 + 1.15128999176597*x2 + 0.385739659882655
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:12
0-> accuracy1:100.0, accuracy2:70.34916877746582, accuracy3:100.0, loss:0.22301903367042542
10-> accuracy1:100.0, accuracy2:70.34916877746582, accuracy3:100.0, loss:0.2224082201719284
20-> accuracy1:100.0, accuracy2:70.29193043708801, accuracy3:100.0, loss:0.22182899713516235
30-> accuracy1:100.0, accuracy2:70.23468613624573, accuracy3:100.0, loss:0.22130468487739563
40-> accuracy1:100.0, accuracy2:70.23468613624573, accuracy3:100.0, loss:0.22079823911190033
50-> accuracy1:100.0, accuracy2:70.23468613624573, accuracy3:100.0, loss:0.22035309672355652
60-> accuracy1:100.0, accuracy2:70.23468613624573, accuracy3:100.0, loss:0.21992236375808716
70-> accuracy1:100.0, accuracy2:70.23468613624573, accuracy3:100.0, loss:0.2194935381412506
80-> accuracy1:100.0, accuracy2:70.17744779586792, accuracy3:100.0, loss:0.22170083224773407
90-> accuracy1:100.0, accuracy2:70.23468613624573, accuracy3:100.0, loss:0.22193917632102966
B(x) = 0.527998993561866*x1**4 + 1.63618579951126*x1**3*x2 - 0.83026213375132*x1**3 + 2.06939765853462*x1**2*x2**2 - 1.19527754841033*x1**2*x2 + 1.43238289949689*x1**2 + 1.45603767173814*x1*x2**3 + 0.740698650338166*x1*x2**2 + 1.83405056836508*x1*x2 - 0.978971826043638*x1 + 0.376421454078076*x2**4 + 0.628500473765618*x2**3 + 1.56939398532052*x2**2 + 1.22478414463662*x2 + 0.367664194974748
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:13
0-> accuracy1:100.0, accuracy2:66.48619174957275, accuracy3:100.0, loss:0.2531905472278595
10-> accuracy1:100.0, accuracy2:66.48619174957275, accuracy3:100.0, loss:0.2527126967906952
20-> accuracy1:100.0, accuracy2:66.48619174957275, accuracy3:100.0, loss:0.25224846601486206
30-> accuracy1:100.0, accuracy2:66.48619174957275, accuracy3:100.0, loss:0.25180041790008545
40-> accuracy1:100.0, accuracy2:66.48619174957275, accuracy3:100.0, loss:0.25138983130455017
50-> accuracy1:100.0, accuracy2:66.48619174957275, accuracy3:100.0, loss:0.25091326236724854
60-> accuracy1:100.0, accuracy2:66.48619174957275, accuracy3:100.0, loss:0.2505418062210083
70-> accuracy1:100.0, accuracy2:66.54033660888672, accuracy3:100.0, loss:0.25019875168800354
80-> accuracy1:100.0, accuracy2:66.48619174957275, accuracy3:100.0, loss:0.2499571591615677
90-> accuracy1:100.0, accuracy2:66.48619174957275, accuracy3:100.0, loss:0.2498367875814438
B(x) = 0.543974964030016*x1**4 + 1.46077290294174*x1**3*x2 - 1.03208712697664*x1**3 + 1.7252294366995*x1**2*x2**2 - 0.96426453968918*x1**2*x2 + 1.71042668829659*x1**2 + 1.43943194346241*x1*x2**3 + 1.08303483547413*x1*x2**2 + 1.83269881465535*x1*x2 - 0.984099033583981*x1 + 0.383119354213859*x2**4 + 0.705011815859706*x2**3 + 1.67896434939456*x2**2 + 1.31361619640952*x2 + 0.340191363957652
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:14
0-> accuracy1:100.0, accuracy2:63.02003264427185, accuracy3:100.0, loss:0.2770981192588806
10-> accuracy1:100.0, accuracy2:63.02003264427185, accuracy3:100.0, loss:0.2769550383090973
20-> accuracy1:100.0, accuracy2:63.071393966674805, accuracy3:100.0, loss:0.27818673849105835
30-> accuracy1:100.0, accuracy2:63.071393966674805, accuracy3:100.0, loss:0.278412401676178
40-> accuracy1:100.0, accuracy2:63.071393966674805, accuracy3:100.0, loss:0.2781679034233093
50-> accuracy1:100.0, accuracy2:63.071393966674805, accuracy3:100.0, loss:0.27778515219688416
60-> accuracy1:100.0, accuracy2:63.071393966674805, accuracy3:100.0, loss:0.2774011790752411
70-> accuracy1:100.0, accuracy2:63.17411661148071, accuracy3:100.0, loss:0.27710917592048645
80-> accuracy1:100.0, accuracy2:63.071393966674805, accuracy3:100.0, loss:0.2769853174686432
90-> accuracy1:100.0, accuracy2:63.071393966674805, accuracy3:100.0, loss:0.2767990231513977
B(x) = 0.556138205371222*x1**4 + 1.4251463330222*x1**3*x2 - 1.10636054082983*x1**3 + 1.73252285923745*x1**2*x2**2 - 0.808726207349469*x1**2*x2 + 1.84312293019894*x1**2 + 1.52833723588012*x1*x2**3 + 1.35894602347115*x1*x2**2 + 1.97751276420448*x1*x2 - 0.962537704503925*x1 + 0.426426737133174*x2**4 + 0.803169710943896*x2**3 + 1.72680624276796*x2**2 + 1.32160091096197*x2 + 0.332416275563889
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:15
0-> accuracy1:100.0, accuracy2:59.94137525558472, accuracy3:100.0, loss:0.3013415038585663
10-> accuracy1:100.0, accuracy2:59.94137525558472, accuracy3:100.0, loss:0.30129483342170715
20-> accuracy1:100.0, accuracy2:59.94137525558472, accuracy3:100.0, loss:0.30117928981781006
30-> accuracy1:100.0, accuracy2:60.03907918930054, accuracy3:100.0, loss:0.30249062180519104
40-> accuracy1:100.0, accuracy2:59.94137525558472, accuracy3:100.0, loss:0.30269843339920044
50-> accuracy1:100.0, accuracy2:59.89252328872681, accuracy3:100.0, loss:0.3023449182510376
60-> accuracy1:100.0, accuracy2:59.94137525558472, accuracy3:100.0, loss:0.3018786609172821
70-> accuracy1:100.0, accuracy2:59.89252328872681, accuracy3:100.0, loss:0.30147629976272583
80-> accuracy1:100.0, accuracy2:59.94137525558472, accuracy3:100.0, loss:0.3012266755104065
90-> accuracy1:100.0, accuracy2:59.99022722244263, accuracy3:100.0, loss:0.3010439872741699
B(x) = 0.573121255534948*x1**4 + 1.47870813190033*x1**3*x2 - 1.14487766763212*x1**3 + 1.84362235249512*x1**2*x2**2 - 0.78488025313915*x1**2*x2 + 1.8661538127336*x1**2 + 1.6623358450002*x1*x2**3 + 1.50992228471449*x1*x2**2 + 1.99261924300413*x1*x2 - 0.968100095129866*x1 + 0.486726451988632*x2**4 + 0.891488542408112*x2**3 + 1.70259295570594*x2**2 + 1.29438795759468*x2 + 0.330614822169554
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:16
0-> accuracy1:100.0, accuracy2:57.14951157569885, accuracy3:100.0, loss:0.3235347867012024
10-> accuracy1:100.0, accuracy2:57.056355476379395, accuracy3:100.0, loss:0.3234556019306183
20-> accuracy1:100.0, accuracy2:57.009780406951904, accuracy3:100.0, loss:0.32339218258857727
30-> accuracy1:100.0, accuracy2:57.056355476379395, accuracy3:100.0, loss:0.3239956796169281
40-> accuracy1:100.0, accuracy2:57.19608664512634, accuracy3:100.0, loss:0.3249968886375427
50-> accuracy1:100.0, accuracy2:57.009780406951904, accuracy3:100.0, loss:0.3246099352836609
60-> accuracy1:100.0, accuracy2:57.009780406951904, accuracy3:100.0, loss:0.3241652548313141
70-> accuracy1:100.0, accuracy2:57.056355476379395, accuracy3:100.0, loss:0.3236692547798157
80-> accuracy1:100.0, accuracy2:57.056355476379395, accuracy3:100.0, loss:0.32327595353126526
90-> accuracy1:100.0, accuracy2:57.14951157569885, accuracy3:100.0, loss:0.323249489068985
B(x) = 0.613576576941707*x1**4 + 1.63744995116601*x1**3*x2 - 1.19794255995233*x1**3 + 2.11714244237947*x1**2*x2**2 - 0.808094214862631*x1**2*x2 + 1.89077395603555*x1**2 + 1.91074850233469*x1*x2**3 + 1.63791317522904*x1*x2**2 + 2.0020543874917*x1*x2 - 0.980821866336493*x1 + 0.578893497692824*x2**4 + 0.991641730534763*x2**3 + 1.68182861159628*x2**2 + 1.26619494102084*x2 + 0.327901878332139
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:17
0-> accuracy1:100.0, accuracy2:54.561638832092285, accuracy3:100.0, loss:0.3438834547996521
10-> accuracy1:100.0, accuracy2:54.5171320438385, accuracy3:100.0, loss:0.34379342198371887
20-> accuracy1:100.0, accuracy2:54.5171320438385, accuracy3:100.0, loss:0.3436806797981262
30-> accuracy1:100.0, accuracy2:54.60613965988159, accuracy3:100.0, loss:0.34591224789619446
40-> accuracy1:100.0, accuracy2:54.472631216049194, accuracy3:100.0, loss:0.3454655706882477
50-> accuracy1:100.0, accuracy2:54.472631216049194, accuracy3:100.0, loss:0.34473735094070435
60-> accuracy1:100.0, accuracy2:54.42812442779541, accuracy3:100.0, loss:0.344169557094574
70-> accuracy1:100.0, accuracy2:54.472631216049194, accuracy3:100.0, loss:0.3437015414237976
80-> accuracy1:100.0, accuracy2:54.60613965988159, accuracy3:100.0, loss:0.3434022068977356
90-> accuracy1:100.0, accuracy2:54.561638832092285, accuracy3:100.0, loss:0.3456379175186157
B(x) = 0.637302375872437*x1**4 + 1.96230139520776*x1**3*x2 - 1.15335839242872*x1**3 + 2.83180854137221*x1**2*x2**2 - 0.791907553685256*x1**2*x2 + 1.86073993767537*x1**2 + 2.40549208028247*x1*x2**3 + 1.69586874200157*x1*x2**2 + 2.0579813269434*x1*x2 - 0.973277448269359*x1 + 0.723651282034586*x2**4 + 1.07533801131789*x2**3 + 1.64676732463021*x2**2 + 1.19427615980315*x2 + 0.320319440369837
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:18
0-> accuracy1:100.0, accuracy2:52.15168595314026, accuracy3:100.0, loss:0.3644317388534546
10-> accuracy1:100.0, accuracy2:51.98125243186951, accuracy3:100.0, loss:0.36336833238601685
20-> accuracy1:100.0, accuracy2:52.023857831954956, accuracy3:100.0, loss:0.3627433180809021
30-> accuracy1:100.0, accuracy2:52.023857831954956, accuracy3:100.0, loss:0.3622548282146454
40-> accuracy1:100.0, accuracy2:52.10907459259033, accuracy3:100.0, loss:0.3621220290660858
50-> accuracy1:100.0, accuracy2:52.15168595314026, accuracy3:100.0, loss:0.36410847306251526
60-> accuracy1:100.0, accuracy2:52.10907459259033, accuracy3:100.0, loss:0.36403775215148926
70-> accuracy1:100.0, accuracy2:52.10907459259033, accuracy3:100.0, loss:0.3626338243484497
80-> accuracy1:100.0, accuracy2:51.93864703178406, accuracy3:100.0, loss:0.36226722598075867
90-> accuracy1:100.0, accuracy2:51.98125243186951, accuracy3:100.0, loss:0.3618091642856598
B(x) = 0.818330512485035*x1**4 + 2.58034773585613*x1**3*x2 - 1.3720507192765*x1**3 + 3.7433676828432*x1**2*x2**2 - 1.02801114364466*x1**2*x2 + 1.97601368121973*x1**2 + 3.17470162730583*x1*x2**3 + 1.78744344577696*x1*x2**2 + 2.0358361985442*x1*x2 - 1.05670150776455*x1 + 0.994096093792978*x2**4 + 1.23578283900637*x2**3 + 1.59687721154038*x2**2 + 1.13342055226297*x2 + 0.318655569558255
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:19
0-> accuracy1:100.0, accuracy2:49.979567527770996, accuracy3:100.0, loss:0.38030749559402466
10-> accuracy1:100.0, accuracy2:49.979567527770996, accuracy3:100.0, loss:0.3813330829143524
20-> accuracy1:100.0, accuracy2:50.1021683216095, accuracy3:100.0, loss:0.3798306882381439
30-> accuracy1:100.0, accuracy2:49.81610178947449, accuracy3:100.0, loss:0.3792378008365631
40-> accuracy1:100.0, accuracy2:49.856966733932495, accuracy3:100.0, loss:0.3788910210132599
50-> accuracy1:100.0, accuracy2:49.979567527770996, accuracy3:100.0, loss:0.37864983081817627
60-> accuracy1:100.0, accuracy2:50.020432472229004, accuracy3:100.0, loss:0.38055557012557983
70-> accuracy1:100.0, accuracy2:50.06129741668701, accuracy3:100.0, loss:0.37930163741111755
80-> accuracy1:100.0, accuracy2:49.73436892032623, accuracy3:100.0, loss:0.3786623775959015
90-> accuracy1:100.0, accuracy2:49.89783465862274, accuracy3:100.0, loss:0.37821391224861145
B(x) = 1.09904763948835*x1**4 + 3.69903905215208*x1**3*x2 - 1.65162636364693*x1**3 + 5.5098034740742*x1**2*x2**2 - 1.36998930790313*x1**2*x2 + 2.26052428707756*x1**2 + 4.60502246256307*x1*x2**3 + 1.99551501056049*x1*x2**2 + 2.18246805318778*x1*x2 - 1.27894390263524*x1 + 1.45333360568554*x2**4 + 1.48512200651939*x2**3 + 1.52335532020999*x2**2 + 0.939757849703055*x2 + 0.313682557288701
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:20
0-> accuracy1:100.0, accuracy2:47.97801375389099, accuracy3:100.0, loss:0.3938151001930237
10-> accuracy1:100.0, accuracy2:48.09579849243164, accuracy3:100.0, loss:0.39556625485420227
20-> accuracy1:100.0, accuracy2:48.01727533340454, accuracy3:100.0, loss:0.39493921399116516
30-> accuracy1:100.0, accuracy2:47.663918137550354, accuracy3:100.0, loss:0.39395517110824585
40-> accuracy1:100.0, accuracy2:47.86022901535034, accuracy3:100.0, loss:0.3935387432575226
50-> accuracy1:100.0, accuracy2:47.86022901535034, accuracy3:100.0, loss:0.3932305574417114
60-> accuracy1:100.0, accuracy2:47.93875217437744, accuracy3:100.0, loss:0.39292973279953003
70-> accuracy1:100.0, accuracy2:47.93875217437744, accuracy3:100.0, loss:0.392935574054718
80-> accuracy1:100.0, accuracy2:47.97801375389099, accuracy3:100.0, loss:0.392841100692749
90-> accuracy1:100.0, accuracy2:47.93875217437744, accuracy3:100.0, loss:0.3963986933231354
B(x) = 1.3035262041305*x1**4 + 4.97804184209644*x1**3*x2 - 1.82832609035202*x1**3 + 7.84721491324286*x1**2*x2**2 - 2.13672946873825*x1**2*x2 + 2.60569010943416*x1**2 + 6.28263126419938*x1*x2**3 + 1.33003094112321*x1*x2**2 + 2.5585086218846*x1*x2 - 1.58966538072567*x1 + 1.93466561653779*x2**4 + 1.36897856600802*x2**3 + 1.37477828228076*x2**2 + 0.543186879320378*x2 + 0.30199758043176
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
Failed
Elapsed Time: 108.46356079587713
