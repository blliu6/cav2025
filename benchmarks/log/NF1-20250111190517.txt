{'batch_size': 600, 'lr': np.float64(0.12999999999999998), 'loss_weight_continuous': (1, 1, 1), 'R_b': 0.4, 'margin': 0.4, 'DEG_continuous': [2, 4, 4, 2], 'learning_loops': 100, 'max_iter': 20, 'err': 0.02677454477719443}

Mosek can be used normally.
iter:1
0-> accuracy1:0.0, accuracy2:42.33333468437195, accuracy3:0.0, loss:0.9796441793441772
10-> accuracy1:93.50000023841858, accuracy2:95.16666531562805, accuracy3:100.0, loss:0.15982742607593536
20-> accuracy1:100.0, accuracy2:97.50000238418579, accuracy3:100.0, loss:0.060968197882175446
30-> accuracy1:100.0, accuracy2:98.66666793823242, accuracy3:100.0, loss:0.02569061703979969
40-> accuracy1:99.16666746139526, accuracy2:99.6666669845581, accuracy3:100.0, loss:-0.002164294011890888
50-> accuracy1:100.0, accuracy2:99.6666669845581, accuracy3:100.0, loss:-0.01078176312148571
60-> accuracy1:100.0, accuracy2:99.6666669845581, accuracy3:100.0, loss:-0.011307213455438614
70-> accuracy1:100.0, accuracy2:99.6666669845581, accuracy3:100.0, loss:-0.011778179556131363
80-> accuracy1:100.0, accuracy2:99.6666669845581, accuracy3:100.0, loss:-0.012351150624454021
90-> accuracy1:100.0, accuracy2:99.6666669845581, accuracy3:100.0, loss:-0.012618719600141048
B(x) = 2.24296008635719*x1**4 + 8.57400021551259*x1**3*x2 - 1.75500729472583*x1**3 + 14.3505121148072*x1**2*x2**2 + 6.93092362486913*x1**2*x2 + 25.9381842510238*x1**2 + 14.4130765645203*x1*x2**3 + 28.8920586844482*x1*x2**2 + 46.4282001896522*x1*x2 - 10.5884685792076*x1 + 6.08939458161155*x2**4 + 16.2290810815299*x2**3 + 14.7153694655694*x2**2 - 0.907759956798104*x2 - 0.859105871558467
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:2
0-> accuracy1:100.0, accuracy2:85.4285717010498, accuracy3:100.0, loss:0.1564268171787262
10-> accuracy1:100.0, accuracy2:96.14285826683044, accuracy3:100.0, loss:0.01262490451335907
20-> accuracy1:100.0, accuracy2:92.7142858505249, accuracy3:100.0, loss:1.7520942687988281
30-> accuracy1:95.83333134651184, accuracy2:85.57142615318298, accuracy3:100.0, loss:0.44574597477912903
40-> accuracy1:87.99999952316284, accuracy2:82.42856860160828, accuracy3:100.0, loss:4.087575435638428
50-> accuracy1:98.83333444595337, accuracy2:82.99999833106995, accuracy3:100.0, loss:16.652423858642578
60-> accuracy1:85.33333539962769, accuracy2:98.85714054107666, accuracy3:88.99999856948853, loss:4.837392330169678
70-> accuracy1:100.0, accuracy2:83.28571319580078, accuracy3:100.0, loss:2.732844829559326
80-> accuracy1:100.0, accuracy2:98.57142567634583, accuracy3:100.0, loss:0.5424971580505371
90-> accuracy1:100.0, accuracy2:99.00000095367432, accuracy3:100.0, loss:0.3739391565322876
B(x) = 78.1023581159591*x1**4 + 128.951373427016*x1**3*x2 + 83.8639602549052*x1**3 + 98.1039834289783*x1**2*x2**2 - 7.50122463995357*x1**2*x2 + 40.2787210275569*x1**2 + 12.6209440305683*x1*x2**3 + 27.5950272625423*x1*x2**2 + 261.654322988086*x1*x2 - 78.4754633033223*x1 - 6.87888996417697*x2**4 - 65.3814501816581*x2**3 + 141.587308809066*x2**2 + 111.915378911234*x2 + 53.7217310783535
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:3
0-> accuracy1:100.0, accuracy2:86.75000071525574, accuracy3:100.0, loss:4.092962265014648
10-> accuracy1:100.0, accuracy2:80.37499785423279, accuracy3:89.33333158493042, loss:1.8858346939086914
20-> accuracy1:97.00000286102295, accuracy2:78.37499976158142, accuracy3:100.0, loss:0.6482769250869751
30-> accuracy1:95.83333134651184, accuracy2:87.37499713897705, accuracy3:100.0, loss:0.29047682881355286
40-> accuracy1:100.0, accuracy2:83.87500047683716, accuracy3:98.83333444595337, loss:0.18266159296035767
50-> accuracy1:97.00000286102295, accuracy2:87.99999952316284, accuracy3:100.0, loss:0.14137804508209229
60-> accuracy1:98.50000143051147, accuracy2:88.7499988079071, accuracy3:99.83333349227905, loss:0.1219552531838417
70-> accuracy1:98.66666793823242, accuracy2:88.87500166893005, accuracy3:100.0, loss:0.1097245067358017
80-> accuracy1:98.16666841506958, accuracy2:88.99999856948853, accuracy3:100.0, loss:0.10040167719125748
90-> accuracy1:97.83333539962769, accuracy2:89.12500143051147, accuracy3:100.0, loss:0.09548744559288025
B(x) = 11.8577660024455*x1**4 + 36.6221567640078*x1**3*x2 - 0.984869806197402*x1**3 + 28.3673535312078*x1**2*x2**2 - 18.6494728381216*x1**2*x2 + 21.3375027481432*x1**2 + 4.11767003430455*x1*x2**3 - 7.05767821612773*x1*x2**2 + 36.0586832982681*x1*x2 - 13.2515310821093*x1 - 0.915955587824572*x2**4 - 1.63545313330964*x2**3 + 14.6804193776684*x2**2 - 3.44533771892653*x2 - 0.917031609619587
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:4
0-> accuracy1:98.00000190734863, accuracy2:78.77777814865112, accuracy3:100.0, loss:0.23029790818691254
10-> accuracy1:97.33333587646484, accuracy2:78.11111211776733, accuracy3:100.0, loss:0.20500099658966064
20-> accuracy1:97.00000286102295, accuracy2:74.33333396911621, accuracy3:100.0, loss:0.18822678923606873
30-> accuracy1:94.33333277702332, accuracy2:75.3333330154419, accuracy3:100.0, loss:0.18318194150924683
40-> accuracy1:95.99999785423279, accuracy2:77.66666412353516, accuracy3:100.0, loss:0.17483960092067719
50-> accuracy1:96.33333086967468, accuracy2:77.55555510520935, accuracy3:100.0, loss:0.1690191626548767
60-> accuracy1:96.66666388511658, accuracy2:77.44444608688354, accuracy3:100.0, loss:0.16486725211143494
70-> accuracy1:96.66666388511658, accuracy2:77.44444608688354, accuracy3:100.0, loss:0.1617782711982727
80-> accuracy1:97.00000286102295, accuracy2:77.44444608688354, accuracy3:100.0, loss:0.15970654785633087
90-> accuracy1:96.66666388511658, accuracy2:77.44444608688354, accuracy3:100.0, loss:0.15816299617290497
B(x) = 4.36029773551817*x1**4 + 13.6115317325648*x1**3*x2 - 3.67476198814152*x1**3 + 12.8623577382482*x1**2*x2**2 - 11.2579303228481*x1**2*x2 + 10.6778466250305*x1**2 + 2.181730808646*x1*x2**3 - 4.90087472087438*x1*x2**2 + 19.6109947400321*x1*x2 - 3.35056264893418*x1 - 0.330547689971034*x2**4 - 1.29588304685178*x2**3 + 8.19996037124928*x2**2 + 0.247730093920859*x2 - 0.542184382129137
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 97 counterexamples!
iter:5
0-> accuracy1:97.1666693687439, accuracy2:69.90972757339478, accuracy3:100.0, loss:0.20323283970355988
10-> accuracy1:97.50000238418579, accuracy2:69.90972757339478, accuracy3:100.0, loss:0.20158284902572632
20-> accuracy1:97.33333587646484, accuracy2:69.90972757339478, accuracy3:100.0, loss:0.20234398543834686
30-> accuracy1:97.1666693687439, accuracy2:69.90972757339478, accuracy3:100.0, loss:0.2023492306470871
40-> accuracy1:97.1666693687439, accuracy2:69.90972757339478, accuracy3:100.0, loss:0.20340049266815186
50-> accuracy1:98.00000190734863, accuracy2:69.4082260131836, accuracy3:100.0, loss:0.2038096934556961
60-> accuracy1:97.66666889190674, accuracy2:69.4082260131836, accuracy3:100.0, loss:0.20496445894241333
70-> accuracy1:97.83333539962769, accuracy2:67.70310997962952, accuracy3:100.0, loss:0.20546385645866394
80-> accuracy1:98.66666793823242, accuracy2:64.59378004074097, accuracy3:100.0, loss:0.20635215938091278
90-> accuracy1:98.83333444595337, accuracy2:62.68806457519531, accuracy3:100.0, loss:0.20729726552963257
B(x) = 2.00942714170416*x1**4 + 6.01370442881194*x1**3*x2 - 2.54210084353023*x1**3 + 6.13489115618012*x1**2*x2**2 - 7.17386530975896*x1**2*x2 + 6.29182905486495*x1**2 + 1.07601737596994*x1*x2**3 - 2.92480564420702*x1*x2**2 + 11.9383662357371*x1*x2 - 2.13583149572712*x1 - 0.161007591300558*x2**4 - 0.580068194117219*x2**3 + 4.8989724695058*x2**2 + 0.123001811962995*x2 - 0.200612429329919
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:6
0-> accuracy1:99.16666746139526, accuracy2:55.150407552719116, accuracy3:100.0, loss:0.2417849898338318
10-> accuracy1:99.83333349227905, accuracy2:54.32999134063721, accuracy3:100.0, loss:0.24140506982803345
20-> accuracy1:100.0, accuracy2:54.32999134063721, accuracy3:100.0, loss:0.24101480841636658
30-> accuracy1:100.0, accuracy2:54.238831996917725, accuracy3:100.0, loss:0.2403872311115265
40-> accuracy1:100.0, accuracy2:54.14767265319824, accuracy3:100.0, loss:0.2393762618303299
50-> accuracy1:100.0, accuracy2:54.05651926994324, accuracy3:100.0, loss:0.2379923313856125
60-> accuracy1:100.0, accuracy2:53.965359926223755, accuracy3:100.0, loss:0.2362326830625534
70-> accuracy1:100.0, accuracy2:53.87420058250427, accuracy3:100.0, loss:0.23405256867408752
80-> accuracy1:100.0, accuracy2:53.78304719924927, accuracy3:100.0, loss:0.2314051389694214
90-> accuracy1:100.0, accuracy2:53.691887855529785, accuracy3:100.0, loss:0.2284398376941681
B(x) = 0.879992509033686*x1**4 + 2.71665710778549*x1**3*x2 - 1.51051813419889*x1**3 + 2.76903788284198*x1**2*x2**2 - 3.95771006027298*x1**2*x2 + 3.37901281748652*x1**2 + 0.403537641874659*x1*x2**3 - 1.40592418108496*x1*x2**2 + 6.54737958403224*x1*x2 - 1.39308976969248*x1 - 0.0570750776162394*x2**4 - 0.0805097805095909*x2**3 + 2.32439366801176*x2**2 - 0.000866449629956717*x2 + 0.152655448851025
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:7
0-> accuracy1:100.0, accuracy2:49.20634925365448, accuracy3:100.0, loss:0.2469935566186905
10-> accuracy1:100.0, accuracy2:49.039265513420105, accuracy3:100.0, loss:0.24180661141872406
20-> accuracy1:100.0, accuracy2:48.95572364330292, accuracy3:100.0, loss:0.23571069538593292
30-> accuracy1:100.0, accuracy2:48.95572364330292, accuracy3:100.0, loss:0.22879467904567719
40-> accuracy1:100.0, accuracy2:48.95572364330292, accuracy3:100.0, loss:0.2211640626192093
50-> accuracy1:100.0, accuracy2:48.87218177318573, accuracy3:100.0, loss:0.21188761293888092
60-> accuracy1:100.0, accuracy2:49.707603454589844, accuracy3:100.0, loss:0.1991146355867386
70-> accuracy1:100.0, accuracy2:56.975769996643066, accuracy3:100.0, loss:0.1797957718372345
80-> accuracy1:100.0, accuracy2:73.43358397483826, accuracy3:100.0, loss:0.14886298775672913
90-> accuracy1:100.0, accuracy2:89.39014077186584, accuracy3:100.0, loss:0.110988549888134
B(x) = 0.464968037148285*x1**4 + 1.41698708807882*x1**3*x2 - 1.0279953892393*x1**3 + 1.43448568710811*x1**2*x2**2 - 2.97582847438191*x1**2*x2 + 2.60976474429268*x1**2 - 0.0592549602907874*x1*x2**3 - 0.612910892876094*x1*x2**2 + 5.26461218621468*x1*x2 - 1.99179815525909*x1 - 0.0136549351893038*x2**4 - 0.0781823572790057*x2**3 + 0.813522119560927*x2**2 + 0.0309093877228156*x2 + 0.858679700986653
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:8
0-> accuracy1:100.0, accuracy2:82.96067714691162, accuracy3:100.0, loss:0.18380700051784515
10-> accuracy1:100.0, accuracy2:83.26908349990845, accuracy3:100.0, loss:0.17069263756275177
20-> accuracy1:100.0, accuracy2:83.65458846092224, accuracy3:100.0, loss:0.15221332013607025
30-> accuracy1:100.0, accuracy2:83.34618210792542, accuracy3:100.0, loss:0.14723330736160278
40-> accuracy1:100.0, accuracy2:83.65458846092224, accuracy3:100.0, loss:0.14103995263576508
50-> accuracy1:100.0, accuracy2:83.65458846092224, accuracy3:100.0, loss:0.13820874691009521
60-> accuracy1:100.0, accuracy2:83.65458846092224, accuracy3:100.0, loss:0.13667619228363037
70-> accuracy1:100.0, accuracy2:83.65458846092224, accuracy3:100.0, loss:0.1358165591955185
80-> accuracy1:100.0, accuracy2:83.5774838924408, accuracy3:100.0, loss:0.13521060347557068
90-> accuracy1:100.0, accuracy2:83.5774838924408, accuracy3:100.0, loss:0.1345134824514389
B(x) = 0.219799826418016*x1**4 + 0.665223061408181*x1**3*x2 - 0.471056028575049*x1**3 + 0.646069450930177*x1**2*x2**2 - 1.54373344178255*x1**2*x2 + 1.3890380276925*x1**2 - 0.0277186625494413*x1*x2**3 + 0.184871142266478*x1*x2**2 + 2.35870559504671*x1*x2 - 1.2813565031943*x1 - 0.00245956306246253*x2**4 - 0.152524709323878*x2**3 + 0.677474019818848*x2**2 + 0.735877602336513*x2 + 0.483214515614756
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:9
0-> accuracy1:100.0, accuracy2:77.59484648704529, accuracy3:100.0, loss:0.18520866334438324
10-> accuracy1:100.0, accuracy2:77.59484648704529, accuracy3:100.0, loss:0.18458622694015503
20-> accuracy1:100.0, accuracy2:77.59484648704529, accuracy3:100.0, loss:0.18426042795181274
30-> accuracy1:100.0, accuracy2:77.45168209075928, accuracy3:100.0, loss:0.1835671365261078
40-> accuracy1:100.0, accuracy2:77.38010287284851, accuracy3:100.0, loss:0.1829913705587387
50-> accuracy1:100.0, accuracy2:77.38010287284851, accuracy3:100.0, loss:0.18249627947807312
60-> accuracy1:100.0, accuracy2:77.30851769447327, accuracy3:100.0, loss:0.18202000856399536
70-> accuracy1:100.0, accuracy2:77.2369384765625, accuracy3:100.0, loss:0.1815735548734665
80-> accuracy1:100.0, accuracy2:77.2369384765625, accuracy3:100.0, loss:0.1811019480228424
90-> accuracy1:100.0, accuracy2:77.2369384765625, accuracy3:100.0, loss:0.18061599135398865
B(x) = 0.109066472164384*x1**4 + 0.33693771112037*x1**3*x2 - 0.244741922558271*x1**3 + 0.257112782406607*x1**2*x2**2 - 0.864574237350554*x1**2*x2 + 0.849117949107121*x1**2 + 0.00579660665993182*x1*x2**3 + 0.306307323702209*x1*x2**2 + 1.22596583041266*x1*x2 - 0.968377686744175*x1 - 0.00358523102960514*x2**4 - 0.0965832502806295*x2**3 + 0.634981204249932*x2**2 + 0.975909212885599*x2 + 0.389551243550518
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:10
0-> accuracy1:100.0, accuracy2:72.01068997383118, accuracy3:100.0, loss:0.22502756118774414
10-> accuracy1:100.0, accuracy2:72.01068997383118, accuracy3:100.0, loss:0.2243315875530243
20-> accuracy1:100.0, accuracy2:72.01068997383118, accuracy3:100.0, loss:0.22365964949131012
30-> accuracy1:100.0, accuracy2:72.01068997383118, accuracy3:100.0, loss:0.2230737954378128
40-> accuracy1:100.0, accuracy2:72.01068997383118, accuracy3:100.0, loss:0.22260314226150513
50-> accuracy1:100.0, accuracy2:72.01068997383118, accuracy3:100.0, loss:0.22207771241664886
60-> accuracy1:100.0, accuracy2:72.01068997383118, accuracy3:100.0, loss:0.22160924971103668
70-> accuracy1:100.0, accuracy2:71.87708616256714, accuracy3:100.0, loss:0.22115054726600647
80-> accuracy1:100.0, accuracy2:71.87708616256714, accuracy3:100.0, loss:0.2206566482782364
90-> accuracy1:100.0, accuracy2:71.87708616256714, accuracy3:100.0, loss:0.220166876912117
B(x) = 0.0656937610075484*x1**4 + 0.209443703750419*x1**3*x2 - 0.142154085701113*x1**3 + 0.0769544481027162*x1**2*x2**2 - 0.471791007280315*x1**2*x2 + 0.604096118637312*x1**2 + 0.0356733326739238*x1*x2**3 + 0.325139413557366*x1*x2**2 + 0.677850888298438*x1*x2 - 0.696631689561383*x1 - 0.00578616746048825*x2**4 - 0.0144200073573138*x2**3 + 0.842424734309968*x2**2 + 1.26483341781335*x2 + 0.32780862459926
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:11
0-> accuracy1:100.0, accuracy2:67.37633347511292, accuracy3:100.0, loss:0.2582060396671295
10-> accuracy1:100.0, accuracy2:67.31371283531189, accuracy3:100.0, loss:0.24823784828186035
20-> accuracy1:100.0, accuracy2:68.06512475013733, accuracy3:100.0, loss:0.23668831586837769
30-> accuracy1:100.0, accuracy2:73.57545495033264, accuracy3:100.0, loss:0.22526751458644867
40-> accuracy1:100.0, accuracy2:73.82592558860779, accuracy3:100.0, loss:0.21777886152267456
50-> accuracy1:100.0, accuracy2:73.82592558860779, accuracy3:100.0, loss:0.2141997218132019
60-> accuracy1:100.0, accuracy2:73.82592558860779, accuracy3:100.0, loss:0.2131856083869934
70-> accuracy1:100.0, accuracy2:73.76330494880676, accuracy3:100.0, loss:0.21300849318504333
80-> accuracy1:100.0, accuracy2:73.76330494880676, accuracy3:100.0, loss:0.21262817084789276
90-> accuracy1:100.0, accuracy2:73.76330494880676, accuracy3:100.0, loss:0.2120753675699234
B(x) = 0.0630771717069682*x1**4 + 0.203835320850818*x1**3*x2 - 0.110162183831269*x1**3 + 0.0465384020909132*x1**2*x2**2 - 0.0369012657096764*x1**2*x2 + 0.887351714015518*x1**2 - 0.00843336822201222*x1*x2**3 + 0.537161635461954*x1*x2**2 + 1.2421011658738*x1*x2 - 0.397382622022316*x1 + 0.000222595518112976*x2**4 - 0.108571259612317*x2**3 + 1.09767567590097*x2**2 + 1.47158122431315*x2 + 0.272790252294285
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:12
0-> accuracy1:100.0, accuracy2:69.41661834716797, accuracy3:100.0, loss:0.24581259489059448
10-> accuracy1:100.0, accuracy2:69.53447461128235, accuracy3:100.0, loss:0.23958949744701385
20-> accuracy1:100.0, accuracy2:69.5933997631073, accuracy3:100.0, loss:0.23282070457935333
30-> accuracy1:100.0, accuracy2:69.5933997631073, accuracy3:100.0, loss:0.2278289943933487
40-> accuracy1:100.0, accuracy2:69.65232491493225, accuracy3:100.0, loss:0.22366051375865936
50-> accuracy1:100.0, accuracy2:69.35768723487854, accuracy3:100.0, loss:0.2200758457183838
60-> accuracy1:100.0, accuracy2:70.77195048332214, accuracy3:100.0, loss:0.21704691648483276
70-> accuracy1:100.0, accuracy2:72.2451388835907, accuracy3:100.0, loss:0.21391811966896057
80-> accuracy1:100.0, accuracy2:73.83618354797363, accuracy3:100.0, loss:0.21075335144996643
90-> accuracy1:100.0, accuracy2:74.8968780040741, accuracy3:100.0, loss:0.2100321650505066
B(x) = 0.0660329448388647*x1**4 + 0.152577955434066*x1**3*x2 - 0.168007650978364*x1**3 - 0.0100191336274975*x1**2*x2**2 + 0.0887787405969906*x1**2*x2 + 1.6925286402443*x1**2 + 0.0882031106330191*x1*x2**3 + 0.57613800044707*x1*x2**2 + 1.10094685629552*x1*x2 - 0.848284586239664*x1 - 0.0194800210592762*x2**4 - 0.0597165971489956*x2**3 + 1.54035423277908*x2**2 + 1.85130068710827*x2 + 0.184481092678462
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:13
0-> accuracy1:100.0, accuracy2:70.78464031219482, accuracy3:100.0, loss:0.2396867722272873
10-> accuracy1:100.0, accuracy2:68.44741106033325, accuracy3:100.0, loss:0.23411430418491364
20-> accuracy1:100.0, accuracy2:67.50138998031616, accuracy3:100.0, loss:0.22970223426818848
30-> accuracy1:100.0, accuracy2:67.77963042259216, accuracy3:100.0, loss:0.22652922570705414
40-> accuracy1:100.0, accuracy2:69.72732543945312, accuracy3:100.0, loss:0.22244063019752502
50-> accuracy1:100.0, accuracy2:70.00556588172913, accuracy3:100.0, loss:0.21960671246051788
60-> accuracy1:100.0, accuracy2:70.61769366264343, accuracy3:100.0, loss:0.21787826716899872
70-> accuracy1:100.0, accuracy2:70.61769366264343, accuracy3:100.0, loss:0.21664854884147644
80-> accuracy1:100.0, accuracy2:70.78464031219482, accuracy3:100.0, loss:0.21574722230434418
90-> accuracy1:100.0, accuracy2:70.95158696174622, accuracy3:100.0, loss:0.21507267653942108
B(x) = 0.034121261403392*x1**4 + 0.123796928178294*x1**3*x2 - 0.0190195455518172*x1**3 + 0.127236341842736*x1**2*x2**2 + 0.48984248004134*x1**2*x2 + 2.33516756416118*x1**2 + 0.30499118938166*x1*x2**3 + 0.995822416989839*x1*x2**2 + 1.60779942468947*x1*x2 - 1.89164101829926*x1 - 0.0412596687096388*x2**4 + 0.143115557783932*x2**3 + 1.52620841561608*x2**2 + 1.14284807938411*x2 + 0.432460206645181
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:14
0-> accuracy1:100.0, accuracy2:67.26410388946533, accuracy3:100.0, loss:0.24151799082756042
10-> accuracy1:100.0, accuracy2:67.10595488548279, accuracy3:100.0, loss:0.2411685734987259
20-> accuracy1:100.0, accuracy2:67.10595488548279, accuracy3:100.0, loss:0.24100516736507416
30-> accuracy1:100.0, accuracy2:67.26410388946533, accuracy3:100.0, loss:0.24068795144557953
40-> accuracy1:100.0, accuracy2:67.31681823730469, accuracy3:100.0, loss:0.24031931161880493
50-> accuracy1:100.0, accuracy2:67.36953258514404, accuracy3:100.0, loss:0.24000291526317596
60-> accuracy1:100.0, accuracy2:67.58038997650146, accuracy3:100.0, loss:0.23978403210639954
70-> accuracy1:100.0, accuracy2:67.63310432434082, accuracy3:100.0, loss:0.23962046205997467
80-> accuracy1:100.0, accuracy2:67.68581867218018, accuracy3:100.0, loss:0.23945114016532898
90-> accuracy1:100.0, accuracy2:67.79124736785889, accuracy3:100.0, loss:0.23927736282348633
B(x) = 0.0164329373349603*x1**4 + 0.126180521565206*x1**3*x2 + 0.0604562806443749*x1**3 + 0.224280423846743*x1**2*x2**2 + 0.827996292528557*x1**2*x2 + 2.5789381493425*x1**2 + 0.40933013811646*x1*x2**3 + 1.53409898425376*x1*x2**2 + 1.86324702637696*x1*x2 - 2.19516424355698*x1 + 0.0093459545534485*x2**4 + 0.300342904177251*x2**3 + 1.30427558929139*x2**2 + 0.851867786790595*x2 + 0.508021672692241
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:15
0-> accuracy1:100.0, accuracy2:64.49674367904663, accuracy3:100.0, loss:0.2639760673046112
10-> accuracy1:100.0, accuracy2:64.49674367904663, accuracy3:100.0, loss:0.2639138102531433
20-> accuracy1:100.0, accuracy2:64.14622068405151, accuracy3:100.0, loss:0.2641525864601135
30-> accuracy1:100.0, accuracy2:64.39659595489502, accuracy3:100.0, loss:0.2639833092689514
40-> accuracy1:100.0, accuracy2:64.44666981697083, accuracy3:100.0, loss:0.263778418302536
50-> accuracy1:100.0, accuracy2:64.54681754112244, accuracy3:100.0, loss:0.26359912753105164
60-> accuracy1:100.0, accuracy2:64.49674367904663, accuracy3:100.0, loss:0.2634222209453583
70-> accuracy1:100.0, accuracy2:64.39659595489502, accuracy3:100.0, loss:0.26348385214805603
80-> accuracy1:100.0, accuracy2:64.54681754112244, accuracy3:100.0, loss:0.2632402777671814
90-> accuracy1:100.0, accuracy2:64.44666981697083, accuracy3:100.0, loss:0.2630389332771301
B(x) = 0.000922978647309931*x1**4 + 0.115954060076202*x1**3*x2 + 0.120804757374121*x1**3 + 0.227183672872298*x1**2*x2**2 + 1.02930817012426*x1**2*x2 + 2.62608277719322*x1**2 + 0.445900323707365*x1*x2**3 + 1.93329849922201*x1*x2**2 + 2.04061567558054*x1*x2 - 2.25890928079243*x1 + 0.066898062611153*x2**4 + 0.492909171225293*x2**3 + 1.21139599317583*x2**2 + 0.665525843788425*x2 + 0.509173015416492
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:16
0-> accuracy1:100.0, accuracy2:61.37338876724243, accuracy3:100.0, loss:0.2855070233345032
10-> accuracy1:100.0, accuracy2:61.27801537513733, accuracy3:100.0, loss:0.2853472828865051
20-> accuracy1:100.0, accuracy2:61.039578914642334, accuracy3:100.0, loss:0.28528156876564026
30-> accuracy1:100.0, accuracy2:60.94420552253723, accuracy3:100.0, loss:0.2852399945259094
40-> accuracy1:100.0, accuracy2:61.18264198303223, accuracy3:100.0, loss:0.28514233231544495
50-> accuracy1:100.0, accuracy2:61.27801537513733, accuracy3:100.0, loss:0.2849110960960388
60-> accuracy1:100.0, accuracy2:61.32570505142212, accuracy3:100.0, loss:0.2848352789878845
70-> accuracy1:100.0, accuracy2:61.23033165931702, accuracy3:100.0, loss:0.28469306230545044
80-> accuracy1:100.0, accuracy2:61.23033165931702, accuracy3:100.0, loss:0.2845449447631836
90-> accuracy1:100.0, accuracy2:61.039578914642334, accuracy3:100.0, loss:0.2847309708595276
B(x) = -0.0177239693814284*x1**4 + 0.0763913597189266*x1**3*x2 + 0.107095039654559*x1**3 + 0.134907840798163*x1**2*x2**2 + 1.12908445479923*x1**2*x2 + 2.7351324832034*x1**2 + 0.417121269058624*x1*x2**3 + 2.06145910850122*x1*x2**2 + 2.01958205573737*x1*x2 - 2.36362415982808*x1 + 0.0798445056378184*x2**4 + 0.525890753280615*x2**3 + 1.05436654609642*x2**2 + 0.503949949536755*x2 + 0.511029436220911
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:17
0-> accuracy1:100.0, accuracy2:58.48884582519531, accuracy3:100.0, loss:0.30435433983802795
10-> accuracy1:100.0, accuracy2:58.443331718444824, accuracy3:100.0, loss:0.30422577261924744
20-> accuracy1:100.0, accuracy2:58.21574926376343, accuracy3:100.0, loss:0.30424636602401733
30-> accuracy1:100.0, accuracy2:58.21574926376343, accuracy3:100.0, loss:0.30409836769104004
40-> accuracy1:100.0, accuracy2:58.079200983047485, accuracy3:100.0, loss:0.3041919469833374
50-> accuracy1:100.0, accuracy2:58.35229754447937, accuracy3:100.0, loss:0.3038116991519928
60-> accuracy1:100.0, accuracy2:58.124715089797974, accuracy3:100.0, loss:0.3035667836666107
70-> accuracy1:100.0, accuracy2:58.124715089797974, accuracy3:100.0, loss:0.30338048934936523
80-> accuracy1:100.0, accuracy2:59.03504490852356, accuracy3:100.0, loss:0.30581268668174744
90-> accuracy1:100.0, accuracy2:58.67091417312622, accuracy3:100.0, loss:0.30547112226486206
B(x) = -0.025463123585633*x1**4 + 0.0292827533725392*x1**3*x2 + 0.158846993339893*x1**3 + 0.0546177741032738*x1**2*x2**2 + 0.881732758726994*x1**2*x2 + 2.59609270569774*x1**2 + 0.300508072164209*x1*x2**3 + 1.76831145609143*x1*x2**2 + 2.03176497813431*x1*x2 - 2.41269508091755*x1 + 0.0617628024748436*x2**4 + 0.421432986286881*x2**3 + 0.79700908555566*x2**2 + 0.245316674489422*x2 + 0.517894652132513
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:18
0-> accuracy1:100.0, accuracy2:55.63778877258301, accuracy3:100.0, loss:0.32406085729599
10-> accuracy1:100.0, accuracy2:55.07183074951172, accuracy3:100.0, loss:0.32393649220466614
20-> accuracy1:100.0, accuracy2:54.98476028442383, accuracy3:100.0, loss:0.32373303174972534
30-> accuracy1:100.0, accuracy2:54.85416054725647, accuracy3:100.0, loss:0.32367902994155884
40-> accuracy1:100.0, accuracy2:55.02829551696777, accuracy3:100.0, loss:0.3232806324958801
50-> accuracy1:100.0, accuracy2:54.89768981933594, accuracy3:100.0, loss:0.3229163885116577
60-> accuracy1:100.0, accuracy2:54.63648438453674, accuracy3:100.0, loss:0.3227127194404602
70-> accuracy1:100.0, accuracy2:54.63648438453674, accuracy3:100.0, loss:0.32249611616134644
80-> accuracy1:100.0, accuracy2:54.54941391944885, accuracy3:100.0, loss:0.3222338557243347
90-> accuracy1:100.0, accuracy2:55.376577377319336, accuracy3:100.0, loss:0.3243122100830078
B(x) = -0.0290090561249106*x1**4 + 0.0158813427060134*x1**3*x2 + 0.133210382607395*x1**3 - 0.0165780540411009*x1**2*x2**2 + 0.745678321643112*x1**2*x2 + 2.61922656718658*x1**2 + 0.25007434152528*x1*x2**3 + 1.70605303543201*x1*x2**2 + 2.02488870959576*x1*x2 - 2.49938550774891*x1 + 0.0468177024569023*x2**4 + 0.337544722814228*x2**3 + 0.592356738667573*x2**2 + 0.0909432261687323*x2 + 0.501616863986841
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:19
0-> accuracy1:100.0, accuracy2:52.73258090019226, accuracy3:100.0, loss:0.3409249186515808
10-> accuracy1:100.0, accuracy2:52.48227119445801, accuracy3:100.0, loss:0.3406960368156433
20-> accuracy1:100.0, accuracy2:51.6478955745697, accuracy3:100.0, loss:0.340455025434494
30-> accuracy1:100.0, accuracy2:51.56445503234863, accuracy3:100.0, loss:0.3400452136993408
40-> accuracy1:100.0, accuracy2:51.23070478439331, accuracy3:100.0, loss:0.3396438956260681
50-> accuracy1:100.0, accuracy2:51.23070478439331, accuracy3:100.0, loss:0.3392844498157501
60-> accuracy1:100.0, accuracy2:51.188987493515015, accuracy3:100.0, loss:0.3389243483543396
70-> accuracy1:100.0, accuracy2:51.31414532661438, accuracy3:100.0, loss:0.33933836221694946
80-> accuracy1:100.0, accuracy2:51.898205280303955, accuracy3:100.0, loss:0.34028536081314087
90-> accuracy1:100.0, accuracy2:51.355862617492676, accuracy3:100.0, loss:0.34018874168395996
B(x) = -0.0295086430310218*x1**4 + 0.00259884774344884*x1**3*x2 + 0.0353980016049023*x1**3 - 0.10085484072174*x1**2*x2**2 + 0.573803895554974*x1**2*x2 + 2.63285483352493*x1**2 + 0.201360485712821*x1*x2**3 + 1.58795376568857*x1*x2**2 + 1.99777649592573*x1*x2 - 2.48183489364167*x1 + 0.0299755790784327*x2**4 + 0.219189977643542*x2**3 + 0.298554174318613*x2**2 - 0.150217263116543*x2 + 0.451247763567646
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:20
0-> accuracy1:100.0, accuracy2:48.65838885307312, accuracy3:100.0, loss:0.35498666763305664
10-> accuracy1:100.0, accuracy2:47.8574275970459, accuracy3:100.0, loss:0.354498952627182
20-> accuracy1:100.0, accuracy2:46.575891971588135, accuracy3:100.0, loss:0.3540264368057251
30-> accuracy1:100.0, accuracy2:46.21545970439911, accuracy3:100.0, loss:0.35331016778945923
40-> accuracy1:100.0, accuracy2:46.816179156303406, accuracy3:100.0, loss:0.35419219732284546
50-> accuracy1:100.0, accuracy2:46.93632423877716, accuracy3:100.0, loss:0.35433435440063477
60-> accuracy1:100.0, accuracy2:45.89507281780243, accuracy3:100.0, loss:0.3540584444999695
70-> accuracy1:100.0, accuracy2:45.17420828342438, accuracy3:100.0, loss:0.3536170721054077
80-> accuracy1:100.0, accuracy2:44.97396945953369, accuracy3:100.0, loss:0.35301297903060913
90-> accuracy1:100.0, accuracy2:44.65358555316925, accuracy3:100.0, loss:0.35231974720954895
B(x) = -0.0105444591904748*x1**4 - 0.0471798773053861*x1**3*x2 - 0.324879039818105*x1**3 - 0.271434378861589*x1**2*x2**2 + 0.421056124931015*x1**2*x2 + 3.07234504757373*x1**2 + 0.234934451133344*x1*x2**3 + 1.92089617022869*x1*x2**2 + 2.28873790726952*x1*x2 - 2.58144160768607*x1 + 0.033336416714925*x2**4 + 0.222225200377668*x2**3 + 0.180796794668276*x2**2 - 0.31597298695518*x2 + 0.378524866250751
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
Failed
Elapsed Time: 111.92079985700548
