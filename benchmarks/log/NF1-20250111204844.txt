{'batch_size': 800, 'lr': np.float64(0.07999999999999999), 'loss_weight_continuous': (1, 1, 1), 'R_b': 0.4, 'margin': 0.4, 'DEG_continuous': [2, 4, 4, 2], 'learning_loops': 100, 'max_iter': 20, 'err': 0.02677454477719443}

Mosek can be used normally.
iter:1
0-> accuracy1:0.0, accuracy2:12.749999761581421, accuracy3:0.0, loss:1.2456554174423218
10-> accuracy1:100.0, accuracy2:92.75000095367432, accuracy3:100.0, loss:0.07160582393407822
20-> accuracy1:100.0, accuracy2:98.37499856948853, accuracy3:100.0, loss:0.0025346106849610806
30-> accuracy1:100.0, accuracy2:99.00000095367432, accuracy3:100.0, loss:0.0001329192891716957
40-> accuracy1:100.0, accuracy2:99.25000071525574, accuracy3:100.0, loss:-0.0050431592389941216
50-> accuracy1:100.0, accuracy2:99.37499761581421, accuracy3:100.0, loss:-0.006480556447058916
60-> accuracy1:100.0, accuracy2:99.12499785423279, accuracy3:100.0, loss:-0.00890000443905592
70-> accuracy1:100.0, accuracy2:99.25000071525574, accuracy3:100.0, loss:-0.010915219783782959
80-> accuracy1:100.0, accuracy2:99.25000071525574, accuracy3:100.0, loss:-0.011988555081188679
90-> accuracy1:99.87499713897705, accuracy2:99.62499737739563, accuracy3:100.0, loss:-0.01209250558167696
B(x) = 2.89719077608694*x1**4 + 8.56197439968205*x1**3*x2 + 9.40133073462121*x1**3 + 6.53293896028737*x1**2*x2**2 + 16.6286290780219*x1**2*x2 + 19.4718909282522*x1**2 + 4.93329061938432*x1*x2**3 + 23.256745371094*x1*x2**2 + 26.5810778305736*x1*x2 - 10.2376928430028*x1 + 1.40166977725639*x2**4 + 2.87908500615513*x2**3 + 11.0505053173975*x2**2 + 9.00486682635805*x2 - 2.14004807879125
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:2
0-> accuracy1:100.0, accuracy2:87.88889050483704, accuracy3:100.0, loss:0.25732722878456116
10-> accuracy1:100.0, accuracy2:98.33333492279053, accuracy3:100.0, loss:0.05740884318947792
20-> accuracy1:100.0, accuracy2:97.66666889190674, accuracy3:100.0, loss:0.05190654844045639
30-> accuracy1:100.0, accuracy2:99.33333396911621, accuracy3:96.12500071525574, loss:0.01707739196717739
40-> accuracy1:93.25000047683716, accuracy2:95.55555582046509, accuracy3:100.0, loss:2.1637072563171387
50-> accuracy1:100.0, accuracy2:87.66666650772095, accuracy3:100.0, loss:4.553034782409668
60-> accuracy1:100.0, accuracy2:96.44444584846497, accuracy3:100.0, loss:2.090996026992798
70-> accuracy1:100.0, accuracy2:97.66666889190674, accuracy3:100.0, loss:0.4835219383239746
80-> accuracy1:100.0, accuracy2:99.11110997200012, accuracy3:100.0, loss:0.1283380687236786
90-> accuracy1:100.0, accuracy2:99.33333396911621, accuracy3:100.0, loss:0.045022476464509964
B(x) = 47.6275512773594*x1**4 + 44.8031057960868*x1**3*x2 + 100.212184071097*x1**3 + 102.298358288817*x1**2*x2**2 + 54.0037690151067*x1**2*x2 + 127.058527914602*x1**2 + 49.6953270356523*x1*x2**3 + 128.917916055796*x1*x2**2 + 352.724821321206*x1*x2 - 152.873117538894*x1 + 26.7657607986883*x2**4 - 65.8939130352973*x2**3 + 175.40215849481*x2**2 + 276.773737803766*x2 + 58.7546874386799
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:3
0-> accuracy1:100.0, accuracy2:85.10000109672546, accuracy3:100.0, loss:14.221338272094727
10-> accuracy1:100.0, accuracy2:89.60000276565552, accuracy3:83.49999785423279, loss:7.463916778564453
20-> accuracy1:100.0, accuracy2:82.59999752044678, accuracy3:100.0, loss:1.623517632484436
30-> accuracy1:93.99999976158142, accuracy2:92.29999780654907, accuracy3:100.0, loss:0.6575419902801514
40-> accuracy1:100.0, accuracy2:96.60000205039978, accuracy3:100.0, loss:0.04837261885404587
50-> accuracy1:95.37500143051147, accuracy2:94.30000185966492, accuracy3:100.0, loss:0.10819000750780106
60-> accuracy1:97.50000238418579, accuracy2:95.3000009059906, accuracy3:100.0, loss:0.05769826099276543
70-> accuracy1:99.00000095367432, accuracy2:97.00000286102295, accuracy3:100.0, loss:0.015976320952177048
80-> accuracy1:99.75000023841858, accuracy2:98.00000190734863, accuracy3:100.0, loss:0.0008309343829751015
90-> accuracy1:100.0, accuracy2:98.7999975681305, accuracy3:100.0, loss:-0.0038942317478358746
B(x) = 4.10568655609984*x1**4 + 19.0600539745382*x1**3*x2 + 15.4735936027102*x1**3 + 36.7442532798619*x1**2*x2**2 - 6.35434514045892*x1**2*x2 + 49.0653673189616*x1**2 + 16.1998493709706*x1*x2**3 - 0.561268229797562*x1*x2**2 + 110.918267650764*x1*x2 - 41.1248559390455*x1 + 1.88231089954062*x2**4 + 4.02833229880161*x2**3 + 41.2803597585709*x2**2 - 16.0020274115674*x2 - 0.110130785919761
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:4
0-> accuracy1:100.0, accuracy2:89.90908861160278, accuracy3:100.0, loss:0.24477937817573547
10-> accuracy1:97.00000286102295, accuracy2:89.18181657791138, accuracy3:100.0, loss:0.16891348361968994
20-> accuracy1:98.62499833106995, accuracy2:86.4545464515686, accuracy3:100.0, loss:0.13623863458633423
30-> accuracy1:100.0, accuracy2:85.90909242630005, accuracy3:100.0, loss:0.12718047201633453
40-> accuracy1:98.1249988079071, accuracy2:88.63636255264282, accuracy3:100.0, loss:0.1022469699382782
50-> accuracy1:98.37499856948853, accuracy2:88.81818056106567, accuracy3:100.0, loss:0.08698578178882599
60-> accuracy1:98.25000166893005, accuracy2:87.90909051895142, accuracy3:100.0, loss:0.08484966307878494
70-> accuracy1:96.24999761581421, accuracy2:87.99999952316284, accuracy3:100.0, loss:0.08513027429580688
80-> accuracy1:97.50000238418579, accuracy2:87.81818151473999, accuracy3:100.0, loss:0.0803007036447525
90-> accuracy1:100.0, accuracy2:87.27272748947144, accuracy3:100.0, loss:0.08315814286470413
B(x) = 1.09567374282685*x1**4 + 11.5191863438127*x1**3*x2 + 4.32690437391325*x1**3 + 20.2448604789155*x1**2*x2**2 + 1.26857063663234*x1**2*x2 + 28.9872982737726*x1**2 + 9.7469907363291*x1*x2**3 + 4.85169007655981*x1*x2**2 + 57.6328241819637*x1*x2 - 9.72800541073977*x1 + 0.810241651945781*x2**4 + 3.09651627933541*x2**3 + 25.4240529217353*x2**2 - 3.14401818046156*x2 - 0.750523779328746
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 91 counterexamples!
iter:5
0-> accuracy1:99.00000095367432, accuracy2:81.02434873580933, accuracy3:100.0, loss:0.13507457077503204
10-> accuracy1:95.49999833106995, accuracy2:81.27623796463013, accuracy3:100.0, loss:0.1262228786945343
20-> accuracy1:99.87499713897705, accuracy2:79.26112413406372, accuracy3:100.0, loss:0.12660588324069977
30-> accuracy1:94.87500190734863, accuracy2:80.26868104934692, accuracy3:100.0, loss:0.12859439849853516
40-> accuracy1:99.25000071525574, accuracy2:78.50545644760132, accuracy3:100.0, loss:0.12738025188446045
50-> accuracy1:100.0, accuracy2:78.84131073951721, accuracy3:99.50000047683716, loss:0.1273449808359146
60-> accuracy1:91.25000238418579, accuracy2:80.60453534126282, accuracy3:100.0, loss:0.13655203580856323
70-> accuracy1:99.50000047683716, accuracy2:78.58942151069641, accuracy3:100.0, loss:0.12470532953739166
80-> accuracy1:98.37499856948853, accuracy2:79.34508919715881, accuracy3:100.0, loss:0.12127301096916199
90-> accuracy1:99.12499785423279, accuracy2:78.33753228187561, accuracy3:100.0, loss:0.12158730626106262
B(x) = 0.454886861753733*x1**4 + 6.9081472214799*x1**3*x2 + 1.06633566777705*x1**3 + 12.6370438063593*x1**2*x2**2 - 0.171693438126794*x1**2*x2 + 18.6810608980527*x1**2 + 5.4720147001321*x1*x2**3 + 3.79576532971715*x1*x2**2 + 36.4131182214607*x1*x2 - 5.59250506924613*x1 + 0.324779961958045*x2**4 + 2.33966287624388*x2**3 + 15.4657420108897*x2**2 - 1.69592050646595*x2 - 0.369941237720656
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 86 counterexamples!
iter:6
0-> accuracy1:98.87499809265137, accuracy2:73.53171706199646, accuracy3:100.0, loss:0.15468089282512665
10-> accuracy1:96.875, accuracy2:73.21848273277283, accuracy3:100.0, loss:0.15560322999954224
20-> accuracy1:99.12499785423279, accuracy2:72.59201407432556, accuracy3:100.0, loss:0.15377499163150787
30-> accuracy1:99.62499737739563, accuracy2:71.9655454158783, accuracy3:100.0, loss:0.1539878249168396
40-> accuracy1:99.12499785423279, accuracy2:71.49569392204285, accuracy3:100.0, loss:0.15429814159870148
50-> accuracy1:99.75000023841858, accuracy2:71.1041510105133, accuracy3:100.0, loss:0.1543610394001007
60-> accuracy1:99.50000047683716, accuracy2:71.18245959281921, accuracy3:100.0, loss:0.15463730692863464
70-> accuracy1:99.50000047683716, accuracy2:71.0258424282074, accuracy3:100.0, loss:0.15476655960083008
80-> accuracy1:99.50000047683716, accuracy2:71.0258424282074, accuracy3:100.0, loss:0.15507344901561737
90-> accuracy1:99.50000047683716, accuracy2:70.94753384590149, accuracy3:100.0, loss:0.15534888207912445
B(x) = 0.138463009331282*x1**4 + 4.41621679794618*x1**3*x2 + 0.0212669969435666*x1**3 + 8.46238939365764*x1**2*x2**2 - 0.923396123943839*x1**2*x2 + 13.332959072455*x1**2 + 3.389974616205*x1*x2**3 + 3.24662882568221*x1*x2**2 + 25.9754944617895*x1*x2 - 4.26031611783455*x1 + 0.145320922457241*x2**4 + 1.99959237346943*x2**3 + 10.874580513099*x2**2 - 1.19159954312543*x2 - 0.197838175042883
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 85 counterexamples!
iter:7
0-> accuracy1:99.62499737739563, accuracy2:66.5198266506195, accuracy3:100.0, loss:0.1814473271369934
10-> accuracy1:100.0, accuracy2:66.00587368011475, accuracy3:100.0, loss:0.1814766228199005
20-> accuracy1:100.0, accuracy2:65.78561067581177, accuracy3:100.0, loss:0.18125306069850922
30-> accuracy1:100.0, accuracy2:65.56534767150879, accuracy3:100.0, loss:0.18132975697517395
40-> accuracy1:100.0, accuracy2:65.34507870674133, accuracy3:100.0, loss:0.18099278211593628
50-> accuracy1:100.0, accuracy2:65.05139470100403, accuracy3:100.0, loss:0.18080881237983704
60-> accuracy1:100.0, accuracy2:64.53744769096375, accuracy3:100.0, loss:0.18050658702850342
70-> accuracy1:100.0, accuracy2:64.24375772476196, accuracy3:100.0, loss:0.17998403310775757
80-> accuracy1:100.0, accuracy2:64.39059972763062, accuracy3:100.0, loss:0.1792915165424347
90-> accuracy1:100.0, accuracy2:64.31717872619629, accuracy3:100.0, loss:0.17816279828548431
B(x) = 0.0147707626038655*x1**4 + 2.80343770530703*x1**3*x2 - 0.247633115732229*x1**3 + 5.77697184408017*x1**2*x2**2 - 1.64554247489044*x1**2*x2 + 9.75277290435908*x1**2 + 2.30544834239126*x1*x2**3 + 2.23082267743178*x1*x2**2 + 18.626392238433*x1*x2 - 3.42179991573577*x1 + 0.198406114428407*x2**4 + 1.53977644300229*x2**3 + 7.36423570385337*x2**2 - 0.884472299280861*x2 + 0.0477624200656827
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 85 counterexamples!
iter:8
0-> accuracy1:100.0, accuracy2:60.40083169937134, accuracy3:100.0, loss:0.1972002536058426
10-> accuracy1:100.0, accuracy2:60.40083169937134, accuracy3:100.0, loss:0.19400455057621002
20-> accuracy1:100.0, accuracy2:60.40083169937134, accuracy3:100.0, loss:0.18952803313732147
30-> accuracy1:100.0, accuracy2:60.953694581985474, accuracy3:100.0, loss:0.1832023411989212
40-> accuracy1:100.0, accuracy2:61.782997846603394, accuracy3:100.0, loss:0.17295876145362854
50-> accuracy1:100.0, accuracy2:63.99447321891785, accuracy3:100.0, loss:0.15562346577644348
60-> accuracy1:100.0, accuracy2:74.36074614524841, accuracy3:100.0, loss:0.12432993948459625
70-> accuracy1:100.0, accuracy2:92.39806532859802, accuracy3:100.0, loss:0.07815348356962204
80-> accuracy1:100.0, accuracy2:92.46717095375061, accuracy3:100.0, loss:0.07117487490177155
90-> accuracy1:100.0, accuracy2:92.60538816452026, accuracy3:100.0, loss:0.0644751712679863
B(x) = -0.059521093362354*x1**4 + 1.30939889603667*x1**3*x2 - 0.715162850842109*x1**3 + 3.84184136143384*x1**2*x2**2 - 3.39581869848795*x1**2*x2 + 5.10678605433018*x1**2 + 1.52354470611068*x1*x2**3 + 1.88385588306051*x1*x2**2 + 11.2907579796297*x1*x2 - 2.85869561615038*x1 + 0.409915526549091*x2**4 + 1.06469136471015*x2**3 + 3.56592283308175*x2**2 + 0.204496984669197*x2 + 1.02454551643539
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:9
0-> accuracy1:100.0, accuracy2:86.6839051246643, accuracy3:100.0, loss:0.12808142602443695
10-> accuracy1:100.0, accuracy2:86.55462265014648, accuracy3:100.0, loss:0.12122911959886551
20-> accuracy1:100.0, accuracy2:86.55462265014648, accuracy3:100.0, loss:0.11734093725681305
30-> accuracy1:100.0, accuracy2:86.55462265014648, accuracy3:100.0, loss:0.11472869664430618
40-> accuracy1:100.0, accuracy2:86.42534017562866, accuracy3:100.0, loss:0.11354425549507141
50-> accuracy1:100.0, accuracy2:86.6192638874054, accuracy3:100.0, loss:0.12569841742515564
60-> accuracy1:100.0, accuracy2:86.16677522659302, accuracy3:100.0, loss:0.12114546447992325
70-> accuracy1:100.0, accuracy2:86.42534017562866, accuracy3:100.0, loss:0.11155995726585388
80-> accuracy1:100.0, accuracy2:86.36069893836975, accuracy3:100.0, loss:0.10759970545768738
90-> accuracy1:100.0, accuracy2:86.36069893836975, accuracy3:100.0, loss:0.10604015737771988
B(x) = 0.0233506060639309*x1**4 + 0.839562745439686*x1**3*x2 - 0.265657023471055*x1**3 + 1.75614273899619*x1**2*x2**2 - 1.17430140462051*x1**2*x2 + 2.08939361549359*x1**2 + 1.0965910563*x1*x2**3 + 1.6883971393013*x1*x2**2 + 4.48205762418818*x1*x2 - 1.39676154172392*x1 + 0.286534764495558*x2**4 + 0.797950189811274*x2**3 + 2.19200378010526*x2**2 + 1.18131817591093*x2 + 0.690335546789054
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:10
0-> accuracy1:100.0, accuracy2:81.117182970047, accuracy3:100.0, loss:0.15385928750038147
10-> accuracy1:100.0, accuracy2:81.117182970047, accuracy3:100.0, loss:0.1435263454914093
20-> accuracy1:100.0, accuracy2:81.84577822685242, accuracy3:100.0, loss:0.13391512632369995
30-> accuracy1:100.0, accuracy2:83.97085666656494, accuracy3:100.0, loss:0.12573008239269257
40-> accuracy1:100.0, accuracy2:84.63873863220215, accuracy3:100.0, loss:0.1201695054769516
50-> accuracy1:100.0, accuracy2:85.18518805503845, accuracy3:100.0, loss:0.11750221997499466
60-> accuracy1:100.0, accuracy2:85.54948568344116, accuracy3:100.0, loss:0.11621557176113129
70-> accuracy1:100.0, accuracy2:85.73163151741028, accuracy3:100.0, loss:0.11536943912506104
80-> accuracy1:100.0, accuracy2:85.73163151741028, accuracy3:100.0, loss:0.11470554769039154
90-> accuracy1:100.0, accuracy2:85.73163151741028, accuracy3:100.0, loss:0.11410731077194214
B(x) = 0.187436867764661*x1**4 + 0.718049332949206*x1**3*x2 + 0.807150743903257*x1**3 + 1.03939328952625*x1**2*x2**2 + 0.344178522052588*x1**2*x2 + 2.27885157174002*x1**2 + 0.706652148342493*x1*x2**3 + 2.03362563307775*x1*x2**2 + 3.93883444737422*x1*x2 - 2.16954717331898*x1 + 0.148685398176736*x2**4 + 0.932107221325296*x2**3 + 2.50200289395372*x2**2 + 0.971233765952138*x2 + 0.550762912519218
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:11
0-> accuracy1:100.0, accuracy2:80.76702952384949, accuracy3:100.0, loss:0.15564227104187012
10-> accuracy1:100.0, accuracy2:80.30909895896912, accuracy3:100.0, loss:0.15501950681209564
20-> accuracy1:100.0, accuracy2:80.30909895896912, accuracy3:100.0, loss:0.1545160412788391
30-> accuracy1:100.0, accuracy2:80.30909895896912, accuracy3:100.0, loss:0.1542874425649643
40-> accuracy1:100.0, accuracy2:80.30909895896912, accuracy3:100.0, loss:0.1540210098028183
50-> accuracy1:100.0, accuracy2:80.30909895896912, accuracy3:100.0, loss:0.15369585156440735
60-> accuracy1:100.0, accuracy2:80.25186061859131, accuracy3:100.0, loss:0.15336041152477264
70-> accuracy1:100.0, accuracy2:80.25186061859131, accuracy3:100.0, loss:0.15306542813777924
80-> accuracy1:100.0, accuracy2:80.25186061859131, accuracy3:100.0, loss:0.15278193354606628
90-> accuracy1:100.0, accuracy2:80.1946222782135, accuracy3:100.0, loss:0.1525600701570511
B(x) = 0.16357245420059*x1**4 + 0.608583383604571*x1**3*x2 + 0.843987570521693*x1**3 + 0.658234269443441*x1**2*x2**2 + 0.688304885438474*x1**2*x2 + 1.81286724094577*x1**2 + 0.540783774172347*x1*x2**3 + 1.76743073718467*x1*x2**2 + 2.5833711452922*x1*x2 - 1.9457979687513*x1 + 0.136837168523928*x2**4 + 0.849821735468358*x2**3 + 2.11307929840261*x2**2 + 1.10639451519202*x2 + 0.525680514837961
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:12
0-> accuracy1:100.0, accuracy2:75.90687870979309, accuracy3:100.0, loss:0.18657399713993073
10-> accuracy1:100.0, accuracy2:75.31131505966187, accuracy3:100.0, loss:0.1862233579158783
20-> accuracy1:100.0, accuracy2:75.31131505966187, accuracy3:100.0, loss:0.18595269322395325
30-> accuracy1:100.0, accuracy2:75.25717616081238, accuracy3:100.0, loss:0.18581993877887726
40-> accuracy1:100.0, accuracy2:75.25717616081238, accuracy3:100.0, loss:0.1856665164232254
50-> accuracy1:100.0, accuracy2:75.20303130149841, accuracy3:100.0, loss:0.1854659616947174
60-> accuracy1:100.0, accuracy2:75.20303130149841, accuracy3:100.0, loss:0.18529368937015533
70-> accuracy1:100.0, accuracy2:75.14889240264893, accuracy3:100.0, loss:0.18514874577522278
80-> accuracy1:100.0, accuracy2:75.14889240264893, accuracy3:100.0, loss:0.18500098586082458
90-> accuracy1:100.0, accuracy2:75.09474754333496, accuracy3:100.0, loss:0.18486188352108002
B(x) = 0.14094467227764*x1**4 + 0.539727394521971*x1**3*x2 + 0.830614646628278*x1**3 + 0.442618091515512*x1**2*x2**2 + 0.791846174393677*x1**2*x2 + 1.49890855184898*x1**2 + 0.414482754089192*x1*x2**3 + 1.42975201820782*x1*x2**2 + 1.62837949477662*x1*x2 - 1.84330903450072*x1 + 0.123870054666159*x2**4 + 0.725145633042479*x2**3 + 1.71992996597162*x2**2 + 1.0995672469349*x2 + 0.511738947876301
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:13
0-> accuracy1:100.0, accuracy2:71.23780250549316, accuracy3:100.0, loss:0.21397437155246735
10-> accuracy1:100.0, accuracy2:70.87827324867249, accuracy3:100.0, loss:0.21387222409248352
20-> accuracy1:100.0, accuracy2:70.92963457107544, accuracy3:100.0, loss:0.2138214260339737
30-> accuracy1:100.0, accuracy2:70.92963457107544, accuracy3:100.0, loss:0.21379879117012024
40-> accuracy1:100.0, accuracy2:70.92963457107544, accuracy3:100.0, loss:0.2137584090232849
50-> accuracy1:100.0, accuracy2:70.87827324867249, accuracy3:100.0, loss:0.213674858212471
60-> accuracy1:100.0, accuracy2:70.82691192626953, accuracy3:100.0, loss:0.21360090374946594
70-> accuracy1:100.0, accuracy2:70.82691192626953, accuracy3:100.0, loss:0.21353267133235931
80-> accuracy1:100.0, accuracy2:70.82691192626953, accuracy3:100.0, loss:0.21345984935760498
90-> accuracy1:100.0, accuracy2:70.82691192626953, accuracy3:100.0, loss:0.21337611973285675
B(x) = 0.130662138391844*x1**4 + 0.519115668274161*x1**3*x2 + 0.85688159479053*x1**3 + 0.318568049375528*x1**2*x2**2 + 0.820805194768378*x1**2*x2 + 1.27611389942532*x1**2 + 0.328716401600652*x1*x2**3 + 1.21821373536605*x1*x2**2 + 1.09988026763394*x1*x2 - 1.76993973714967*x1 + 0.100765353173085*x2**4 + 0.595058817419792*x2**3 + 1.44009338009303*x2**2 + 1.07202386537659*x2 + 0.499265038203181
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:14
0-> accuracy1:100.0, accuracy2:67.36688017845154, accuracy3:100.0, loss:0.23929031193256378
10-> accuracy1:100.0, accuracy2:67.1714723110199, accuracy3:100.0, loss:0.23922251164913177
20-> accuracy1:100.0, accuracy2:67.12262034416199, accuracy3:100.0, loss:0.23925526440143585
30-> accuracy1:100.0, accuracy2:67.12262034416199, accuracy3:100.0, loss:0.23923641443252563
40-> accuracy1:100.0, accuracy2:67.07376837730408, accuracy3:100.0, loss:0.23925095796585083
50-> accuracy1:100.0, accuracy2:67.12262034416199, accuracy3:100.0, loss:0.2392236739397049
60-> accuracy1:100.0, accuracy2:67.07376837730408, accuracy3:100.0, loss:0.23919863998889923
70-> accuracy1:100.0, accuracy2:67.07376837730408, accuracy3:100.0, loss:0.2391887754201889
80-> accuracy1:100.0, accuracy2:67.07376837730408, accuracy3:100.0, loss:0.23922570049762726
90-> accuracy1:100.0, accuracy2:66.87836050987244, accuracy3:100.0, loss:0.2392556369304657
B(x) = 0.118155231000051*x1**4 + 0.48909269808279*x1**3*x2 + 0.838002104509177*x1**3 + 0.232117055590799*x1**2*x2**2 + 0.759239975186732*x1**2*x2 + 1.1131072630481*x1**2 + 0.268354144668126*x1*x2**3 + 1.03191464132047*x1*x2**2 + 0.770030211627019*x1*x2 - 1.70370691790903*x1 + 0.0844180799542951*x2**4 + 0.484969687368766*x2**3 + 1.23948052009928*x2**2 + 1.05529478481143*x2 + 0.494216122515515
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:15
0-> accuracy1:100.0, accuracy2:63.763391971588135, accuracy3:100.0, loss:0.2620527446269989
10-> accuracy1:100.0, accuracy2:63.43735456466675, accuracy3:100.0, loss:0.2621220052242279
20-> accuracy1:100.0, accuracy2:63.43735456466675, accuracy3:100.0, loss:0.262209951877594
30-> accuracy1:100.0, accuracy2:63.43735456466675, accuracy3:100.0, loss:0.26228588819503784
40-> accuracy1:100.0, accuracy2:63.15789222717285, accuracy3:100.0, loss:0.2623451352119446
50-> accuracy1:100.0, accuracy2:63.06474208831787, accuracy3:100.0, loss:0.2623853385448456
60-> accuracy1:100.0, accuracy2:63.01816701889038, accuracy3:100.0, loss:0.26241183280944824
70-> accuracy1:100.0, accuracy2:63.01816701889038, accuracy3:100.0, loss:0.2624656856060028
80-> accuracy1:100.0, accuracy2:63.01816701889038, accuracy3:100.0, loss:0.26249587535858154
90-> accuracy1:100.0, accuracy2:63.01816701889038, accuracy3:100.0, loss:0.26253876090049744
B(x) = 0.107239585252034*x1**4 + 0.441389988748115*x1**3*x2 + 0.773427124055761*x1**3 + 0.163550085121814*x1**2*x2**2 + 0.645008689268662*x1**2*x2 + 1.00954298259744*x1**2 + 0.223019580784272*x1*x2**3 + 0.889207117230805*x1*x2**2 + 0.574270692641632*x1*x2 - 1.64964457897215*x1 + 0.0702521723417795*x2**4 + 0.405743870362773*x2**3 + 1.10884950164242*x2**2 + 1.05651561952164*x2 + 0.491961024755295
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:16
0-> accuracy1:100.0, accuracy2:60.21361947059631, accuracy3:100.0, loss:0.2829694449901581
10-> accuracy1:100.0, accuracy2:59.90208983421326, accuracy3:100.0, loss:0.2830379009246826
20-> accuracy1:100.0, accuracy2:59.76858139038086, accuracy3:100.0, loss:0.2831355929374695
30-> accuracy1:100.0, accuracy2:59.76858139038086, accuracy3:100.0, loss:0.28320232033729553
40-> accuracy1:100.0, accuracy2:59.635066986083984, accuracy3:100.0, loss:0.28327199816703796
50-> accuracy1:100.0, accuracy2:59.4570517539978, accuracy3:100.0, loss:0.2833145260810852
60-> accuracy1:100.0, accuracy2:59.36804413795471, accuracy3:100.0, loss:0.2833608090877533
70-> accuracy1:100.0, accuracy2:59.323543310165405, accuracy3:100.0, loss:0.2834017276763916
80-> accuracy1:100.0, accuracy2:59.323543310165405, accuracy3:100.0, loss:0.2834356725215912
90-> accuracy1:100.0, accuracy2:59.27903652191162, accuracy3:100.0, loss:0.2834668457508087
B(x) = 0.0917240502994199*x1**4 + 0.38815598173667*x1**3*x2 + 0.683318128343862*x1**3 + 0.103508878519393*x1**2*x2**2 + 0.515207946849384*x1**2*x2 + 0.891464895901376*x1**2 + 0.190846023951263*x1*x2**3 + 0.777403645464631*x1*x2**2 + 0.418347465280357*x1*x2 - 1.55329263367028*x1 + 0.0610616954600901*x2**4 + 0.354301016602929*x2**3 + 1.02620068229189*x2**2 + 1.07355992045722*x2 + 0.478022972846464
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:17
0-> accuracy1:100.0, accuracy2:56.7533016204834, accuracy3:100.0, loss:0.30245643854141235
10-> accuracy1:100.0, accuracy2:56.582874059677124, accuracy3:100.0, loss:0.302509605884552
20-> accuracy1:100.0, accuracy2:56.5402626991272, accuracy3:100.0, loss:0.3025909662246704
30-> accuracy1:100.0, accuracy2:56.4550518989563, accuracy3:100.0, loss:0.30261218547821045
40-> accuracy1:100.0, accuracy2:56.49765729904175, accuracy3:100.0, loss:0.3026343584060669
50-> accuracy1:100.0, accuracy2:56.4550518989563, accuracy3:100.0, loss:0.30265843868255615
60-> accuracy1:100.0, accuracy2:56.4550518989563, accuracy3:100.0, loss:0.30268293619155884
70-> accuracy1:100.0, accuracy2:56.4550518989563, accuracy3:100.0, loss:0.3027156889438629
80-> accuracy1:100.0, accuracy2:56.49765729904175, accuracy3:100.0, loss:0.302742600440979
90-> accuracy1:100.0, accuracy2:56.4550518989563, accuracy3:100.0, loss:0.3027730882167816
B(x) = 0.0758371039634217*x1**4 + 0.345597436836615*x1**3*x2 + 0.606115066472683*x1**3 + 0.0445295170692199*x1**2*x2**2 + 0.393728178114677*x1**2*x2 + 0.809976877416076*x1**2 + 0.162800863252768*x1*x2**3 + 0.685147851591803*x1*x2**2 + 0.299124209041644*x1*x2 - 1.47697419901279*x1 + 0.0529091889497197*x2**4 + 0.307950511367398*x2**3 + 0.968724773198638*x2**2 + 1.09920939803747*x2 + 0.463709096047486
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:18
0-> accuracy1:100.0, accuracy2:54.147934913635254, accuracy3:100.0, loss:0.3204682469367981
10-> accuracy1:100.0, accuracy2:54.147934913635254, accuracy3:100.0, loss:0.3204919695854187
20-> accuracy1:100.0, accuracy2:54.147934913635254, accuracy3:100.0, loss:0.32055169343948364
30-> accuracy1:100.0, accuracy2:54.107069969177246, accuracy3:100.0, loss:0.3206121325492859
40-> accuracy1:100.0, accuracy2:54.06620502471924, accuracy3:100.0, loss:0.3206813335418701
50-> accuracy1:100.0, accuracy2:54.02534008026123, accuracy3:100.0, loss:0.32074886560440063
60-> accuracy1:100.0, accuracy2:54.02534008026123, accuracy3:100.0, loss:0.3207963705062866
70-> accuracy1:100.0, accuracy2:53.984469175338745, accuracy3:100.0, loss:0.32084402441978455
80-> accuracy1:100.0, accuracy2:53.984469175338745, accuracy3:100.0, loss:0.32087472081184387
90-> accuracy1:100.0, accuracy2:54.02534008026123, accuracy3:100.0, loss:0.3208999037742615
B(x) = 0.059716672101403*x1**4 + 0.293039176673145*x1**3*x2 + 0.520268939122571*x1**3 + 0.00976663224376124*x1**2*x2**2 + 0.312084468534047*x1**2*x2 + 0.715826704323635*x1**2 + 0.131180841795177*x1*x2**3 + 0.594715588983997*x1*x2**2 + 0.247341917841929*x1*x2 - 1.32424014328481*x1 + 0.0436653963482788*x2**4 + 0.259547322611078*x2**3 + 0.904443396037532*x2**2 + 1.12281732311725*x2 + 0.445886250738007
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:19
0-> accuracy1:100.0, accuracy2:51.90420150756836, accuracy3:100.0, loss:0.33657315373420715
10-> accuracy1:100.0, accuracy2:51.86493992805481, accuracy3:100.0, loss:0.33658668398857117
20-> accuracy1:100.0, accuracy2:51.78641676902771, accuracy3:100.0, loss:0.33662399649620056
30-> accuracy1:100.0, accuracy2:51.78641676902771, accuracy3:100.0, loss:0.3366512358188629
40-> accuracy1:100.0, accuracy2:51.78641676902771, accuracy3:100.0, loss:0.3366878926753998
50-> accuracy1:100.0, accuracy2:51.78641676902771, accuracy3:100.0, loss:0.3367195725440979
60-> accuracy1:100.0, accuracy2:51.82567834854126, accuracy3:100.0, loss:0.33674418926239014
70-> accuracy1:100.0, accuracy2:51.82567834854126, accuracy3:100.0, loss:0.3367655277252197
80-> accuracy1:100.0, accuracy2:51.82567834854126, accuracy3:100.0, loss:0.3367811143398285
90-> accuracy1:100.0, accuracy2:51.82567834854126, accuracy3:100.0, loss:0.3367951810359955
B(x) = 0.0457010558858716*x1**4 + 0.254193648547285*x1**3*x2 + 0.451896892943994*x1**3 - 0.0234580211125331*x1**2*x2**2 + 0.243347555980596*x1**2*x2 + 0.661137470510007*x1**2 + 0.101432172270029*x1*x2**3 + 0.526542563641447*x1*x2**2 + 0.239820800984058*x1*x2 - 1.1914402310642*x1 + 0.0306030972552493*x2**4 + 0.200292853935844*x2**3 + 0.856950009915842*x2**2 + 1.15267700456413*x2 + 0.430112994466422
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:20
0-> accuracy1:100.0, accuracy2:49.905553460121155, accuracy3:100.0, loss:0.3512819707393646
10-> accuracy1:100.0, accuracy2:49.86777603626251, accuracy3:100.0, loss:0.35132700204849243
20-> accuracy1:100.0, accuracy2:49.86777603626251, accuracy3:100.0, loss:0.3513718545436859
30-> accuracy1:100.0, accuracy2:49.86777603626251, accuracy3:100.0, loss:0.35139113664627075
40-> accuracy1:100.0, accuracy2:49.86777603626251, accuracy3:100.0, loss:0.3514106571674347
50-> accuracy1:100.0, accuracy2:49.905553460121155, accuracy3:100.0, loss:0.35143527388572693
60-> accuracy1:100.0, accuracy2:49.905553460121155, accuracy3:100.0, loss:0.35144925117492676
70-> accuracy1:100.0, accuracy2:49.905553460121155, accuracy3:100.0, loss:0.3514649271965027
80-> accuracy1:100.0, accuracy2:49.905553460121155, accuracy3:100.0, loss:0.3514740467071533
90-> accuracy1:100.0, accuracy2:49.905553460121155, accuracy3:100.0, loss:0.3514828681945801
B(x) = 0.0380167016321105*x1**4 + 0.234683472656305*x1**3*x2 + 0.424088679427692*x1**3 - 0.0407990083799435*x1**2*x2**2 + 0.221362850952542*x1**2*x2 + 0.643015908512896*x1**2 + 0.0740155891006082*x1*x2**3 + 0.472288411493328*x1*x2**2 + 0.222077377308793*x1*x2 - 1.14069087768299*x1 + 0.0161293546553849*x2**4 + 0.147690891085075*x2**3 + 0.813233634689898*x2**2 + 1.1586417351217*x2 + 0.424696043151983
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
Failed
Elapsed Time: 116.57099603582174
