{'batch_size': 1000, 'lr': np.float64(0.16999999999999998), 'loss_weight_continuous': (1, 1, 1), 'R_b': 0.4, 'margin': 0.4, 'DEG_continuous': [2, 4, 4, 2], 'learning_loops': 100, 'max_iter': 20, 'err': 0.02677454477719443}

Mosek can be used normally.
iter:1
0-> accuracy1:0.0, accuracy2:65.89999794960022, accuracy3:0.0, loss:0.9051706194877625
10-> accuracy1:100.0, accuracy2:98.90000224113464, accuracy3:31.400001049041748, loss:2.44020414352417
20-> accuracy1:100.0, accuracy2:97.39999771118164, accuracy3:100.0, loss:0.09380052238702774
30-> accuracy1:100.0, accuracy2:98.90000224113464, accuracy3:100.0, loss:0.03134115785360336
40-> accuracy1:100.0, accuracy2:96.79999947547913, accuracy3:100.0, loss:0.9061833620071411
50-> accuracy1:100.0, accuracy2:98.60000014305115, accuracy3:100.0, loss:0.13959148526191711
60-> accuracy1:100.0, accuracy2:97.50000238418579, accuracy3:100.0, loss:2.647564172744751
70-> accuracy1:99.00000095367432, accuracy2:99.50000047683716, accuracy3:100.0, loss:0.9333578944206238
80-> accuracy1:97.39999771118164, accuracy2:99.29999709129333, accuracy3:100.0, loss:4.055013656616211
90-> accuracy1:96.20000123977661, accuracy2:99.19999837875366, accuracy3:100.0, loss:20.60106658935547
B(x) = 198.139985444348*x1**4 - 515.126059655104*x1**3*x2 + 206.295412827993*x1**3 + 1223.37194626399*x1**2*x2**2 - 7528.33233892554*x1**2*x2 + 13599.68084597*x1**2 + 917.9719925127*x1*x2**3 - 2376.17979275652*x1*x2**2 + 17771.3358628789*x1*x2 - 7009.50017641106*x1 + 209.09713920978*x2**4 - 2897.39813687456*x2**3 - 1229.62309227283*x2**2 + 5271.12816395376*x2 + 1577.3079692973
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:2
0-> accuracy1:100.0, accuracy2:89.99999761581421, accuracy3:100.0, loss:152.3090057373047
10-> accuracy1:83.09999704360962, accuracy2:98.45454692840576, accuracy3:100.0, loss:217.33663940429688
20-> accuracy1:100.0, accuracy2:99.54545497894287, accuracy3:86.10000014305115, loss:157.68109130859375
30-> accuracy1:100.0, accuracy2:99.00000095367432, accuracy3:100.0, loss:37.303958892822266
40-> accuracy1:100.0, accuracy2:99.09090995788574, accuracy3:100.0, loss:21.253355026245117
50-> accuracy1:100.0, accuracy2:99.36363697052002, accuracy3:99.29999709129333, loss:7.940958023071289
60-> accuracy1:100.0, accuracy2:99.36363697052002, accuracy3:100.0, loss:6.489532947540283
70-> accuracy1:100.0, accuracy2:99.36363697052002, accuracy3:100.0, loss:3.2521400451660156
80-> accuracy1:100.0, accuracy2:99.54545497894287, accuracy3:100.0, loss:2.0215651988983154
90-> accuracy1:100.0, accuracy2:99.54545497894287, accuracy3:100.0, loss:1.3064684867858887
B(x) = 1448.82517461593*x1**4 + 3680.46253044454*x1**3*x2 + 3464.03762880547*x1**3 + 5641.33823911774*x1**2*x2**2 + 8124.78218555277*x1**2*x2 + 3180.84867911453*x1**2 + 5507.20772375636*x1*x2**3 + 11279.0120230465*x1*x2**2 + 8171.09539524825*x1*x2 - 1284.0639655162*x1 + 1554.83252414549*x2**4 + 3544.97818404108*x2**3 + 4584.8474054381*x2**2 + 1959.78582231627*x2 + 354.117232281351
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:3
0-> accuracy1:100.0, accuracy2:91.25000238418579, accuracy3:100.0, loss:34.26475524902344
10-> accuracy1:100.0, accuracy2:90.58333039283752, accuracy3:100.0, loss:10.261919021606445
20-> accuracy1:100.0, accuracy2:90.24999737739563, accuracy3:98.00000190734863, loss:8.508328437805176
30-> accuracy1:95.80000042915344, accuracy2:92.41666793823242, accuracy3:100.0, loss:1.9656331539154053
40-> accuracy1:98.1000006198883, accuracy2:93.83333325386047, accuracy3:100.0, loss:1.0396298170089722
50-> accuracy1:95.20000219345093, accuracy2:97.25000262260437, accuracy3:100.0, loss:1.0339313745498657
60-> accuracy1:100.0, accuracy2:95.41666507720947, accuracy3:99.90000128746033, loss:1.0542634725570679
70-> accuracy1:100.0, accuracy2:95.333331823349, accuracy3:100.0, loss:0.6380283832550049
80-> accuracy1:100.0, accuracy2:91.50000214576721, accuracy3:100.0, loss:1.8218923807144165
90-> accuracy1:100.0, accuracy2:94.41666603088379, accuracy3:96.79999947547913, loss:0.6835396885871887
B(x) = 305.413876393534*x1**4 + 1076.8775521246*x1**3*x2 + 556.969684426377*x1**3 + 1696.60164897467*x1**2*x2**2 + 1705.67042874119*x1**2*x2 + 480.828541390315*x1**2 + 1562.13595400407*x1*x2**3 + 2465.00377511687*x1*x2**2 + 841.497664231495*x1*x2 - 378.117199129511*x1 + 569.890466854403*x2**4 + 1023.48753685556*x2**3 + 417.136068693579*x2**2 - 147.984369399604*x2 - 30.1776099336073
Add 3 counterexamples!
Add 100 counterexamples!
iter:4
0-> accuracy1:99.20239448547363, accuracy2:87.9230797290802, accuracy3:99.29999709129333, loss:2.247307538986206
10-> accuracy1:98.40478301048279, accuracy2:89.15384411811829, accuracy3:97.89999723434448, loss:1.2975257635116577
20-> accuracy1:98.50448369979858, accuracy2:88.53846192359924, accuracy3:100.0, loss:0.6923283934593201
30-> accuracy1:97.40777611732483, accuracy2:89.2307698726654, accuracy3:100.0, loss:0.4078283905982971
40-> accuracy1:97.60717749595642, accuracy2:91.38461351394653, accuracy3:100.0, loss:0.2214049994945526
50-> accuracy1:98.2053816318512, accuracy2:92.46153831481934, accuracy3:100.0, loss:0.1405114233493805
60-> accuracy1:99.60119724273682, accuracy2:93.46153736114502, accuracy3:100.0, loss:0.1033259928226471
70-> accuracy1:97.90627956390381, accuracy2:94.30769085884094, accuracy3:100.0, loss:0.08411780744791031
80-> accuracy1:98.80359172821045, accuracy2:96.30769491195679, accuracy3:100.0, loss:0.06331965327262878
90-> accuracy1:99.40179586410522, accuracy2:96.46154046058655, accuracy3:100.0, loss:0.05080816522240639
B(x) = 61.5908091860811*x1**4 + 242.10413522106*x1**3*x2 + 60.9803020781727*x1**3 + 423.600625391721*x1**2*x2**2 + 335.152441120729*x1**2*x2 + 115.452880396556*x1**2 + 384.750760914254*x1*x2**3 + 536.351818887025*x1*x2**2 + 201.385505678881*x1*x2 - 40.2860775800053*x1 + 142.327586481707*x2**4 + 233.916329798097*x2**3 + 86.1699310730335*x2**2 - 17.4343957649932*x2 - 2.9717843573647
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 2 counterexamples!
Add 79 counterexamples!
iter:5
0-> accuracy1:99.40298795700073, accuracy2:90.86294174194336, accuracy3:100.0, loss:0.15145160257816315
10-> accuracy1:98.30845594406128, accuracy2:88.75997066497803, accuracy3:100.0, loss:0.11647295951843262
20-> accuracy1:98.40795993804932, accuracy2:90.71791172027588, accuracy3:100.0, loss:0.12057623267173767
30-> accuracy1:96.517413854599, accuracy2:88.17983865737915, accuracy3:100.0, loss:0.11369189620018005
40-> accuracy1:98.60696792602539, accuracy2:88.10732364654541, accuracy3:100.0, loss:0.09934218972921371
50-> accuracy1:98.90547394752502, accuracy2:72.6613461971283, accuracy3:97.2000002861023, loss:2.423611640930176
60-> accuracy1:99.40298795700073, accuracy2:72.95141220092773, accuracy3:100.0, loss:2.2858638763427734
70-> accuracy1:99.50248599052429, accuracy2:73.45902919769287, accuracy3:100.0, loss:1.218942403793335
80-> accuracy1:98.70646595954895, accuracy2:78.60768437385559, accuracy3:98.69999885559082, loss:0.7092742323875427
90-> accuracy1:95.72139382362366, accuracy2:82.16098546981812, accuracy3:100.0, loss:0.5373399257659912
B(x) = 30.4021338558474*x1**4 + 91.4054065564882*x1**3*x2 + 89.1482630668819*x1**3 + 152.749636368885*x1**2*x2**2 + 194.296789663462*x1**2*x2 + 72.938797656452*x1**2 + 126.966478548827*x1*x2**3 + 242.291094708126*x1*x2**2 + 153.013549294975*x1*x2 - 45.7691884579367*x1 + 39.6242553406898*x2**4 + 85.4498426198924*x2**3 + 70.9422573705678*x2**2 + 0.137719046855234*x2 - 7.80777184444704
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:6
0-> accuracy1:98.10945391654968, accuracy2:76.87626481056213, accuracy3:99.09999966621399, loss:0.5319992899894714
10-> accuracy1:96.81591987609863, accuracy2:77.75524258613586, accuracy3:100.0, loss:0.4085741639137268
20-> accuracy1:96.01989984512329, accuracy2:78.83705496788025, accuracy3:100.0, loss:0.3218970000743866
30-> accuracy1:95.62188982963562, accuracy2:78.90466451644897, accuracy3:100.0, loss:0.26130247116088867
40-> accuracy1:96.21890783309937, accuracy2:79.44557070732117, accuracy3:100.0, loss:0.21857476234436035
50-> accuracy1:96.31840586662292, accuracy2:79.85125184059143, accuracy3:100.0, loss:0.18906468152999878
60-> accuracy1:96.517413854599, accuracy2:79.7160267829895, accuracy3:100.0, loss:0.17233280837535858
70-> accuracy1:96.41790986061096, accuracy2:79.17512059211731, accuracy3:100.0, loss:0.16118019819259644
80-> accuracy1:96.41790986061096, accuracy2:78.90466451644897, accuracy3:100.0, loss:0.15314003825187683
90-> accuracy1:96.81591987609863, accuracy2:78.36375832557678, accuracy3:100.0, loss:0.1472034901380539
B(x) = 7.56756414486807*x1**4 + 26.3533596515862*x1**3*x2 + 21.3865164062909*x1**3 + 46.5308073378695*x1**2*x2**2 + 55.6646145346665*x1**2*x2 + 17.1289839073727*x1**2 + 38.5900372970171*x1*x2**3 + 68.1288901579141*x1*x2**2 + 38.074291139526*x1*x2 - 12.2290664245772*x1 + 13.1048854036604*x2**4 + 27.9144121267748*x2**3 + 17.1244043362533*x2**2 - 6.16443632766832*x2 - 0.317205889603958
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 90 counterexamples!
iter:7
0-> accuracy1:96.91542387008667, accuracy2:73.80496859550476, accuracy3:100.0, loss:0.17794713377952576
10-> accuracy1:96.91542387008667, accuracy2:73.04015159606934, accuracy3:100.0, loss:0.17346271872520447
20-> accuracy1:96.61691784858704, accuracy2:72.08412885665894, accuracy3:100.0, loss:0.17031659185886383
30-> accuracy1:97.11442589759827, accuracy2:71.57425284385681, accuracy3:100.0, loss:0.1687014251947403
40-> accuracy1:97.81094789505005, accuracy2:70.17208337783813, accuracy3:100.0, loss:0.16786816716194153
50-> accuracy1:98.00994992256165, accuracy2:68.96111965179443, accuracy3:100.0, loss:0.1675071269273758
60-> accuracy1:98.20895791053772, accuracy2:68.26003789901733, accuracy3:100.0, loss:0.1677064299583435
70-> accuracy1:98.30845594406128, accuracy2:67.62269139289856, accuracy3:100.0, loss:0.16842429339885712
80-> accuracy1:98.70646595954895, accuracy2:66.92160367965698, accuracy3:100.0, loss:0.16941897571086884
90-> accuracy1:98.80596995353699, accuracy2:66.47546291351318, accuracy3:100.0, loss:0.17055441439151764
B(x) = 2.21600377603622*x1**4 + 7.99432312003035*x1**3*x2 + 6.37636339523103*x1**3 + 14.446859332102*x1**2*x2**2 + 17.2407553129392*x1**2*x2 + 5.63942355455856*x1**2 + 12.0182464902192*x1*x2**3 + 21.2359192643542*x1*x2**2 + 12.6255514453854*x1*x2 - 3.60419710505843*x1 + 4.03793242271887*x2**4 + 8.56643676060427*x2**3 + 5.7695246881378*x2**2 - 1.3582932272117*x2 - 0.0782487785271824
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 92 counterexamples!
iter:8
0-> accuracy1:99.10447597503662, accuracy2:62.010836601257324, accuracy3:100.0, loss:0.19187907874584198
10-> accuracy1:99.8009979724884, accuracy2:61.34858727455139, accuracy3:100.0, loss:0.19282220304012299
20-> accuracy1:100.0, accuracy2:60.68633198738098, accuracy3:100.0, loss:0.1935850977897644
30-> accuracy1:100.0, accuracy2:60.385310649871826, accuracy3:100.0, loss:0.1941952258348465
40-> accuracy1:100.0, accuracy2:59.84346866607666, accuracy3:100.0, loss:0.19471074640750885
50-> accuracy1:100.0, accuracy2:59.60264801979065, accuracy3:100.0, loss:0.19510570168495178
60-> accuracy1:100.0, accuracy2:59.60264801979065, accuracy3:100.0, loss:0.19547975063323975
70-> accuracy1:100.0, accuracy2:59.60264801979065, accuracy3:100.0, loss:0.1957646608352661
80-> accuracy1:100.0, accuracy2:59.54244136810303, accuracy3:100.0, loss:0.19598741829395294
90-> accuracy1:100.0, accuracy2:59.48224067687988, accuracy3:100.0, loss:0.19614307582378387
B(x) = 0.67221683280191*x1**4 + 2.40974300471643*x1**3*x2 + 1.96860904968822*x1**3 + 4.45029988696846*x1**2*x2**2 + 5.17076575067923*x1**2*x2 + 1.78738775277842*x1**2 + 3.67842516294605*x1*x2**3 + 6.41559638695638*x1*x2**2 + 4.1310041869801*x1*x2 - 1.36207529913178*x1 + 1.24356996503783*x2**4 + 2.43656571334876*x2**3 + 1.65015730811481*x2**2 - 0.119458542018251*x2 + 0.109590861113636
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:9
0-> accuracy1:100.0, accuracy2:56.10448718070984, accuracy3:100.0, loss:0.2178601324558258
10-> accuracy1:100.0, accuracy2:56.10448718070984, accuracy3:100.0, loss:0.2183404564857483
20-> accuracy1:100.0, accuracy2:56.10448718070984, accuracy3:100.0, loss:0.21892204880714417
30-> accuracy1:100.0, accuracy2:56.047701835632324, accuracy3:100.0, loss:0.21963442862033844
40-> accuracy1:100.0, accuracy2:55.99091649055481, accuracy3:100.0, loss:0.22030162811279297
50-> accuracy1:100.0, accuracy2:55.8773398399353, accuracy3:100.0, loss:0.22095926105976105
60-> accuracy1:100.0, accuracy2:55.76376914978027, accuracy3:100.0, loss:0.22160932421684265
70-> accuracy1:100.0, accuracy2:55.59341311454773, accuracy3:100.0, loss:0.22225680947303772
80-> accuracy1:100.0, accuracy2:55.59341311454773, accuracy3:100.0, loss:0.22301866114139557
90-> accuracy1:100.0, accuracy2:55.536627769470215, accuracy3:100.0, loss:0.22394345700740814
B(x) = 0.209860837829086*x1**4 + 0.726069991907663*x1**3*x2 + 0.642292088924454*x1**3 + 1.3606710439997*x1**2*x2**2 + 1.54144596879192*x1**2*x2 + 0.591775056269213*x1**2 + 1.1083392218499*x1*x2**3 + 1.92346318217567*x1*x2**2 + 1.42595581837172*x1*x2 - 0.691750186237481*x1 + 0.364520266083793*x2**4 + 0.613260692589462*x2**3 + 0.454314856904978*x2**2 + 0.29024688222685*x2 + 0.123864058132469
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:10
0-> accuracy1:100.0, accuracy2:52.44492292404175, accuracy3:100.0, loss:0.24569426476955414
10-> accuracy1:100.0, accuracy2:52.44492292404175, accuracy3:100.0, loss:0.2469894289970398
20-> accuracy1:100.0, accuracy2:52.28371620178223, accuracy3:100.0, loss:0.2483808696269989
30-> accuracy1:100.0, accuracy2:52.22998261451721, accuracy3:100.0, loss:0.24958103895187378
40-> accuracy1:100.0, accuracy2:52.1762490272522, accuracy3:100.0, loss:0.2506445050239563
50-> accuracy1:100.0, accuracy2:52.12251543998718, accuracy3:100.0, loss:0.2518216371536255
60-> accuracy1:100.0, accuracy2:51.96130871772766, accuracy3:100.0, loss:0.25295349955558777
70-> accuracy1:100.0, accuracy2:51.80010795593262, accuracy3:100.0, loss:0.2541961669921875
80-> accuracy1:100.0, accuracy2:51.58516764640808, accuracy3:100.0, loss:0.25555431842803955
90-> accuracy1:100.0, accuracy2:51.37023329734802, accuracy3:100.0, loss:0.25698772072792053
B(x) = 0.0690515144844928*x1**4 + 0.228393989721138*x1**3*x2 + 0.2323979558944*x1**3 + 0.423282743727556*x1**2*x2**2 + 0.468980762539919*x1**2*x2 + 0.280577072416396*x1**2 + 0.342066627592059*x1*x2**3 + 0.6195380280603*x1*x2**2 + 0.618515641408434*x1*x2 - 0.574402321279019*x1 + 0.101672750928139*x2**4 + 0.116697072697291*x2**3 + 0.137994011393041*x2**2 + 0.373728644643045*x2 + 0.116904167476276
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:11
0-> accuracy1:100.0, accuracy2:48.495665192604065, accuracy3:100.0, loss:0.28040340542793274
10-> accuracy1:100.0, accuracy2:48.393675684928894, accuracy3:100.0, loss:0.2821112871170044
20-> accuracy1:100.0, accuracy2:48.036715388298035, accuracy3:100.0, loss:0.2837826907634735
30-> accuracy1:100.0, accuracy2:47.88373410701752, accuracy3:100.0, loss:0.28529512882232666
40-> accuracy1:100.0, accuracy2:47.83273935317993, accuracy3:100.0, loss:0.2869786322116852
50-> accuracy1:100.0, accuracy2:47.577765583992004, accuracy3:100.0, loss:0.28869664669036865
60-> accuracy1:100.0, accuracy2:47.118815779685974, accuracy3:100.0, loss:0.29045745730400085
70-> accuracy1:100.0, accuracy2:46.6088742017746, accuracy3:100.0, loss:0.2921564280986786
80-> accuracy1:100.0, accuracy2:46.506884694099426, accuracy3:100.0, loss:0.29381734132766724
90-> accuracy1:100.0, accuracy2:46.14992439746857, accuracy3:100.0, loss:0.2954753637313843
B(x) = 0.0249336092215938*x1**4 + 0.0798855968255355*x1**3*x2 + 0.095582009002179*x1**3 + 0.143677192296242*x1**2*x2**2 + 0.144790772420395*x1**2*x2 + 0.166821116695513*x1**2 + 0.122729591809441*x1*x2**3 + 0.241887080445268*x1*x2**2 + 0.330029976456707*x1*x2 - 0.528266554050135*x1 + 0.0306537096946005*x2**4 - 0.000429856794942139*x2**3 + 0.052763266149996*x2**2 + 0.38806350906288*x2 + 0.105305211409788
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:12
0-> accuracy1:100.0, accuracy2:43.71664226055145, accuracy3:100.0, loss:0.320215106010437
10-> accuracy1:100.0, accuracy2:43.37700009346008, accuracy3:100.0, loss:0.32199564576148987
20-> accuracy1:100.0, accuracy2:42.843279242515564, accuracy3:100.0, loss:0.3235296607017517
30-> accuracy1:100.0, accuracy2:42.455118894577026, accuracy3:100.0, loss:0.32505926489830017
40-> accuracy1:100.0, accuracy2:41.8728768825531, accuracy3:100.0, loss:0.3267558217048645
50-> accuracy1:100.0, accuracy2:41.436195373535156, accuracy3:100.0, loss:0.32837796211242676
60-> accuracy1:100.0, accuracy2:41.14507436752319, accuracy3:100.0, loss:0.3299802839756012
70-> accuracy1:100.0, accuracy2:40.950995683670044, accuracy3:100.0, loss:0.33152276277542114
80-> accuracy1:100.0, accuracy2:40.70839285850525, accuracy3:100.0, loss:0.33294564485549927
90-> accuracy1:100.0, accuracy2:40.5143141746521, accuracy3:100.0, loss:0.33430832624435425
B(x) = 0.0104280455496964*x1**4 + 0.0345051786969997*x1**3*x2 + 0.0488498567193975*x1**3 + 0.0566774940150081*x1**2*x2**2 + 0.0425274782684903*x1**2*x2 + 0.130735781855506*x1**2 + 0.057407191142496*x1*x2**3 + 0.129235937229334*x1*x2**2 + 0.212669024287748*x1*x2 - 0.461352917655345*x1 + 0.0125446886936474*x2**4 - 0.0238624301320801*x2**3 + 0.030348043071972*x2**2 + 0.424327491802535*x2 + 0.0930485818319804
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:13
0-> accuracy1:100.0, accuracy2:38.45441937446594, accuracy3:100.0, loss:0.35681968927383423
10-> accuracy1:100.0, accuracy2:38.40814530849457, accuracy3:100.0, loss:0.3579857349395752
20-> accuracy1:100.0, accuracy2:38.17676901817322, accuracy3:100.0, loss:0.3589409589767456
30-> accuracy1:100.0, accuracy2:37.806570529937744, accuracy3:100.0, loss:0.35985854268074036
40-> accuracy1:100.0, accuracy2:37.714022397994995, accuracy3:100.0, loss:0.36058494448661804
50-> accuracy1:100.0, accuracy2:37.52892315387726, accuracy3:100.0, loss:0.36110955476760864
60-> accuracy1:100.0, accuracy2:37.482646107673645, accuracy3:100.0, loss:0.3615482747554779
70-> accuracy1:100.0, accuracy2:37.390097975730896, accuracy3:100.0, loss:0.3618716597557068
80-> accuracy1:100.0, accuracy2:37.43637204170227, accuracy3:100.0, loss:0.36207589507102966
90-> accuracy1:100.0, accuracy2:37.482646107673645, accuracy3:100.0, loss:0.3621119260787964
B(x) = 0.00439236382697052*x1**4 + 0.0191906520003528*x1**3*x2 + 0.0305041219340252*x1**3 + 0.0236988893543804*x1**2*x2**2 + 0.00180453053725583*x1**2*x2 + 0.13249200597383*x1**2 + 0.0355199903975365*x1*x2**3 + 0.0939914999665108*x1*x2**2 + 0.167868607811113*x1*x2 - 0.425930220973722*x1 + 0.0072539504408055*x2**4 - 0.0300088095031962*x2**3 + 0.026766325097175*x2**2 + 0.443222470345103*x2 + 0.0805712689090975
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:14
0-> accuracy1:100.0, accuracy2:35.91331243515015, accuracy3:100.0, loss:0.38052424788475037
10-> accuracy1:100.0, accuracy2:35.91331243515015, accuracy3:100.0, loss:0.3802725374698639
20-> accuracy1:100.0, accuracy2:35.86908578872681, accuracy3:100.0, loss:0.3798608183860779
30-> accuracy1:100.0, accuracy2:35.86908578872681, accuracy3:100.0, loss:0.3793412744998932
40-> accuracy1:100.0, accuracy2:35.91331243515015, accuracy3:100.0, loss:0.37856394052505493
50-> accuracy1:100.0, accuracy2:35.91331243515015, accuracy3:100.0, loss:0.37758147716522217
60-> accuracy1:100.0, accuracy2:35.957542061805725, accuracy3:100.0, loss:0.37644755840301514
70-> accuracy1:100.0, accuracy2:36.09022498130798, accuracy3:100.0, loss:0.37517133355140686
80-> accuracy1:100.0, accuracy2:36.22291088104248, accuracy3:100.0, loss:0.37373974919319153
90-> accuracy1:100.0, accuracy2:36.39982342720032, accuracy3:100.0, loss:0.3721372187137604
B(x) = 0.000548846705331732*x1**4 + 0.015253502846725*x1**3*x2 + 0.021010307942086*x1**3 + 0.00613295324999334*x1**2*x2**2 - 0.0215905075377486*x1**2*x2 + 0.178641419118067*x1**2 + 0.0298800644929823*x1*x2**3 + 0.0879699058412374*x1*x2**2 + 0.162660182191968*x1*x2 - 0.427556021916243*x1 + 0.00624994826573438*x2**4 - 0.0336343726498152*x2**3 + 0.0363057288829714*x2**2 + 0.451678315427892*x2 + 0.0637285201587645
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:15
0-> accuracy1:100.0, accuracy2:34.98517572879791, accuracy3:100.0, loss:0.38505569100379944
10-> accuracy1:100.0, accuracy2:35.28166115283966, accuracy3:100.0, loss:0.38312700390815735
20-> accuracy1:100.0, accuracy2:35.28166115283966, accuracy3:100.0, loss:0.3809868395328522
30-> accuracy1:100.0, accuracy2:35.45108139514923, accuracy3:100.0, loss:0.3786919116973877
40-> accuracy1:100.0, accuracy2:35.662853717803955, accuracy3:100.0, loss:0.37622949481010437
50-> accuracy1:100.0, accuracy2:35.87462902069092, accuracy3:100.0, loss:0.3735898733139038
60-> accuracy1:100.0, accuracy2:36.298179626464844, accuracy3:100.0, loss:0.37087151408195496
70-> accuracy1:100.0, accuracy2:36.55230700969696, accuracy3:100.0, loss:0.36805281043052673
80-> accuracy1:100.0, accuracy2:36.76408231258392, accuracy3:100.0, loss:0.3650507628917694
90-> accuracy1:100.0, accuracy2:37.06056773662567, accuracy3:100.0, loss:0.3617425560951233
B(x) = -0.00289078341931709*x1**4 + 0.0179628806943584*x1**3*x2 + 0.0138082106049134*x1**3 - 0.0107267683377522*x1**2*x2**2 - 0.0397395265788064*x1**2*x2 + 0.303348154658143*x1**2 + 0.0337358148977991*x1*x2**3 + 0.0958222735246772*x1*x2**2 + 0.174096181786806*x1*x2 - 0.482243908353462*x1 + 0.00671236285796718*x2**4 - 0.0388818849103475*x2**3 + 0.0583883152265171*x2**2 + 0.442103599412844*x2 + 0.0308413072898314
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:16
0-> accuracy1:100.0, accuracy2:35.83908975124359, accuracy3:100.0, loss:0.3683816194534302
10-> accuracy1:100.0, accuracy2:35.96099019050598, accuracy3:100.0, loss:0.3648759722709656
20-> accuracy1:100.0, accuracy2:36.123526096343994, accuracy3:100.0, loss:0.3611612021923065
30-> accuracy1:100.0, accuracy2:36.407965421676636, accuracy3:100.0, loss:0.35732612013816833
40-> accuracy1:100.0, accuracy2:36.773669719696045, accuracy3:100.0, loss:0.35322892665863037
50-> accuracy1:100.0, accuracy2:36.895570158958435, accuracy3:100.0, loss:0.3488317131996155
60-> accuracy1:100.0, accuracy2:36.97683811187744, accuracy3:100.0, loss:0.3442835509777069
70-> accuracy1:100.0, accuracy2:37.05810606479645, accuracy3:100.0, loss:0.3396793305873871
80-> accuracy1:100.0, accuracy2:37.22064197063446, accuracy3:100.0, loss:0.33525389432907104
90-> accuracy1:100.0, accuracy2:37.34254240989685, accuracy3:100.0, loss:0.33079150319099426
B(x) = -0.00603188045209447*x1**4 + 0.0283224983163938*x1**3*x2 + 0.0110918285379885*x1**3 - 0.0374976396035858*x1**2*x2**2 - 0.0610409539609041*x1**2*x2 + 0.569460412344779*x1**2 + 0.0526162457379781*x1*x2**3 + 0.126168287438312*x1*x2**2 + 0.190425879399397*x1*x2 - 0.639651143410369*x1 + 0.0076096037701428*x2**4 - 0.0503132231575443*x2**3 + 0.1072202595573*x2**2 + 0.428468359980054*x2 - 0.0274558337479329
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:17
0-> accuracy1:100.0, accuracy2:35.923466086387634, accuracy3:100.0, loss:0.3466607332229614
10-> accuracy1:97.91044592857361, accuracy2:36.31393909454346, accuracy3:100.0, loss:0.34045132994651794
20-> accuracy1:98.80596995353699, accuracy2:36.43108308315277, accuracy3:100.0, loss:0.33181965351104736
30-> accuracy1:98.80596995353699, accuracy2:36.66536509990692, accuracy3:100.0, loss:0.32274073362350464
40-> accuracy1:98.80596995353699, accuracy2:36.782506108284, accuracy3:100.0, loss:0.31186428666114807
50-> accuracy1:98.30845594406128, accuracy2:40.53104221820831, accuracy3:100.0, loss:0.2992870807647705
60-> accuracy1:100.0, accuracy2:40.80437421798706, accuracy3:100.0, loss:0.2885555028915405
70-> accuracy1:100.0, accuracy2:40.921515226364136, accuracy3:100.0, loss:0.2803628444671631
80-> accuracy1:97.91044592857361, accuracy2:43.42053830623627, accuracy3:100.0, loss:0.2715752422809601
90-> accuracy1:96.81591987609863, accuracy2:49.78524148464203, accuracy3:100.0, loss:0.26099854707717896
B(x) = -0.0143733919092765*x1**4 + 0.0743321270413783*x1**3*x2 + 0.0318683553952524*x1**3 - 0.142841652315306*x1**2*x2**2 - 0.184863263851715*x1**2*x2 + 1.05159101163309*x1**2 + 0.134794759558816*x1*x2**3 + 0.325460644590806*x1*x2**2 + 0.241954066445374*x1*x2 - 0.748457498888168*x1 + 0.0094584170646037*x2**4 - 0.121379862349308*x2**3 + 0.135308616372864*x2**2 + 0.737012281551376*x2 - 0.190020655320051
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:18
0-> accuracy1:96.517413854599, accuracy2:53.10033559799194, accuracy3:100.0, loss:0.26913973689079285
10-> accuracy1:96.517413854599, accuracy2:55.016911029815674, accuracy3:100.0, loss:0.2593817412853241
20-> accuracy1:96.7164158821106, accuracy2:56.294625997543335, accuracy3:100.0, loss:0.2538188397884369
30-> accuracy1:97.31343388557434, accuracy2:56.97106122970581, accuracy3:100.0, loss:0.2509176731109619
40-> accuracy1:97.31343388557434, accuracy2:57.23412036895752, accuracy3:100.0, loss:0.2491907775402069
50-> accuracy1:97.51243591308594, accuracy2:57.2717010974884, accuracy3:100.0, loss:0.24798090755939484
60-> accuracy1:97.51243591308594, accuracy2:57.459598779678345, accuracy3:100.0, loss:0.24683013558387756
70-> accuracy1:97.51243591308594, accuracy2:57.572340965270996, accuracy3:100.0, loss:0.2455977350473404
80-> accuracy1:97.51243591308594, accuracy2:57.60992169380188, accuracy3:100.0, loss:0.24433250725269318
90-> accuracy1:97.31343388557434, accuracy2:57.60992169380188, accuracy3:100.0, loss:0.2429783046245575
B(x) = -0.019830341441717*x1**4 + 0.1078405118874*x1**3*x2 + 0.0524808163746767*x1**3 - 0.212561268880896*x1**2*x2**2 - 0.282064229093818*x1**2*x2 + 1.46815764776443*x1**2 + 0.170727637714388*x1*x2**3 + 0.448334851402584*x1*x2**2 + 0.551318304876364*x1*x2 - 1.01555765089292*x1 + 0.0280147272549358*x2**4 - 0.144978309688356*x2**3 + 0.173919277633767*x2**2 + 0.759324345230913*x2 - 0.231128147220364
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:19
0-> accuracy1:97.41293787956238, accuracy2:55.66823482513428, accuracy3:100.0, loss:0.263655424118042
10-> accuracy1:97.31343388557434, accuracy2:55.52335977554321, accuracy3:100.0, loss:0.2613065838813782
20-> accuracy1:97.61193990707397, accuracy2:55.19739389419556, accuracy3:100.0, loss:0.25966840982437134
30-> accuracy1:97.41293787956238, accuracy2:54.87142205238342, accuracy3:100.0, loss:0.2566398084163666
40-> accuracy1:97.41293787956238, accuracy2:55.05251884460449, accuracy3:100.0, loss:0.253305047750473
50-> accuracy1:97.71144390106201, accuracy2:55.124956369400024, accuracy3:100.0, loss:0.24908167123794556
60-> accuracy1:98.30845594406128, accuracy2:55.19739389419556, accuracy3:100.0, loss:0.24480654299259186
70-> accuracy1:98.30845594406128, accuracy2:55.08873462677002, accuracy3:100.0, loss:0.24048162996768951
80-> accuracy1:98.60696792602539, accuracy2:55.233609676361084, accuracy3:100.0, loss:0.2337774932384491
90-> accuracy1:99.50248599052429, accuracy2:55.233609676361084, accuracy3:100.0, loss:0.22772839665412903
B(x) = -0.0318541581673156*x1**4 + 0.1735376181052*x1**3*x2 + 0.124531797075807*x1**3 - 0.331786588118179*x1**2*x2**2 - 0.572334266562106*x1**2*x2 + 1.73013820375041*x1**2 + 0.221971482047163*x1*x2**3 + 0.785375866888814*x1*x2**2 + 1.17578127109124*x1*x2 - 1.02881562076687*x1 + 0.0576275615880672*x2**4 - 0.190464281871536*x2**3 + 0.015447949913328*x2**2 + 0.954370802573283*x2 - 0.192222327052181
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:20
0-> accuracy1:100.0, accuracy2:53.2680869102478, accuracy3:100.0, loss:0.23643819987773895
10-> accuracy1:100.0, accuracy2:53.82733345031738, accuracy3:100.0, loss:0.2308332920074463
20-> accuracy1:100.0, accuracy2:54.52638864517212, accuracy3:100.0, loss:0.22656090557575226
30-> accuracy1:100.0, accuracy2:55.225443840026855, accuracy3:100.0, loss:0.22340241074562073
40-> accuracy1:100.0, accuracy2:56.099265813827515, accuracy3:100.0, loss:0.22150199115276337
50-> accuracy1:100.0, accuracy2:57.00803995132446, accuracy3:100.0, loss:0.21914853155612946
60-> accuracy1:100.0, accuracy2:57.35756754875183, accuracy3:100.0, loss:0.21757353842258453
70-> accuracy1:100.0, accuracy2:57.49737620353699, accuracy3:100.0, loss:0.21739837527275085
80-> accuracy1:100.0, accuracy2:58.54596495628357, accuracy3:100.0, loss:0.21541954576969147
90-> accuracy1:100.0, accuracy2:57.7070951461792, accuracy3:100.0, loss:0.21602697670459747
B(x) = -0.0579704954514175*x1**4 + 0.278714282497288*x1**3*x2 + 0.245744314020453*x1**3 - 0.463082696844987*x1**2*x2**2 - 0.93353452034372*x1**2*x2 + 1.93127383269315*x1**2 + 0.252140297886588*x1*x2**3 + 1.05835201905732*x1*x2**2 + 1.31909315059322*x1*x2 - 1.2649143975152*x1 + 0.0536168180239355*x2**4 - 0.223998385740998*x2**3 - 0.139538172173431*x2**2 + 1.18435414202271*x2 - 0.196313933514569
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
Failed
Elapsed Time: 111.3094123750925
