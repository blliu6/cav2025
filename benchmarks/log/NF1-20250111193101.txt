{'batch_size': 600, 'lr': np.float64(0.26999999999999996), 'loss_weight_continuous': (1, 1, 1), 'R_b': 0.4, 'margin': 0.4, 'DEG_continuous': [2, 4, 4, 2], 'learning_loops': 100, 'max_iter': 20, 'err': 0.02677454477719443}

Mosek can be used normally.
iter:1
0-> accuracy1:0.0, accuracy2:58.33333134651184, accuracy3:0.0, loss:1.1109262704849243
10-> accuracy1:67.166668176651, accuracy2:86.83333396911621, accuracy3:74.16666746139526, loss:5.32362174987793
20-> accuracy1:82.833331823349, accuracy2:96.83333039283752, accuracy3:100.0, loss:3.9569687843322754
30-> accuracy1:93.50000023841858, accuracy2:97.00000286102295, accuracy3:100.0, loss:13.71815299987793
40-> accuracy1:96.16666436195374, accuracy2:98.66666793823242, accuracy3:100.0, loss:16.334182739257812
50-> accuracy1:74.83333349227905, accuracy2:98.83333444595337, accuracy3:100.0, loss:69.40214538574219
60-> accuracy1:95.99999785423279, accuracy2:97.50000238418579, accuracy3:100.0, loss:51.68720245361328
70-> accuracy1:100.0, accuracy2:97.83333539962769, accuracy3:100.0, loss:99.3802719116211
80-> accuracy1:100.0, accuracy2:99.16666746139526, accuracy3:100.0, loss:14.357620239257812
90-> accuracy1:98.83333444595337, accuracy2:99.00000095367432, accuracy3:100.0, loss:23.225313186645508
B(x) = 9487.54580541839*x1**4 + 38465.5660566791*x1**3*x2 + 3627.60372766055*x1**3 + 50719.8302221142*x1**2*x2**2 - 6963.95877002331*x1**2*x2 + 12362.0528158407*x1**2 + 28735.216158105*x1*x2**3 - 9279.58730334016*x1*x2**2 + 23519.0710170396*x1*x2 - 7984.14642985404*x1 + 5527.37450152477*x2**4 - 6732.56727563732*x2**3 + 6081.93949302563*x2**2 + 4784.67728749764*x2 - 2192.91233502562
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:2
0-> accuracy1:97.66666889190674, accuracy2:85.00000238418579, accuracy3:100.0, loss:414.00677490234375
10-> accuracy1:100.0, accuracy2:99.71428513526917, accuracy3:100.0, loss:1.2672739028930664
20-> accuracy1:100.0, accuracy2:99.57143068313599, accuracy3:100.0, loss:1.4539662599563599
30-> accuracy1:100.0, accuracy2:99.57143068313599, accuracy3:100.0, loss:1.0848753452301025
40-> accuracy1:100.0, accuracy2:99.57143068313599, accuracy3:100.0, loss:0.7775178551673889
50-> accuracy1:100.0, accuracy2:99.57143068313599, accuracy3:100.0, loss:0.48532283306121826
60-> accuracy1:100.0, accuracy2:99.57143068313599, accuracy3:100.0, loss:0.2612881660461426
70-> accuracy1:99.50000047683716, accuracy2:99.71428513526917, accuracy3:100.0, loss:0.14656777679920197
80-> accuracy1:100.0, accuracy2:99.71428513526917, accuracy3:100.0, loss:0.08763769268989563
90-> accuracy1:99.83333349227905, accuracy2:99.85714554786682, accuracy3:100.0, loss:0.05210649222135544
B(x) = 994.267489399002*x1**4 + 4372.44462972999*x1**3*x2 - 266.551106896504*x1**3 + 7389.57430355417*x1**2*x2**2 - 1264.55387771672*x1**2*x2 + 290.27510457954*x1**2 + 5389.62579811489*x1*x2**3 - 679.128837860295*x1*x2**2 + 821.134486031169*x1*x2 - 394.062792792078*x1 + 1442.60769128799*x2**4 + 55.5170970264414*x2**3 + 68.5737500156529*x2**2 + 247.650075395303*x2 - 110.616334788648
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:3
0-> accuracy1:100.0, accuracy2:87.37499713897705, accuracy3:100.0, loss:5.57918643951416
10-> accuracy1:90.3333306312561, accuracy2:90.24999737739563, accuracy3:100.0, loss:1.7206857204437256
20-> accuracy1:93.99999976158142, accuracy2:93.87500286102295, accuracy3:100.0, loss:0.6764132976531982
30-> accuracy1:97.66666889190674, accuracy2:95.24999856948853, accuracy3:100.0, loss:0.32633018493652344
40-> accuracy1:92.83333420753479, accuracy2:97.25000262260437, accuracy3:100.0, loss:0.3311859965324402
50-> accuracy1:97.33333587646484, accuracy2:96.49999737739563, accuracy3:100.0, loss:0.1825857162475586
60-> accuracy1:97.00000286102295, accuracy2:96.62500023841858, accuracy3:100.0, loss:0.08995042741298676
70-> accuracy1:97.66666889190674, accuracy2:97.00000286102295, accuracy3:100.0, loss:0.05628053843975067
80-> accuracy1:98.83333444595337, accuracy2:97.12499976158142, accuracy3:100.0, loss:0.03859991952776909
90-> accuracy1:99.50000047683716, accuracy2:97.25000262260437, accuracy3:100.0, loss:0.025140102952718735
B(x) = 113.599302207854*x1**4 + 532.941635563274*x1**3*x2 - 50.6444207944253*x1**3 + 960.906270718005*x1**2*x2**2 - 170.076113420408*x1**2*x2 + 69.9273052654065*x1**2 + 754.204450600029*x1*x2**3 - 98.7324968623562*x1*x2**2 + 147.31556390374*x1*x2 - 57.6762954904156*x1 + 220.326486585109*x2**4 + 1.12041088912187*x2**3 + 53.0237237179894*x2**2 - 29.1772252923442*x2 + 0.473626108869938
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:4
0-> accuracy1:99.6666669845581, accuracy2:86.44444346427917, accuracy3:100.0, loss:0.3670123219490051
10-> accuracy1:96.49999737739563, accuracy2:86.77777647972107, accuracy3:100.0, loss:0.25053367018699646
20-> accuracy1:96.16666436195374, accuracy2:86.55555844306946, accuracy3:100.0, loss:0.18650268018245697
30-> accuracy1:95.99999785423279, accuracy2:85.77777743339539, accuracy3:100.0, loss:0.1497463583946228
40-> accuracy1:95.99999785423279, accuracy2:85.5555534362793, accuracy3:100.0, loss:0.1277889758348465
50-> accuracy1:96.49999737739563, accuracy2:85.2222204208374, accuracy3:100.0, loss:0.11467760801315308
60-> accuracy1:96.33333086967468, accuracy2:85.00000238418579, accuracy3:100.0, loss:0.1058489978313446
70-> accuracy1:98.16666841506958, accuracy2:84.6666693687439, accuracy3:100.0, loss:0.09980928897857666
80-> accuracy1:99.00000095367432, accuracy2:83.88888835906982, accuracy3:100.0, loss:0.09580043703317642
90-> accuracy1:99.16666746139526, accuracy2:83.55555534362793, accuracy3:100.0, loss:0.09402529895305634
B(x) = 14.5011967636584*x1**4 + 70.3106643321343*x1**3*x2 - 2.52524366543928*x1**3 + 130.732387791025*x1**2*x2**2 - 4.43602307670059*x1**2*x2 + 6.80144675347471*x1**2 + 105.932694839191*x1*x2**3 + 8.45189009749083*x1*x2**2 + 13.1509214941739*x1*x2 - 4.48153751805752*x1 + 31.8268476111023*x2**4 + 8.00950722618845*x2**3 + 4.75348689935723*x2**2 - 1.99010998737551*x2 + 0.0960901180781849
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 97 counterexamples!
iter:5
0-> accuracy1:100.0, accuracy2:74.82447624206543, accuracy3:100.0, loss:0.1413630098104477
10-> accuracy1:100.0, accuracy2:73.82146716117859, accuracy3:100.0, loss:0.13973647356033325
20-> accuracy1:100.0, accuracy2:73.11936020851135, accuracy3:100.0, loss:0.13974645733833313
30-> accuracy1:100.0, accuracy2:72.41725325584412, accuracy3:100.0, loss:0.1403152495622635
40-> accuracy1:100.0, accuracy2:71.31394147872925, accuracy3:100.0, loss:0.14069949090480804
50-> accuracy1:100.0, accuracy2:70.11033296585083, accuracy3:100.0, loss:0.14152614772319794
60-> accuracy1:100.0, accuracy2:69.50852274894714, accuracy3:100.0, loss:0.1425522118806839
70-> accuracy1:100.0, accuracy2:69.4082260131836, accuracy3:100.0, loss:0.1441747546195984
80-> accuracy1:100.0, accuracy2:69.20762062072754, accuracy3:100.0, loss:0.1459091752767563
90-> accuracy1:100.0, accuracy2:69.10732388496399, accuracy3:100.0, loss:0.14780116081237793
B(x) = 2.39844092261074*x1**4 + 11.421694764268*x1**3*x2 - 0.222898680340223*x1**3 + 20.7779197972083*x1**2*x2**2 - 0.0971243871144223*x1**2*x2 + 1.32589692333825*x1**2 + 16.50589160537*x1*x2**3 + 1.95469266066343*x1*x2**2 + 2.56848133533895*x1*x2 - 1.01894873051144*x1 + 4.88202692065024*x2**4 + 1.41931307565818*x2**3 + 0.734755969588562*x2**2 - 0.0670907955124181*x2 + 0.145938901497212
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:6
0-> accuracy1:100.0, accuracy2:62.807655334472656, accuracy3:100.0, loss:0.19802191853523254
10-> accuracy1:100.0, accuracy2:62.71650195121765, accuracy3:100.0, loss:0.19208137691020966
20-> accuracy1:100.0, accuracy2:62.807655334472656, accuracy3:100.0, loss:0.18533539772033691
30-> accuracy1:100.0, accuracy2:64.53965306282043, accuracy3:100.0, loss:0.1820482313632965
40-> accuracy1:100.0, accuracy2:65.63354730606079, accuracy3:100.0, loss:0.1805717796087265
50-> accuracy1:100.0, accuracy2:67.09206700325012, accuracy3:100.0, loss:0.17973487079143524
60-> accuracy1:100.0, accuracy2:67.00091361999512, accuracy3:100.0, loss:0.17940980195999146
70-> accuracy1:100.0, accuracy2:67.09206700325012, accuracy3:100.0, loss:0.179639995098114
80-> accuracy1:100.0, accuracy2:67.00091361999512, accuracy3:100.0, loss:0.1803968846797943
90-> accuracy1:100.0, accuracy2:66.54512286186218, accuracy3:100.0, loss:0.18159298598766327
B(x) = 0.58572120248272*x1**4 + 2.64017079238919*x1**3*x2 - 0.127918718875664*x1**3 + 4.5912210126645*x1**2*x2**2 - 0.588868620707646*x1**2*x2 + 0.790528350343753*x1**2 + 3.49780674595882*x1*x2**3 - 0.132907328523054*x1*x2**2 + 1.36673939372817*x1*x2 - 0.939521577822825*x1 + 0.998719470722984*x2**4 - 0.0214156356145996*x2**3 + 0.562829701031908*x2**2 + 0.125713087749809*x2 + 0.0636135689292686
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:7
0-> accuracy1:100.0, accuracy2:60.40100455284119, accuracy3:100.0, loss:0.21833361685276031
10-> accuracy1:100.0, accuracy2:59.06432867050171, accuracy3:100.0, loss:0.22055000066757202
20-> accuracy1:100.0, accuracy2:57.560569047927856, accuracy3:100.0, loss:0.2232082039117813
30-> accuracy1:100.0, accuracy2:56.056809425354004, accuracy3:100.0, loss:0.2256842404603958
40-> accuracy1:100.0, accuracy2:54.051798582077026, accuracy3:100.0, loss:0.22791756689548492
50-> accuracy1:100.0, accuracy2:53.63408327102661, accuracy3:100.0, loss:0.23023590445518494
60-> accuracy1:100.0, accuracy2:53.29991579055786, accuracy3:100.0, loss:0.2326500564813614
70-> accuracy1:100.0, accuracy2:52.96574831008911, accuracy3:100.0, loss:0.23511245846748352
80-> accuracy1:100.0, accuracy2:52.71512269973755, accuracy3:100.0, loss:0.23728112876415253
90-> accuracy1:100.0, accuracy2:52.63158082962036, accuracy3:100.0, loss:0.23936370015144348
B(x) = 0.188033287924815*x1**4 + 0.744136860874483*x1**3*x2 - 0.074353961422877*x1**3 + 1.09541016266753*x1**2*x2**2 - 0.430799703830082*x1**2*x2 + 0.646659520946599*x1**2 + 0.735577984094034*x1*x2**3 - 0.105131418843608*x1*x2**2 + 0.658796076971303*x1*x2 - 0.940665971245789*x1 + 0.187625728445431*x2**4 - 0.031399070860376*x2**3 + 0.238849760835684*x2**2 + 0.163706176787282*x2 + 0.076477050684648
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:8
0-> accuracy1:100.0, accuracy2:48.26522767543793, accuracy3:100.0, loss:0.26904523372650146
10-> accuracy1:100.0, accuracy2:48.033925890922546, accuracy3:100.0, loss:0.27086716890335083
20-> accuracy1:100.0, accuracy2:47.95682430267334, accuracy3:100.0, loss:0.27242201566696167
30-> accuracy1:100.0, accuracy2:47.72551953792572, accuracy3:100.0, loss:0.274087518453598
40-> accuracy1:100.0, accuracy2:47.49421775341034, accuracy3:100.0, loss:0.2753174304962158
50-> accuracy1:100.0, accuracy2:47.26291298866272, accuracy3:100.0, loss:0.276902437210083
60-> accuracy1:100.0, accuracy2:46.877408027648926, accuracy3:100.0, loss:0.2781950831413269
70-> accuracy1:100.0, accuracy2:46.26060128211975, accuracy3:100.0, loss:0.2797372043132782
80-> accuracy1:100.0, accuracy2:46.183499693870544, accuracy3:100.0, loss:0.281494140625
90-> accuracy1:100.0, accuracy2:46.02929949760437, accuracy3:100.0, loss:0.28330811858177185
B(x) = 0.0720563964273861*x1**4 + 0.255647922257321*x1**3*x2 - 0.0228383326595519*x1**3 + 0.26575718045413*x1**2*x2**2 - 0.268858093614457*x1**2*x2 + 0.549828924322443*x1**2 + 0.165268037316253*x1*x2**3 + 0.00888908406724028*x1*x2**2 + 0.309780448145366*x1*x2 - 0.861892428015436*x1 + 0.0361066367054475*x2**4 - 0.0115294224889919*x2**3 + 0.0852527940901508*x2**2 + 0.241661325101749*x2 + 0.068232252515182
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:9
0-> accuracy1:100.0, accuracy2:42.51968562602997, accuracy3:100.0, loss:0.3231735825538635
10-> accuracy1:100.0, accuracy2:42.090192437171936, accuracy3:100.0, loss:0.32152774930000305
20-> accuracy1:100.0, accuracy2:41.80386662483215, accuracy3:100.0, loss:0.32015493512153625
30-> accuracy1:100.0, accuracy2:41.58912003040314, accuracy3:100.0, loss:0.3193473219871521
40-> accuracy1:100.0, accuracy2:41.44595563411713, accuracy3:100.0, loss:0.3187853991985321
50-> accuracy1:100.0, accuracy2:41.0880446434021, accuracy3:100.0, loss:0.31828612089157104
60-> accuracy1:100.0, accuracy2:40.5869722366333, accuracy3:100.0, loss:0.317672997713089
70-> accuracy1:100.0, accuracy2:40.44380784034729, accuracy3:100.0, loss:0.3163279891014099
80-> accuracy1:100.0, accuracy2:40.30064344406128, accuracy3:100.0, loss:0.31432193517684937
90-> accuracy1:100.0, accuracy2:40.15747904777527, accuracy3:100.0, loss:0.31147849559783936
B(x) = 0.0290703006271623*x1**4 + 0.103945106044977*x1**3*x2 + 0.00742866074607208*x1**3 + 0.021026264736571*x1**2*x2**2 - 0.238142698619958*x1**2*x2 + 0.318915391590036*x1**2 + 0.0491909859179812*x1*x2**3 + 0.0909310273779272*x1*x2**2 + 0.162043887661364*x1*x2 - 0.775338268071197*x1 + 0.00370414356072971*x2**4 - 0.0211853850006227*x2**3 - 0.0126465448941714*x2**2 + 0.282173987322726*x2 + 0.105028823488142
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:10
0-> accuracy1:100.0, accuracy2:37.34135031700134, accuracy3:100.0, loss:0.3406592607498169
10-> accuracy1:100.0, accuracy2:37.074148654937744, accuracy3:100.0, loss:0.3358020782470703
20-> accuracy1:100.0, accuracy2:39.278557896614075, accuracy3:100.0, loss:0.3294723331928253
30-> accuracy1:100.0, accuracy2:43.820974230766296, accuracy3:100.0, loss:0.32044586539268494
40-> accuracy1:100.0, accuracy2:44.021376967430115, accuracy3:100.0, loss:0.31225305795669556
50-> accuracy1:100.0, accuracy2:44.48897838592529, accuracy3:100.0, loss:0.30932074785232544
60-> accuracy1:100.0, accuracy2:44.55577731132507, accuracy3:100.0, loss:0.30808597803115845
70-> accuracy1:100.0, accuracy2:44.82297897338867, accuracy3:100.0, loss:0.3066188395023346
80-> accuracy1:100.0, accuracy2:44.95657980442047, accuracy3:100.0, loss:0.3050708472728729
90-> accuracy1:100.0, accuracy2:45.15697956085205, accuracy3:100.0, loss:0.3040643334388733
B(x) = 0.0155494809705728*x1**4 + 0.0639989635714007*x1**3*x2 + 0.034026294674678*x1**3 - 0.0728637656758459*x1**2*x2**2 - 0.304387571474285*x1**2*x2 + 0.357296875939215*x1**2 + 0.0577693482215376*x1*x2**3 + 0.241894168494013*x1*x2**2 + 0.11152575000659*x1*x2 - 0.795770126879045*x1 - 0.0110364699100324*x2**4 - 0.0616930148317923*x2**3 - 0.0893082120673795*x2**2 + 0.369967796102583*x2 + 0.106410242387309
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:11
0-> accuracy1:100.0, accuracy2:42.45460331439972, accuracy3:100.0, loss:0.3383333086967468
10-> accuracy1:100.0, accuracy2:42.57983863353729, accuracy3:100.0, loss:0.33803412318229675
20-> accuracy1:100.0, accuracy2:42.517220973968506, accuracy3:100.0, loss:0.33805927634239197
30-> accuracy1:100.0, accuracy2:42.26675033569336, accuracy3:100.0, loss:0.33792105317115784
40-> accuracy1:100.0, accuracy2:42.141515016555786, accuracy3:100.0, loss:0.3374900817871094
50-> accuracy1:100.0, accuracy2:42.141515016555786, accuracy3:100.0, loss:0.3369382321834564
60-> accuracy1:100.0, accuracy2:42.141515016555786, accuracy3:100.0, loss:0.3362978398799896
70-> accuracy1:100.0, accuracy2:42.329367995262146, accuracy3:100.0, loss:0.3355313539505005
80-> accuracy1:100.0, accuracy2:42.329367995262146, accuracy3:100.0, loss:0.3345550298690796
90-> accuracy1:100.0, accuracy2:42.329367995262146, accuracy3:100.0, loss:0.33348631858825684
B(x) = 0.00727991968489643*x1**4 + 0.0198233185238437*x1**3*x2 + 0.0218523740532779*x1**3 - 0.0551248225393605*x1**2*x2**2 - 0.228575045824376*x1**2*x2 + 0.336411892918892*x1**2 + 0.0610039440314796*x1*x2**3 + 0.277975671623694*x1*x2**2 + 0.117197339214827*x1*x2 - 0.736606216894371*x1 - 0.0189199941356437*x2**4 - 0.0933784902876853*x2**3 - 0.133692841155026*x2**2 + 0.397887181804644*x2 + 0.113511335226904
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:12
0-> accuracy1:100.0, accuracy2:39.8939311504364, accuracy3:100.0, loss:0.3593631088733673
10-> accuracy1:100.0, accuracy2:39.71714675426483, accuracy3:100.0, loss:0.35825106501579285
20-> accuracy1:100.0, accuracy2:39.65822160243988, accuracy3:100.0, loss:0.357379674911499
30-> accuracy1:100.0, accuracy2:39.65822160243988, accuracy3:100.0, loss:0.3561345040798187
40-> accuracy1:100.0, accuracy2:39.59929347038269, accuracy3:100.0, loss:0.35480034351348877
50-> accuracy1:100.0, accuracy2:39.59929347038269, accuracy3:100.0, loss:0.3532906472682953
60-> accuracy1:100.0, accuracy2:39.5403653383255, accuracy3:100.0, loss:0.3515413701534271
70-> accuracy1:100.0, accuracy2:39.59929347038269, accuracy3:100.0, loss:0.34950268268585205
80-> accuracy1:100.0, accuracy2:39.59929347038269, accuracy3:100.0, loss:0.34737154841423035
90-> accuracy1:100.0, accuracy2:39.77607488632202, accuracy3:100.0, loss:0.34526193141937256
B(x) = 0.00346190649051272*x1**4 - 0.00666686195126842*x1**3*x2 + 0.00441506540888401*x1**3 - 0.00517976567650407*x1**2*x2**2 - 0.139981063096258*x1**2*x2 + 0.333209485300903*x1**2 + 0.0433020059363095*x1*x2**3 + 0.316315496827502*x1*x2**2 + 0.150627236662264*x1*x2 - 0.669752150027166*x1 - 0.0222374976610237*x2**4 - 0.142873511984338*x2**3 - 0.198880302178742*x2**2 + 0.455676620392926*x2 + 0.130360050141937
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:13
0-> accuracy1:100.0, accuracy2:37.67389953136444, accuracy3:100.0, loss:0.36401641368865967
10-> accuracy1:100.0, accuracy2:37.67389953136444, accuracy3:100.0, loss:0.36168211698532104
20-> accuracy1:100.0, accuracy2:37.618252635002136, accuracy3:100.0, loss:0.35900840163230896
30-> accuracy1:100.0, accuracy2:37.729549407958984, accuracy3:100.0, loss:0.35588160157203674
40-> accuracy1:100.0, accuracy2:38.06343972682953, accuracy3:100.0, loss:0.3520851135253906
50-> accuracy1:100.0, accuracy2:38.34168016910553, accuracy3:100.0, loss:0.3477482795715332
60-> accuracy1:100.0, accuracy2:38.84251415729523, accuracy3:100.0, loss:0.342702180147171
70-> accuracy1:100.0, accuracy2:39.34335112571716, accuracy3:100.0, loss:0.3365570604801178
80-> accuracy1:100.0, accuracy2:40.51196575164795, accuracy3:100.0, loss:0.32892143726348877
90-> accuracy1:100.0, accuracy2:41.402336955070496, accuracy3:100.0, loss:0.318615585565567
B(x) = 0.000206764390846067*x1**4 + 0.000160282616186773*x1**3*x2 - 0.00213888152920074*x1**3 + 0.0648916492344002*x1**2*x2**2 + 0.0505459726384901*x1**2*x2 + 0.524980708778126*x1**2 + 0.00291710257630615*x1*x2**3 + 0.469171303141115*x1*x2**2 + 0.372138160026211*x1*x2 - 0.614996995989353*x1 - 0.0162406361877127*x2**4 - 0.235116173820463*x2**3 - 0.274046395850163*x2**2 + 0.584971155580824*x2 + 0.146514876229277
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:14
0-> accuracy1:100.0, accuracy2:39.905112981796265, accuracy3:100.0, loss:0.3224075138568878
10-> accuracy1:100.0, accuracy2:40.59040546417236, accuracy3:100.0, loss:0.30588045716285706
20-> accuracy1:100.0, accuracy2:45.07116377353668, accuracy3:100.0, loss:0.28140345215797424
30-> accuracy1:100.0, accuracy2:54.6652615070343, accuracy3:100.0, loss:0.24750518798828125
40-> accuracy1:100.0, accuracy2:55.50869703292847, accuracy3:100.0, loss:0.2251262068748474
50-> accuracy1:100.0, accuracy2:56.193989515304565, accuracy3:100.0, loss:0.21675492823123932
60-> accuracy1:100.0, accuracy2:58.777016401290894, accuracy3:100.0, loss:0.21183843910694122
70-> accuracy1:100.0, accuracy2:60.35845875740051, accuracy3:100.0, loss:0.20867645740509033
80-> accuracy1:100.0, accuracy2:60.41117310523987, accuracy3:100.0, loss:0.2062029093503952
90-> accuracy1:100.0, accuracy2:60.62203645706177, accuracy3:100.0, loss:0.20420677959918976
B(x) = 0.00831727906005748*x1**4 + 0.0843390554783503*x1**3*x2 + 0.104198846144277*x1**3 + 0.23804347348172*x1**2*x2**2 + 0.759505176436663*x1**2*x2 + 1.27872302463521*x1**2 + 0.167690293296909*x1*x2**3 + 1.35203268572267*x1*x2**2 + 1.50005693527834*x1*x2 - 0.643091372038427*x1 - 0.0152120410348422*x2**4 - 0.0609895340747554*x2**3 + 0.236598858159607*x2**2 + 0.691829059934397*x2 + 0.0642676426132279
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:15
0-> accuracy1:100.0, accuracy2:57.636451721191406, accuracy3:100.0, loss:0.22212430834770203
10-> accuracy1:100.0, accuracy2:57.68653154373169, accuracy3:100.0, loss:0.2207687348127365
20-> accuracy1:100.0, accuracy2:57.736605405807495, accuracy3:100.0, loss:0.21974800527095795
30-> accuracy1:100.0, accuracy2:57.7866792678833, accuracy3:100.0, loss:0.21870432794094086
40-> accuracy1:100.0, accuracy2:57.7866792678833, accuracy3:100.0, loss:0.2175552248954773
50-> accuracy1:100.0, accuracy2:57.736605405807495, accuracy3:100.0, loss:0.21619901061058044
60-> accuracy1:100.0, accuracy2:57.88683295249939, accuracy3:100.0, loss:0.21457834541797638
70-> accuracy1:100.0, accuracy2:58.08712840080261, accuracy3:100.0, loss:0.2130146026611328
80-> accuracy1:100.0, accuracy2:58.08712840080261, accuracy3:100.0, loss:0.21143628656864166
90-> accuracy1:100.0, accuracy2:58.23735594749451, accuracy3:100.0, loss:0.2102065086364746
B(x) = 0.0168083050773632*x1**4 + 0.16364167517158*x1**3*x2 + 0.167249802732527*x1**3 + 0.473624503062063*x1**2*x2**2 + 1.12604351167221*x1**2*x2 + 1.25183004303212*x1**2 + 0.415918157835799*x1*x2**3 + 1.91917590244968*x1*x2**2 + 1.86994309052299*x1*x2 - 0.683539059541122*x1 + 0.0293554559902326*x2**4 + 0.24122269539635*x2**3 + 0.606101414623613*x2**2 + 0.490699722670633*x2 + 0.0850013637966453
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:16
0-> accuracy1:100.0, accuracy2:55.4601788520813, accuracy3:100.0, loss:0.22707682847976685
10-> accuracy1:100.0, accuracy2:55.50786852836609, accuracy3:100.0, loss:0.22574879229068756
20-> accuracy1:100.0, accuracy2:55.60324192047119, accuracy3:100.0, loss:0.2247326821088791
30-> accuracy1:100.0, accuracy2:55.88936805725098, accuracy3:100.0, loss:0.2235548049211502
40-> accuracy1:100.0, accuracy2:56.223177909851074, accuracy3:100.0, loss:0.22195617854595184
50-> accuracy1:100.0, accuracy2:56.652361154556274, accuracy3:100.0, loss:0.2201220840215683
60-> accuracy1:100.0, accuracy2:57.41535425186157, accuracy3:100.0, loss:0.2180999517440796
70-> accuracy1:100.0, accuracy2:57.89222717285156, accuracy3:100.0, loss:0.2161378115415573
80-> accuracy1:100.0, accuracy2:58.36910009384155, accuracy3:100.0, loss:0.21438412368297577
90-> accuracy1:100.0, accuracy2:59.03671979904175, accuracy3:100.0, loss:0.21265295147895813
B(x) = 0.0382455402781186*x1**4 + 0.318121609767788*x1**3*x2 + 0.33726463248063*x1**3 + 0.839559649034786*x1**2*x2**2 + 1.93419147084653*x1**2*x2 + 1.65257709130262*x1**2 + 0.75686135341875*x1*x2**3 + 2.90960530192665*x1*x2**2 + 2.74968666856988*x1*x2 - 0.599028578601701*x1 + 0.0995154840951162*x2**4 + 0.586039341793532*x2**3 + 1.10173289654134*x2**2 + 0.561085184873324*x2 + 0.0358676868168438
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:17
0-> accuracy1:100.0, accuracy2:56.98680281639099, accuracy3:100.0, loss:0.22721944749355316
10-> accuracy1:100.0, accuracy2:57.16886520385742, accuracy3:100.0, loss:0.22576265037059784
20-> accuracy1:100.0, accuracy2:57.48748183250427, accuracy3:100.0, loss:0.2243892252445221
30-> accuracy1:100.0, accuracy2:57.48748183250427, accuracy3:100.0, loss:0.2231220155954361
40-> accuracy1:100.0, accuracy2:57.53300189971924, accuracy3:100.0, loss:0.22217699885368347
50-> accuracy1:100.0, accuracy2:57.57851600646973, accuracy3:100.0, loss:0.22150413691997528
60-> accuracy1:100.0, accuracy2:57.66955018043518, accuracy3:100.0, loss:0.2209475040435791
70-> accuracy1:100.0, accuracy2:57.71506428718567, accuracy3:100.0, loss:0.2203865349292755
80-> accuracy1:100.0, accuracy2:57.71506428718567, accuracy3:100.0, loss:0.21984240412712097
90-> accuracy1:100.0, accuracy2:57.71506428718567, accuracy3:100.0, loss:0.21933935582637787
B(x) = 0.0401967781281988*x1**4 + 0.343599218332799*x1**3*x2 + 0.39527953767215*x1**3 + 0.951106699761817*x1**2*x2**2 + 2.25788245743544*x1**2*x2 + 1.83946072098997*x1**2 + 0.915666692424113*x1*x2**3 + 3.31546352934439*x1*x2**2 + 3.00963787697518*x1*x2 - 0.641797597248446*x1 + 0.130440779679703*x2**4 + 0.715533436610422*x2**3 + 1.25486011282312*x2**2 + 0.54817201833198*x2 + 0.00877226192571879
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:18
0-> accuracy1:100.0, accuracy2:55.2459716796875, accuracy3:100.0, loss:0.2328544408082962
10-> accuracy1:100.0, accuracy2:55.15890121459961, accuracy3:100.0, loss:0.23220044374465942
20-> accuracy1:100.0, accuracy2:55.2459716796875, accuracy3:100.0, loss:0.23133572936058044
30-> accuracy1:100.0, accuracy2:55.115365982055664, accuracy3:100.0, loss:0.23034347593784332
40-> accuracy1:100.0, accuracy2:55.15890121459961, accuracy3:100.0, loss:0.22942689061164856
50-> accuracy1:100.0, accuracy2:55.202436447143555, accuracy3:100.0, loss:0.22841517627239227
60-> accuracy1:100.0, accuracy2:55.2459716796875, accuracy3:100.0, loss:0.22731101512908936
70-> accuracy1:100.0, accuracy2:55.289506912231445, accuracy3:100.0, loss:0.22622215747833252
80-> accuracy1:100.0, accuracy2:55.289506912231445, accuracy3:100.0, loss:0.22531791031360626
90-> accuracy1:100.0, accuracy2:55.289506912231445, accuracy3:100.0, loss:0.22442035377025604
B(x) = 0.023511727198497*x1**4 + 0.254479461047158*x1**3*x2 + 0.344390422163667*x1**3 + 0.881150291314553*x1**2*x2**2 + 2.28932984817506*x1**2*x2 + 1.99950310512931*x1**2 + 0.990478275497259*x1*x2**3 + 3.53444779023552*x1*x2**2 + 3.15407537329568*x1*x2 - 0.703477174048305*x1 + 0.153947950026964*x2**4 + 0.810497239224184*x2**3 + 1.35678437052859*x2**2 + 0.524740335331475*x2 - 0.0272483391944735
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:19
0-> accuracy1:100.0, accuracy2:52.98289656639099, accuracy3:100.0, loss:0.23529142141342163
10-> accuracy1:100.0, accuracy2:52.98289656639099, accuracy3:100.0, loss:0.23449784517288208
20-> accuracy1:100.0, accuracy2:53.06633114814758, accuracy3:100.0, loss:0.23401252925395966
30-> accuracy1:100.0, accuracy2:53.108054399490356, accuracy3:100.0, loss:0.23358340561389923
40-> accuracy1:100.0, accuracy2:53.108054399490356, accuracy3:100.0, loss:0.23300234973430634
50-> accuracy1:100.0, accuracy2:53.108054399490356, accuracy3:100.0, loss:0.23241135478019714
60-> accuracy1:100.0, accuracy2:53.14977169036865, accuracy3:100.0, loss:0.2317357361316681
70-> accuracy1:100.0, accuracy2:53.233206272125244, accuracy3:100.0, loss:0.23100818693637848
80-> accuracy1:100.0, accuracy2:53.233206272125244, accuracy3:100.0, loss:0.23027068376541138
90-> accuracy1:100.0, accuracy2:53.233206272125244, accuracy3:100.0, loss:0.22948071360588074
B(x) = 0.0092813299623318*x1**4 + 0.156180934865738*x1**3*x2 + 0.249266214534227*x1**3 + 0.780035460671513*x1**2*x2**2 + 2.26793944985882*x1**2*x2 + 2.19530690773638*x1**2 + 1.06007557754376*x1*x2**3 + 3.87001989564619*x1*x2**2 + 3.51197170300337*x1*x2 - 0.736426267016502*x1 + 0.190707280525666*x2**4 + 0.966502134062591*x2**3 + 1.54181848141376*x2**2 + 0.534143395356219*x2 - 0.0452625043956897
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:20
0-> accuracy1:100.0, accuracy2:51.141369342803955, accuracy3:100.0, loss:0.23997975885868073
10-> accuracy1:100.0, accuracy2:51.0212242603302, accuracy3:100.0, loss:0.2391280084848404
20-> accuracy1:100.0, accuracy2:51.061272621154785, accuracy3:100.0, loss:0.23850400745868683
30-> accuracy1:100.0, accuracy2:51.10132098197937, accuracy3:100.0, loss:0.23776647448539734
40-> accuracy1:100.0, accuracy2:51.061272621154785, accuracy3:100.0, loss:0.2369971126317978
50-> accuracy1:100.0, accuracy2:51.10132098197937, accuracy3:100.0, loss:0.23613426089286804
60-> accuracy1:100.0, accuracy2:51.18141770362854, accuracy3:100.0, loss:0.2350832223892212
70-> accuracy1:100.0, accuracy2:51.18141770362854, accuracy3:100.0, loss:0.23386982083320618
80-> accuracy1:100.0, accuracy2:51.221466064453125, accuracy3:100.0, loss:0.23253203928470612
90-> accuracy1:100.0, accuracy2:51.221466064453125, accuracy3:100.0, loss:0.23104706406593323
B(x) = 0.00026087974230323*x1**4 + 0.0448586531250995*x1**3*x2 + 0.09135051178859*x1**3 + 0.715714519212502*x1**2*x2**2 + 2.38257532737267*x1**2*x2 + 2.72328749427628*x1**2 + 1.28615269599214*x1*x2**3 + 4.68535655288643*x1*x2**2 + 4.26089511083718*x1*x2 - 0.917334412610404*x1 + 0.282173580443513*x2**4 + 1.31716930803456*x2**3 + 1.88617304439495*x2**2 + 0.481905014040065*x2 - 0.0830835958226449
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
Failed
Elapsed Time: 108.13882287195884
