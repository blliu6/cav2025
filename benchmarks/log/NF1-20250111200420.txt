{'batch_size': 700, 'lr': np.float64(0.15), 'loss_weight_continuous': (1, 1, 1), 'R_b': 0.4, 'margin': 0.4, 'DEG_continuous': [2, 4, 4, 2], 'learning_loops': 100, 'max_iter': 20, 'err': 0.02677454477719443}

Mosek can be used normally.
iter:1
0-> accuracy1:0.0, accuracy2:6.428571790456772, accuracy3:0.0, loss:1.5030436515808105
10-> accuracy1:91.42857193946838, accuracy2:98.42857122421265, accuracy3:40.4285728931427, loss:1.2358458042144775
20-> accuracy1:52.85714268684387, accuracy2:97.42857217788696, accuracy3:100.0, loss:1.799135684967041
30-> accuracy1:92.85714030265808, accuracy2:96.57142758369446, accuracy3:100.0, loss:0.4777006506919861
40-> accuracy1:100.0, accuracy2:97.57142663002014, accuracy3:100.0, loss:0.27175167202949524
50-> accuracy1:100.0, accuracy2:97.2857117652893, accuracy3:100.0, loss:0.4863836467266083
60-> accuracy1:100.0, accuracy2:95.85714340209961, accuracy3:100.0, loss:4.760146617889404
70-> accuracy1:83.99999737739563, accuracy2:98.00000190734863, accuracy3:100.0, loss:21.887187957763672
80-> accuracy1:100.0, accuracy2:97.85714149475098, accuracy3:100.0, loss:7.416195869445801
90-> accuracy1:100.0, accuracy2:96.14285826683044, accuracy3:100.0, loss:30.094451904296875
B(x) = 623.474833218282*x1**4 + 2101.17192146517*x1**3*x2 - 1766.86208187943*x1**3 + 2239.42637161197*x1**2*x2**2 - 4657.49281595358*x1**2*x2 + 3175.93068340874*x1**2 + 1050.34371752577*x1*x2**3 - 1590.31237169441*x1*x2**2 + 2495.60753448424*x1*x2 - 1320.09225446091*x1 + 194.435244301316*x2**4 + 36.3117453535609*x2**3 - 2075.92845112001*x2**2 + 2422.30692725101*x2 - 647.234376213384
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:2
0-> accuracy1:100.0, accuracy2:84.50000286102295, accuracy3:100.0, loss:112.41307067871094
10-> accuracy1:100.0, accuracy2:98.25000166893005, accuracy3:100.0, loss:1.5239015817642212
20-> accuracy1:100.0, accuracy2:97.00000286102295, accuracy3:96.71428799629211, loss:2.602180004119873
30-> accuracy1:100.0, accuracy2:97.75000214576721, accuracy3:100.0, loss:0.8632223010063171
40-> accuracy1:100.0, accuracy2:98.50000143051147, accuracy3:100.0, loss:0.2979649603366852
50-> accuracy1:100.0, accuracy2:96.62500023841858, accuracy3:100.0, loss:3.592404842376709
60-> accuracy1:100.0, accuracy2:98.1249988079071, accuracy3:100.0, loss:0.49655213952064514
70-> accuracy1:100.0, accuracy2:98.7500011920929, accuracy3:100.0, loss:0.2507838010787964
80-> accuracy1:100.0, accuracy2:98.7500011920929, accuracy3:100.0, loss:0.2428743541240692
90-> accuracy1:100.0, accuracy2:98.87499809265137, accuracy3:100.0, loss:0.1424768716096878
B(x) = 134.036979785859*x1**4 + 492.675644821038*x1**3*x2 - 95.7664454751652*x1**3 + 608.488142547126*x1**2*x2**2 - 337.984801128525*x1**2*x2 + 368.396673214591*x1**2 + 287.649525156741*x1*x2**3 - 183.678453955702*x1*x2**2 + 537.650545407493*x1*x2 - 181.282676013665*x1 + 45.5424239861396*x2**4 - 72.1710466936253*x2**3 + 186.724572741966*x2**2 - 9.5920627828623*x2 + 6.18607427349057
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
iter:3
0-> accuracy1:100.0, accuracy2:99.12499785423279, accuracy3:100.0, loss:0.07553093135356903
10-> accuracy1:100.0, accuracy2:99.12499785423279, accuracy3:100.0, loss:0.05506044253706932
20-> accuracy1:100.0, accuracy2:99.25000071525574, accuracy3:100.0, loss:0.031546808779239655
30-> accuracy1:100.0, accuracy2:99.25000071525574, accuracy3:100.0, loss:0.021344389766454697
40-> accuracy1:100.0, accuracy2:99.25000071525574, accuracy3:100.0, loss:0.01097571849822998
50-> accuracy1:100.0, accuracy2:99.25000071525574, accuracy3:99.85714554786682, loss:0.004942675121128559
60-> accuracy1:100.0, accuracy2:99.37499761581421, accuracy3:100.0, loss:-5.9985555708408356e-05
70-> accuracy1:100.0, accuracy2:99.50000047683716, accuracy3:99.71428513526917, loss:-0.0020625917240977287
80-> accuracy1:100.0, accuracy2:99.50000047683716, accuracy3:100.0, loss:-0.004587583709508181
90-> accuracy1:100.0, accuracy2:99.50000047683716, accuracy3:100.0, loss:-0.006718727760016918
B(x) = 42.2967220908563*x1**4 + 163.140610064454*x1**3*x2 - 23.9097497305723*x1**3 + 208.689310554279*x1**2*x2**2 - 83.8809608092044*x1**2*x2 + 103.087130762314*x1**2 + 100.921221361334*x1*x2**3 - 37.6253878095615*x1*x2**2 + 169.076709246394*x1*x2 - 42.7185620254658*x1 + 16.1446443587123*x2**4 - 21.2551475712376*x2**3 + 60.6208891163692*x2**2 + 3.90372881672806*x2 + 4.56290125370181
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:4
0-> accuracy1:100.0, accuracy2:88.44444155693054, accuracy3:100.0, loss:0.5536777377128601
10-> accuracy1:100.0, accuracy2:88.22222352027893, accuracy3:98.85714054107666, loss:0.3854844570159912
20-> accuracy1:100.0, accuracy2:88.33333253860474, accuracy3:100.0, loss:0.2494906485080719
30-> accuracy1:100.0, accuracy2:88.77778053283691, accuracy3:100.0, loss:0.1503176987171173
40-> accuracy1:100.0, accuracy2:90.66666960716248, accuracy3:100.0, loss:0.06529983133077621
50-> accuracy1:98.14285635948181, accuracy2:95.44444680213928, accuracy3:100.0, loss:0.024632172659039497
60-> accuracy1:99.28571581840515, accuracy2:97.88888692855835, accuracy3:100.0, loss:0.009237460792064667
70-> accuracy1:100.0, accuracy2:98.11111092567444, accuracy3:100.0, loss:0.005685916170477867
80-> accuracy1:100.0, accuracy2:99.2222249507904, accuracy3:100.0, loss:0.0027073966339230537
90-> accuracy1:100.0, accuracy2:99.2222249507904, accuracy3:100.0, loss:0.0024078218266367912
B(x) = 12.5252466692639*x1**4 + 48.4448565839858*x1**3*x2 - 9.70721880842517*x1**3 + 61.8791904412026*x1**2*x2**2 - 23.0146947411224*x1**2*x2 + 26.4539837231063*x1**2 + 30.4704425444894*x1*x2**3 - 6.2974923031434*x1*x2**2 + 38.2137546306895*x1*x2 - 10.2622334160873*x1 + 4.91454828158739*x2**4 - 2.49889558634872*x2**3 + 15.9356424449541*x2**2 + 0.476377779362447*x2 - 1.55416610073199
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:5
0-> accuracy1:100.0, accuracy2:89.30000066757202, accuracy3:100.0, loss:0.17369206249713898
10-> accuracy1:100.0, accuracy2:88.80000114440918, accuracy3:100.0, loss:0.12209918349981308
20-> accuracy1:97.7142870426178, accuracy2:86.90000176429749, accuracy3:100.0, loss:0.07134442031383514
30-> accuracy1:100.0, accuracy2:84.20000076293945, accuracy3:100.0, loss:0.06489469856023788
40-> accuracy1:98.28571677207947, accuracy2:85.50000190734863, accuracy3:100.0, loss:0.06336776167154312
50-> accuracy1:98.71428608894348, accuracy2:84.7000002861023, accuracy3:100.0, loss:0.06319940835237503
60-> accuracy1:99.00000095367432, accuracy2:84.20000076293945, accuracy3:100.0, loss:0.0633149966597557
70-> accuracy1:98.57142567634583, accuracy2:84.10000205039978, accuracy3:100.0, loss:0.06376207619905472
80-> accuracy1:99.00000095367432, accuracy2:83.60000252723694, accuracy3:100.0, loss:0.06497322022914886
90-> accuracy1:98.85714054107666, accuracy2:83.30000042915344, accuracy3:100.0, loss:0.06636663526296616
B(x) = 4.20242626014471*x1**4 + 17.4097306062466*x1**3*x2 - 2.79934902293014*x1**3 + 23.6016763806211*x1**2*x2**2 - 10.4542606953781*x1**2*x2 + 8.75819215266303*x1**2 + 12.0679200231226*x1*x2**3 - 4.03456635015467*x1*x2**2 + 15.6324630478621*x1*x2 - 4.53655466053804*x1 + 1.99950026677449*x2**4 - 1.8825854309529*x2**3 + 6.23236643585262*x2**2 + 0.0616644622712416*x2 - 0.216208524655443
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:6
0-> accuracy1:99.28571581840515, accuracy2:75.45454502105713, accuracy3:100.0, loss:0.12757450342178345
10-> accuracy1:98.71428608894348, accuracy2:75.27272701263428, accuracy3:100.0, loss:0.1270846426486969
20-> accuracy1:99.57143068313599, accuracy2:74.18181896209717, accuracy3:100.0, loss:0.12720422446727753
30-> accuracy1:99.71428513526917, accuracy2:73.81818294525146, accuracy3:100.0, loss:0.12761248648166656
40-> accuracy1:100.0, accuracy2:73.18181991577148, accuracy3:100.0, loss:0.1278955191373825
50-> accuracy1:100.0, accuracy2:72.5454568862915, accuracy3:100.0, loss:0.12828780710697174
60-> accuracy1:100.0, accuracy2:72.00000286102295, accuracy3:100.0, loss:0.12869682908058167
70-> accuracy1:100.0, accuracy2:71.90909385681152, accuracy3:100.0, loss:0.12913259863853455
80-> accuracy1:100.0, accuracy2:71.81817889213562, accuracy3:100.0, loss:0.12949304282665253
90-> accuracy1:100.0, accuracy2:71.7272698879242, accuracy3:100.0, loss:0.12990224361419678
B(x) = 1.56018982802028*x1**4 + 6.64090260189891*x1**3*x2 - 1.10083212444122*x1**3 + 9.36204787528405*x1**2*x2**2 - 4.43873761657354*x1**2*x2 + 3.46689356319546*x1**2 + 5.02929867349315*x1*x2**3 - 1.86870938480695*x1*x2**2 + 6.42012068859504*x1*x2 - 1.81321589288744*x1 + 0.906747551241754*x2**4 - 0.69553791023154*x2**3 + 2.48542313741424*x2**2 + 0.210689471503935*x2 + 0.0486571635531837
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:7
0-> accuracy1:100.0, accuracy2:65.75000286102295, accuracy3:100.0, loss:0.16491784155368805
10-> accuracy1:100.0, accuracy2:65.66666960716248, accuracy3:100.0, loss:0.16433556377887726
20-> accuracy1:100.0, accuracy2:65.66666960716248, accuracy3:100.0, loss:0.1636733114719391
30-> accuracy1:100.0, accuracy2:65.66666960716248, accuracy3:100.0, loss:0.16314782202243805
40-> accuracy1:100.0, accuracy2:65.58333039283752, accuracy3:100.0, loss:0.1626545488834381
50-> accuracy1:100.0, accuracy2:65.49999713897705, accuracy3:100.0, loss:0.16224949061870575
60-> accuracy1:100.0, accuracy2:65.3333306312561, accuracy3:100.0, loss:0.16185542941093445
70-> accuracy1:100.0, accuracy2:65.16666412353516, accuracy3:100.0, loss:0.161532923579216
80-> accuracy1:100.0, accuracy2:65.08333086967468, accuracy3:100.0, loss:0.1613607257604599
90-> accuracy1:100.0, accuracy2:65.08333086967468, accuracy3:100.0, loss:0.1612481027841568
B(x) = 0.594241479373058*x1**4 + 2.56517063770921*x1**3*x2 - 0.472800783480548*x1**3 + 3.67820088868848*x1**2*x2**2 - 1.99221029652817*x1**2*x2 + 1.35520275029713*x1**2 + 1.98800619003977*x1*x2**3 - 0.940626132039342*x1*x2**2 + 2.83948077436179*x1*x2 - 0.866465665883203*x1 + 0.365207830952718*x2**4 - 0.340296564161795*x2**3 + 0.946930782201361*x2**2 + 0.333662500345945*x2 + 0.170823415109692
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:8
0-> accuracy1:100.0, accuracy2:60.07692217826843, accuracy3:100.0, loss:0.1958167999982834
10-> accuracy1:100.0, accuracy2:60.00000238418579, accuracy3:100.0, loss:0.19601456820964813
20-> accuracy1:100.0, accuracy2:59.84615087509155, accuracy3:100.0, loss:0.1963188648223877
30-> accuracy1:100.0, accuracy2:59.76923108100891, accuracy3:100.0, loss:0.19672390818595886
40-> accuracy1:100.0, accuracy2:59.76923108100891, accuracy3:100.0, loss:0.19701802730560303
50-> accuracy1:100.0, accuracy2:59.76923108100891, accuracy3:100.0, loss:0.19701319932937622
60-> accuracy1:100.0, accuracy2:59.61538553237915, accuracy3:100.0, loss:0.19687733054161072
70-> accuracy1:100.0, accuracy2:59.53845977783203, accuracy3:100.0, loss:0.19669969379901886
80-> accuracy1:100.0, accuracy2:59.53845977783203, accuracy3:100.0, loss:0.19654616713523865
90-> accuracy1:100.0, accuracy2:59.53845977783203, accuracy3:100.0, loss:0.1964178830385208
B(x) = 0.311987511682385*x1**4 + 1.2989780942118*x1**3*x2 - 0.332940290185451*x1**3 + 1.82260534428931*x1**2*x2**2 - 1.46591741799285*x1**2*x2 + 0.871755979680924*x1**2 + 0.91284648658009*x1*x2**3 - 0.540998681054283*x1*x2**2 + 1.67813729577356*x1*x2 - 0.84379033621744*x1 + 0.148955373631093*x2**4 - 0.232207016002559*x2**3 + 0.399084967094849*x2**2 + 0.298239440765419*x2 + 0.165999831489655
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:9
0-> accuracy1:100.0, accuracy2:55.2142858505249, accuracy3:100.0, loss:0.2273511290550232
10-> accuracy1:100.0, accuracy2:55.2142858505249, accuracy3:100.0, loss:0.2273344099521637
20-> accuracy1:100.0, accuracy2:55.2142858505249, accuracy3:100.0, loss:0.22760553658008575
30-> accuracy1:100.0, accuracy2:55.000001192092896, accuracy3:100.0, loss:0.22774282097816467
40-> accuracy1:100.0, accuracy2:55.000001192092896, accuracy3:100.0, loss:0.22769594192504883
50-> accuracy1:100.0, accuracy2:55.000001192092896, accuracy3:100.0, loss:0.22762247920036316
60-> accuracy1:100.0, accuracy2:54.92857098579407, accuracy3:100.0, loss:0.227603018283844
70-> accuracy1:100.0, accuracy2:54.92857098579407, accuracy3:100.0, loss:0.22756576538085938
80-> accuracy1:100.0, accuracy2:54.85714077949524, accuracy3:100.0, loss:0.22744512557983398
90-> accuracy1:100.0, accuracy2:54.85714077949524, accuracy3:100.0, loss:0.22726789116859436
B(x) = 0.184712601409017*x1**4 + 0.737653715742972*x1**3*x2 - 0.221252451676814*x1**3 + 1.02746670027206*x1**2*x2**2 - 1.14464456820998*x1**2*x2 + 0.670586471578445*x1**2 + 0.504693293742399*x1*x2**3 - 0.20106706682303*x1*x2**2 + 1.15941703545164*x1*x2 - 0.854083432354696*x1 + 0.0729213384891012*x2**4 - 0.177723588280815*x2**3 + 0.179697476065288*x2**2 + 0.3238878396833*x2 + 0.167419453516921
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:10
0-> accuracy1:100.0, accuracy2:51.20000243186951, accuracy3:100.0, loss:0.2557685375213623
10-> accuracy1:100.0, accuracy2:51.20000243186951, accuracy3:100.0, loss:0.255770742893219
20-> accuracy1:100.0, accuracy2:51.20000243186951, accuracy3:100.0, loss:0.2560809552669525
30-> accuracy1:100.0, accuracy2:51.20000243186951, accuracy3:100.0, loss:0.25632616877555847
40-> accuracy1:100.0, accuracy2:51.20000243186951, accuracy3:100.0, loss:0.25640153884887695
50-> accuracy1:100.0, accuracy2:51.13333463668823, accuracy3:100.0, loss:0.25637370347976685
60-> accuracy1:100.0, accuracy2:51.13333463668823, accuracy3:100.0, loss:0.25625190138816833
70-> accuracy1:100.0, accuracy2:51.13333463668823, accuracy3:100.0, loss:0.25603875517845154
80-> accuracy1:100.0, accuracy2:51.13333463668823, accuracy3:100.0, loss:0.2558094561100006
90-> accuracy1:100.0, accuracy2:51.13333463668823, accuracy3:100.0, loss:0.2555689811706543
B(x) = 0.127348045256776*x1**4 + 0.47451539728121*x1**3*x2 - 0.164005845696194*x1**3 + 0.63990372974985*x1**2*x2**2 - 0.886039149381727*x1**2*x2 + 0.615299603932262*x1**2 + 0.373321504875798*x1*x2**3 + 0.000102596717747733*x1*x2**2 + 0.963017576090193*x1*x2 - 0.818338303183785*x1 + 0.0533885655927178*x2**4 - 0.160557255398335*x2**3 + 0.110176846448781*x2**2 + 0.366172744147045*x2 + 0.16184614211855
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:11
0-> accuracy1:100.0, accuracy2:47.999998927116394, accuracy3:100.0, loss:0.28111279010772705
10-> accuracy1:100.0, accuracy2:47.93750047683716, accuracy3:100.0, loss:0.2809206545352936
20-> accuracy1:100.0, accuracy2:47.93750047683716, accuracy3:100.0, loss:0.28099143505096436
30-> accuracy1:100.0, accuracy2:47.93750047683716, accuracy3:100.0, loss:0.2810259759426117
40-> accuracy1:100.0, accuracy2:47.93750047683716, accuracy3:100.0, loss:0.28098270297050476
50-> accuracy1:100.0, accuracy2:47.93750047683716, accuracy3:100.0, loss:0.28085967898368835
60-> accuracy1:100.0, accuracy2:47.93750047683716, accuracy3:100.0, loss:0.2806661128997803
70-> accuracy1:100.0, accuracy2:47.93750047683716, accuracy3:100.0, loss:0.2804332375526428
80-> accuracy1:100.0, accuracy2:47.999998927116394, accuracy3:100.0, loss:0.28017517924308777
90-> accuracy1:100.0, accuracy2:47.999998927116394, accuracy3:100.0, loss:0.27989229559898376
B(x) = 0.0954938635409722*x1**4 + 0.324428338670685*x1**3*x2 - 0.126227457802379*x1**3 + 0.384784689822548*x1**2*x2**2 - 0.655676159987067*x1**2*x2 + 0.626257528144263*x1**2 + 0.306917983285037*x1*x2**3 + 0.16845061346061*x1*x2**2 + 0.859649010400231*x1*x2 - 0.772904814264534*x1 + 0.036230937218533*x2**4 - 0.146011081214031*x2**3 + 0.0868742311733923*x2**2 + 0.41181089674986*x2 + 0.146779491163735
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:12
0-> accuracy1:100.0, accuracy2:45.1764702796936, accuracy3:100.0, loss:0.3007183074951172
10-> accuracy1:100.0, accuracy2:45.23529410362244, accuracy3:100.0, loss:0.3005110025405884
20-> accuracy1:100.0, accuracy2:45.23529410362244, accuracy3:100.0, loss:0.3004269599914551
30-> accuracy1:100.0, accuracy2:45.23529410362244, accuracy3:100.0, loss:0.30030491948127747
40-> accuracy1:100.0, accuracy2:45.23529410362244, accuracy3:100.0, loss:0.30011871457099915
50-> accuracy1:100.0, accuracy2:45.23529410362244, accuracy3:100.0, loss:0.2998882830142975
60-> accuracy1:100.0, accuracy2:45.29411792755127, accuracy3:100.0, loss:0.2996591329574585
70-> accuracy1:100.0, accuracy2:45.29411792755127, accuracy3:100.0, loss:0.2994629740715027
80-> accuracy1:100.0, accuracy2:45.29411792755127, accuracy3:100.0, loss:0.299207866191864
90-> accuracy1:100.0, accuracy2:45.29411792755127, accuracy3:100.0, loss:0.2989790141582489
B(x) = 0.0706566182198911*x1**4 + 0.225351591898193*x1**3*x2 - 0.0876361904601414*x1**3 + 0.202237638927599*x1**2*x2**2 - 0.507954975268892*x1**2*x2 + 0.648750089112991*x1**2 + 0.274099853140145*x1*x2**3 + 0.308346249250441*x1*x2**2 + 0.807136087566531*x1*x2 - 0.768611950194911*x1 + 0.0257828540335146*x2**4 - 0.13745903391585*x2**3 + 0.10394993252665*x2**2 + 0.434091781471627*x2 + 0.131362450279384
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:13
0-> accuracy1:100.0, accuracy2:42.77777671813965, accuracy3:100.0, loss:0.3167495131492615
10-> accuracy1:100.0, accuracy2:42.722222208976746, accuracy3:100.0, loss:0.3166384696960449
20-> accuracy1:100.0, accuracy2:42.722222208976746, accuracy3:100.0, loss:0.31659722328186035
30-> accuracy1:100.0, accuracy2:42.722222208976746, accuracy3:100.0, loss:0.3165043890476227
40-> accuracy1:100.0, accuracy2:42.722222208976746, accuracy3:100.0, loss:0.31639182567596436
50-> accuracy1:100.0, accuracy2:42.722222208976746, accuracy3:100.0, loss:0.3162265419960022
60-> accuracy1:100.0, accuracy2:42.722222208976746, accuracy3:100.0, loss:0.3159916400909424
70-> accuracy1:100.0, accuracy2:42.722222208976746, accuracy3:100.0, loss:0.31576040387153625
80-> accuracy1:100.0, accuracy2:42.722222208976746, accuracy3:100.0, loss:0.31552988290786743
90-> accuracy1:100.0, accuracy2:42.722222208976746, accuracy3:100.0, loss:0.3153217136859894
B(x) = 0.0507564462592272*x1**4 + 0.162573767714213*x1**3*x2 - 0.0546282265393918*x1**3 + 0.0688776135619274*x1**2*x2**2 - 0.426359067112103*x1**2*x2 + 0.673979391681208*x1**2 + 0.247762942578603*x1*x2**3 + 0.41032455535535*x1*x2**2 + 0.787729503684124*x1*x2 - 0.778400751094399*x1 + 0.0169686805942564*x2**4 - 0.129872700953687*x2**3 + 0.135754869329402*x2**2 + 0.443089951381133*x2 + 0.115638663902679
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:14
0-> accuracy1:100.0, accuracy2:40.473684668540955, accuracy3:100.0, loss:0.33036649227142334
10-> accuracy1:100.0, accuracy2:40.473684668540955, accuracy3:100.0, loss:0.3302343487739563
20-> accuracy1:100.0, accuracy2:40.473684668540955, accuracy3:100.0, loss:0.3301452100276947
30-> accuracy1:100.0, accuracy2:40.473684668540955, accuracy3:100.0, loss:0.32998475432395935
40-> accuracy1:100.0, accuracy2:40.421053767204285, accuracy3:100.0, loss:0.3297804594039917
50-> accuracy1:100.0, accuracy2:40.473684668540955, accuracy3:100.0, loss:0.32951152324676514
60-> accuracy1:100.0, accuracy2:40.473684668540955, accuracy3:100.0, loss:0.32924196124076843
70-> accuracy1:100.0, accuracy2:40.473684668540955, accuracy3:100.0, loss:0.3289598524570465
80-> accuracy1:100.0, accuracy2:40.473684668540955, accuracy3:100.0, loss:0.3287024199962616
90-> accuracy1:100.0, accuracy2:40.473684668540955, accuracy3:100.0, loss:0.32845330238342285
B(x) = 0.0364015909767855*x1**4 + 0.126588658787895*x1**3*x2 - 0.0312982707896709*x1**3 - 0.0189948399096311*x1**2*x2**2 - 0.389949138137467*x1**2*x2 + 0.722081037799649*x1**2 + 0.22621113827007*x1*x2**3 + 0.483744468128388*x1*x2**2 + 0.815258644303265*x1*x2 - 0.805349595788829*x1 + 0.0104670865973819*x2**4 - 0.121849244217328*x2**3 + 0.174944760743981*x2**2 + 0.440513235874485*x2 + 0.100768100510131
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:15
0-> accuracy1:100.0, accuracy2:38.44999969005585, accuracy3:100.0, loss:0.3412545621395111
10-> accuracy1:100.0, accuracy2:38.44999969005585, accuracy3:100.0, loss:0.3410482704639435
20-> accuracy1:100.0, accuracy2:38.499999046325684, accuracy3:100.0, loss:0.3408348262310028
30-> accuracy1:100.0, accuracy2:38.499999046325684, accuracy3:100.0, loss:0.34059277176856995
40-> accuracy1:100.0, accuracy2:38.499999046325684, accuracy3:100.0, loss:0.3403209149837494
50-> accuracy1:100.0, accuracy2:38.499999046325684, accuracy3:100.0, loss:0.3400444984436035
60-> accuracy1:100.0, accuracy2:38.499999046325684, accuracy3:100.0, loss:0.3397725224494934
70-> accuracy1:100.0, accuracy2:38.499999046325684, accuracy3:100.0, loss:0.3394685685634613
80-> accuracy1:100.0, accuracy2:38.499999046325684, accuracy3:100.0, loss:0.3391748368740082
90-> accuracy1:100.0, accuracy2:38.499999046325684, accuracy3:100.0, loss:0.3388465642929077
B(x) = 0.0263148250013951*x1**4 + 0.102139693526244*x1**3*x2 - 0.0208559534444105*x1**3 - 0.0704865404126245*x1**2*x2**2 - 0.367090196178378*x1**2*x2 + 0.782297935451631*x1**2 + 0.204925177091807*x1*x2**3 + 0.528403713989885*x1*x2**2 + 0.900912041812417*x1*x2 - 0.826845493931688*x1 + 0.00875232470093966*x2**4 - 0.104750526979242*x2**3 + 0.226114812067972*x2**2 + 0.425173824265588*x2 + 0.0907076021079822
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:16
0-> accuracy1:100.0, accuracy2:36.666667461395264, accuracy3:100.0, loss:0.3496575951576233
10-> accuracy1:100.0, accuracy2:36.71428561210632, accuracy3:100.0, loss:0.3492923378944397
20-> accuracy1:100.0, accuracy2:36.666667461395264, accuracy3:100.0, loss:0.3488900661468506
30-> accuracy1:100.0, accuracy2:36.666667461395264, accuracy3:100.0, loss:0.348410964012146
40-> accuracy1:100.0, accuracy2:36.71428561210632, accuracy3:100.0, loss:0.34790441393852234
50-> accuracy1:100.0, accuracy2:36.71428561210632, accuracy3:100.0, loss:0.34735751152038574
60-> accuracy1:100.0, accuracy2:36.71428561210632, accuracy3:100.0, loss:0.34670424461364746
70-> accuracy1:100.0, accuracy2:36.71428561210632, accuracy3:100.0, loss:0.3460237681865692
80-> accuracy1:100.0, accuracy2:36.71428561210632, accuracy3:100.0, loss:0.34530162811279297
90-> accuracy1:100.0, accuracy2:36.85714304447174, accuracy3:100.0, loss:0.34451913833618164
B(x) = 0.0232487040778109*x1**4 + 0.0831514067994403*x1**3*x2 - 0.0350384127454321*x1**3 - 0.101457608756698*x1**2*x2**2 - 0.348703543568914*x1**2*x2 + 0.932994162868411*x1**2 + 0.195350483296196*x1*x2**3 + 0.581477883356455*x1*x2**2 + 1.15010617587795*x1*x2 - 0.809099231561289*x1 + 0.0147435683344836*x2**4 - 0.0694213042868831*x2**3 + 0.335973473702513*x2**2 + 0.433681309511233*x2 + 0.0670484145758963
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:17
0-> accuracy1:100.0, accuracy2:35.181817412376404, accuracy3:100.0, loss:0.35256126523017883
10-> accuracy1:100.0, accuracy2:35.181817412376404, accuracy3:100.0, loss:0.3516004681587219
20-> accuracy1:100.0, accuracy2:35.181817412376404, accuracy3:100.0, loss:0.35051867365837097
30-> accuracy1:100.0, accuracy2:35.13636291027069, accuracy3:100.0, loss:0.3492662310600281
40-> accuracy1:100.0, accuracy2:35.181817412376404, accuracy3:100.0, loss:0.34780362248420715
50-> accuracy1:100.0, accuracy2:35.13636291027069, accuracy3:100.0, loss:0.34617069363594055
60-> accuracy1:100.0, accuracy2:35.045453906059265, accuracy3:100.0, loss:0.34425845742225647
70-> accuracy1:100.0, accuracy2:34.8181813955307, accuracy3:100.0, loss:0.3419772982597351
80-> accuracy1:100.0, accuracy2:34.8181813955307, accuracy3:100.0, loss:0.3391065001487732
90-> accuracy1:100.0, accuracy2:34.77272689342499, accuracy3:100.0, loss:0.3353598415851593
B(x) = 0.0353913451520672*x1**4 + 0.0804454845439387*x1**3*x2 - 0.103094397273718*x1**3 - 0.190646183826358*x1**2*x2**2 - 0.428648116065699*x1**2*x2 + 1.41744593017481*x1**2 + 0.238422883048482*x1*x2**3 + 0.810595446683813*x1*x2**2 + 1.64959853844679*x1*x2 - 0.795524547114947*x1 + 0.0232216293122025*x2**4 - 0.035066804000372*x2**3 + 0.551719806880427*x2**2 + 0.647207395691334*x2 - 0.0650938242073448
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:18
0-> accuracy1:100.0, accuracy2:33.347827196121216, accuracy3:100.0, loss:0.3395889699459076
10-> accuracy1:100.0, accuracy2:33.391305804252625, accuracy3:100.0, loss:0.33444562554359436
20-> accuracy1:100.0, accuracy2:33.391305804252625, accuracy3:100.0, loss:0.32809099555015564
30-> accuracy1:98.57142567634583, accuracy2:33.434781432151794, accuracy3:100.0, loss:0.3191118836402893
40-> accuracy1:97.00000286102295, accuracy2:33.434781432151794, accuracy3:100.0, loss:0.3051954507827759
50-> accuracy1:94.1428542137146, accuracy2:34.3478262424469, accuracy3:100.0, loss:0.28147104382514954
60-> accuracy1:92.57143139839172, accuracy2:69.73913311958313, accuracy3:100.0, loss:0.2359301596879959
70-> accuracy1:93.00000071525574, accuracy2:80.91304302215576, accuracy3:100.0, loss:0.18032336235046387
80-> accuracy1:97.00000286102295, accuracy2:81.521737575531, accuracy3:100.0, loss:0.1673504263162613
90-> accuracy1:96.8571424484253, accuracy2:81.78260922431946, accuracy3:100.0, loss:0.16298222541809082
B(x) = 0.156014764251403*x1**4 + 0.397197230746803*x1**3*x2 - 0.549977618113919*x1**3 - 0.855362383404207*x1**2*x2**2 - 1.95375771928387*x1**2*x2 + 4.29571343798404*x1**2 + 0.457393354769801*x1*x2**3 + 2.36490678436207*x1*x2**2 + 4.55221594735993*x1*x2 - 1.40638043447065*x1 + 0.0408215546287752*x2**4 + 0.00380898774918173*x2**3 + 1.54779109744808*x2**2 + 2.13911708544382*x2 - 0.73154760530533
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:19
0-> accuracy1:95.57142853736877, accuracy2:78.62499952316284, accuracy3:100.0, loss:0.18570515513420105
10-> accuracy1:95.28571367263794, accuracy2:78.79166603088379, accuracy3:100.0, loss:0.18371744453907013
20-> accuracy1:95.57142853736877, accuracy2:78.79166603088379, accuracy3:100.0, loss:0.1814691126346588
30-> accuracy1:95.57142853736877, accuracy2:78.79166603088379, accuracy3:100.0, loss:0.1792890727519989
40-> accuracy1:95.57142853736877, accuracy2:78.83333563804626, accuracy3:100.0, loss:0.1777045726776123
50-> accuracy1:95.57142853736877, accuracy2:78.83333563804626, accuracy3:100.0, loss:0.17642825841903687
60-> accuracy1:95.57142853736877, accuracy2:78.83333563804626, accuracy3:100.0, loss:0.17529547214508057
70-> accuracy1:95.57142853736877, accuracy2:78.83333563804626, accuracy3:100.0, loss:0.17431454360485077
80-> accuracy1:95.28571367263794, accuracy2:78.83333563804626, accuracy3:100.0, loss:0.173441544175148
90-> accuracy1:95.4285740852356, accuracy2:78.83333563804626, accuracy3:100.0, loss:0.17258258163928986
B(x) = 0.259907691388409*x1**4 + 0.449325066271632*x1**3*x2 - 1.10643110930555*x1**3 - 0.633305412921879*x1**2*x2**2 - 2.45342911208601*x1**2*x2 + 5.33592925697311*x1**2 + 0.11518283445903*x1*x2**3 + 1.77901177797087*x1*x2**2 + 7.18913784140341*x1*x2 - 1.36483405720908*x1 + 0.0690956187633825*x2**4 + 0.415954430954945*x2**3 + 2.41428330686562*x2**2 + 1.60609283623327*x2 - 0.587598235470952
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:20
0-> accuracy1:95.4285740852356, accuracy2:75.67999958992004, accuracy3:100.0, loss:0.19361433386802673
10-> accuracy1:94.85714435577393, accuracy2:75.72000026702881, accuracy3:100.0, loss:0.1923709511756897
20-> accuracy1:95.14285922050476, accuracy2:75.72000026702881, accuracy3:100.0, loss:0.19100435078144073
30-> accuracy1:95.14285922050476, accuracy2:75.72000026702881, accuracy3:100.0, loss:0.18938876688480377
40-> accuracy1:95.14285922050476, accuracy2:75.72000026702881, accuracy3:100.0, loss:0.18750646710395813
50-> accuracy1:94.9999988079071, accuracy2:75.76000094413757, accuracy3:100.0, loss:0.1853662133216858
60-> accuracy1:95.14285922050476, accuracy2:75.80000162124634, accuracy3:100.0, loss:0.182990163564682
70-> accuracy1:95.28571367263794, accuracy2:75.80000162124634, accuracy3:100.0, loss:0.1802608221769333
80-> accuracy1:95.85714340209961, accuracy2:75.80000162124634, accuracy3:100.0, loss:0.177209734916687
90-> accuracy1:95.57142853736877, accuracy2:75.8400022983551, accuracy3:100.0, loss:0.1739329695701599
B(x) = 0.545276792136097*x1**4 + 0.8037924622362*x1**3*x2 - 2.84578383453658*x1**3 - 0.542930442909909*x1**2*x2**2 - 4.85519855892264*x1**2*x2 + 9.17222797472891*x1**2 - 0.185371333057753*x1*x2**3 + 1.46831932982974*x1*x2**2 + 14.6220314812456*x1*x2 - 2.04844116004835*x1 + 0.0716130281089612*x2**4 + 1.21511712639773*x2**3 + 5.4833592624919*x2**2 + 0.854324424082661*x2 - 0.527076109090754
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
Failed
Elapsed Time: 114.48851596214809
