{'batch_size': 500, 'lr': np.float64(0.29), 'loss_weight_continuous': (1, 1, 1), 'R_b': 0.4, 'margin': 0.4, 'DEG_continuous': [2, 4, 4, 2], 'learning_loops': 100, 'max_iter': 20, 'err': 0.02677454477719443}

Mosek can be used normally.
iter:1
0-> accuracy1:0.0, accuracy2:24.400000274181366, accuracy3:0.0, loss:1.6802153587341309
10-> accuracy1:78.60000133514404, accuracy2:98.60000014305115, accuracy3:100.0, loss:0.7104582786560059
20-> accuracy1:78.79999876022339, accuracy2:93.19999814033508, accuracy3:100.0, loss:19.382822036743164
30-> accuracy1:90.79999923706055, accuracy2:95.20000219345093, accuracy3:100.0, loss:24.659685134887695
40-> accuracy1:90.6000018119812, accuracy2:98.60000014305115, accuracy3:100.0, loss:4.733281135559082
50-> accuracy1:82.8000009059906, accuracy2:98.7999975681305, accuracy3:100.0, loss:20.629898071289062
60-> accuracy1:50.999999046325684, accuracy2:99.19999837875366, accuracy3:100.0, loss:465.99456787109375
70-> accuracy1:100.0, accuracy2:93.4000015258789, accuracy3:100.0, loss:1025.78173828125
80-> accuracy1:89.99999761581421, accuracy2:94.9999988079071, accuracy3:100.0, loss:2250.236328125
90-> accuracy1:100.0, accuracy2:97.79999852180481, accuracy3:100.0, loss:606.8116455078125
B(x) = 4898.42377063357*x1**4 + 30367.5980932116*x1**3*x2 + 4719.9486591016*x1**3 + 17954.1609160942*x1**2*x2**2 - 96882.8633415103*x1**2*x2 + 120453.483742875*x1**2 + 7966.32570063732*x1*x2**3 + 38274.137696488*x1*x2**2 + 150609.952362297*x1*x2 - 133627.697958071*x1 + 3270.72974643003*x2**4 + 25925.5429365923*x2**3 - 65297.6589550478*x2**2 + 75788.6524184111*x2 - 23742.1847381435
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:2
0-> accuracy1:100.0, accuracy2:82.833331823349, accuracy3:100.0, loss:4577.11767578125
10-> accuracy1:100.0, accuracy2:82.99999833106995, accuracy3:100.0, loss:541.5957641601562
20-> accuracy1:98.19999933242798, accuracy2:82.99999833106995, accuracy3:100.0, loss:178.4828643798828
30-> accuracy1:89.60000276565552, accuracy2:89.16666507720947, accuracy3:100.0, loss:90.63604736328125
40-> accuracy1:100.0, accuracy2:90.49999713897705, accuracy3:100.0, loss:18.01688575744629
50-> accuracy1:100.0, accuracy2:95.99999785423279, accuracy3:100.0, loss:3.957374095916748
60-> accuracy1:100.0, accuracy2:94.9999988079071, accuracy3:100.0, loss:36.42700958251953
70-> accuracy1:100.0, accuracy2:96.16666436195374, accuracy3:100.0, loss:3.690741539001465
80-> accuracy1:90.20000100135803, accuracy2:97.66666889190674, accuracy3:100.0, loss:31.939361572265625
90-> accuracy1:100.0, accuracy2:94.9999988079071, accuracy3:100.0, loss:5.027884483337402
B(x) = 452.20983170365*x1**4 + 1375.08211861606*x1**3*x2 - 542.890008873144*x1**3 + 2573.56147859324*x1**2*x2**2 - 1938.16526002985*x1**2*x2 + 4575.36513666278*x1**2 + 2740.81673231456*x1*x2**3 + 1481.77777397941*x1*x2**2 + 7601.27517742113*x1*x2 - 3211.99034545747*x1 + 1041.039080737*x2**4 + 1112.64305255484*x2**3 + 2396.42476137146*x2**2 - 168.445438113387*x2 - 261.621189542382
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
iter:3
0-> accuracy1:100.0, accuracy2:95.6666648387909, accuracy3:100.0, loss:4.022329807281494
10-> accuracy1:100.0, accuracy2:96.16666436195374, accuracy3:100.0, loss:2.6035633087158203
20-> accuracy1:100.0, accuracy2:97.1666693687439, accuracy3:100.0, loss:1.5903334617614746
30-> accuracy1:100.0, accuracy2:97.66666889190674, accuracy3:100.0, loss:1.0576024055480957
40-> accuracy1:100.0, accuracy2:97.83333539962769, accuracy3:100.0, loss:0.7244616746902466
50-> accuracy1:100.0, accuracy2:98.16666841506958, accuracy3:100.0, loss:0.5115713477134705
60-> accuracy1:100.0, accuracy2:98.50000143051147, accuracy3:100.0, loss:0.3716810643672943
70-> accuracy1:100.0, accuracy2:98.66666793823242, accuracy3:100.0, loss:0.27887290716171265
80-> accuracy1:100.0, accuracy2:98.66666793823242, accuracy3:100.0, loss:0.21202030777931213
90-> accuracy1:100.0, accuracy2:98.66666793823242, accuracy3:100.0, loss:0.161912202835083
B(x) = 59.6630078845114*x1**4 + 177.116696455983*x1**3*x2 - 89.6251386197545*x1**3 + 333.747534558804*x1**2*x2**2 - 307.435314698994*x1**2*x2 + 585.158027739294*x1**2 + 365.607236592466*x1*x2**3 + 135.717680062351*x1*x2**2 + 1017.87177777621*x1*x2 - 405.601690443972*x1 + 143.535499795043*x2**4 + 127.875719064201*x2**3 + 350.461332145945*x2**2 - 103.296340283585*x2 + 11.404671648356
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:4
0-> accuracy1:100.0, accuracy2:84.85714197158813, accuracy3:100.0, loss:6.508584499359131
10-> accuracy1:100.0, accuracy2:84.5714271068573, accuracy3:100.0, loss:4.225462436676025
20-> accuracy1:100.0, accuracy2:84.28571224212646, accuracy3:98.7999975681305, loss:2.2373976707458496
30-> accuracy1:100.0, accuracy2:83.85714292526245, accuracy3:98.60000014305115, loss:1.2811232805252075
40-> accuracy1:100.0, accuracy2:83.1428587436676, accuracy3:95.20000219345093, loss:0.9002048969268799
50-> accuracy1:100.0, accuracy2:82.57142901420593, accuracy3:97.79999852180481, loss:0.6047772169113159
60-> accuracy1:100.0, accuracy2:82.57142901420593, accuracy3:99.40000176429749, loss:0.4214772880077362
70-> accuracy1:100.0, accuracy2:82.71428346633911, accuracy3:96.79999947547913, loss:0.30629581212997437
80-> accuracy1:100.0, accuracy2:82.71428346633911, accuracy3:98.7999975681305, loss:0.22724902629852295
90-> accuracy1:100.0, accuracy2:82.85714387893677, accuracy3:98.00000190734863, loss:0.17609462141990662
B(x) = 6.61273116615857*x1**4 + 22.4094954128935*x1**3*x2 - 12.3791125054043*x1**3 + 40.2545641513302*x1**2*x2**2 - 34.2286475371171*x1**2*x2 + 68.6812722762068*x1**2 + 46.9416622946808*x1*x2**3 + 16.1485045653769*x1*x2**2 + 106.963492713797*x1*x2 - 35.0339611693806*x1 + 19.8234814756372*x2**4 + 17.2157925558939*x2**3 + 47.6063299808295*x2**2 - 9.79669225657335*x2 - 2.11999700027454
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:5
0-> accuracy1:100.0, accuracy2:72.12499976158142, accuracy3:98.4000027179718, loss:0.5422505140304565
10-> accuracy1:100.0, accuracy2:72.12499976158142, accuracy3:98.4000027179718, loss:0.44388139247894287
20-> accuracy1:100.0, accuracy2:72.12499976158142, accuracy3:98.60000014305115, loss:0.3488285541534424
30-> accuracy1:100.0, accuracy2:71.62500023841858, accuracy3:98.60000014305115, loss:0.27642741799354553
40-> accuracy1:100.0, accuracy2:71.62500023841858, accuracy3:99.19999837875366, loss:0.22453013062477112
50-> accuracy1:100.0, accuracy2:71.875, accuracy3:100.0, loss:0.1891201287508011
60-> accuracy1:99.59999918937683, accuracy2:72.37499952316284, accuracy3:100.0, loss:0.16623829305171967
70-> accuracy1:98.60000014305115, accuracy2:72.50000238418579, accuracy3:100.0, loss:0.15103240311145782
80-> accuracy1:98.00000190734863, accuracy2:72.37499952316284, accuracy3:100.0, loss:0.14302228391170502
90-> accuracy1:97.60000109672546, accuracy2:72.25000262260437, accuracy3:100.0, loss:0.14376983046531677
B(x) = 0.918419802123346*x1**4 + 3.27335039523458*x1**3*x2 - 1.36297662567593*x1**3 + 5.0973758090975*x1**2*x2**2 - 5.37654515404811*x1**2*x2 + 8.7447609475723*x1**2 + 5.48132560525393*x1*x2**3 + 1.55458754972215*x1*x2**2 + 14.6422306014124*x1*x2 - 4.86223029715442*x1 + 2.15800653893869*x2**4 + 1.78048914081295*x2**3 + 6.01621802641113*x2**2 - 1.47787582326134*x2 - 0.332185587033242
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:6
0-> accuracy1:96.20000123977661, accuracy2:63.333332538604736, accuracy3:100.0, loss:0.20755143463611603
10-> accuracy1:95.80000042915344, accuracy2:61.77777647972107, accuracy3:100.0, loss:0.20925049483776093
20-> accuracy1:96.39999866485596, accuracy2:60.5555534362793, accuracy3:100.0, loss:0.2106194794178009
30-> accuracy1:98.00000190734863, accuracy2:59.11111235618591, accuracy3:100.0, loss:0.21198736131191254
40-> accuracy1:98.00000190734863, accuracy2:56.88889026641846, accuracy3:100.0, loss:0.21360871195793152
50-> accuracy1:98.00000190734863, accuracy2:56.00000023841858, accuracy3:100.0, loss:0.21537214517593384
60-> accuracy1:98.4000027179718, accuracy2:55.222225189208984, accuracy3:100.0, loss:0.2177123874425888
70-> accuracy1:99.00000095367432, accuracy2:55.000001192092896, accuracy3:100.0, loss:0.22055691480636597
80-> accuracy1:99.19999837875366, accuracy2:54.88888621330261, accuracy3:100.0, loss:0.22366079688072205
90-> accuracy1:99.59999918937683, accuracy2:54.55555319786072, accuracy3:100.0, loss:0.22714610397815704
B(x) = 0.126123021117409*x1**4 + 0.450051531754409*x1**3*x2 - 0.173806185786095*x1**3 + 0.659907552981593*x1**2*x2**2 - 0.732224723534612*x1**2*x2 + 1.24038280385178*x1**2 + 0.695999740551807*x1*x2**3 + 0.269917749865301*x1*x2**2 + 2.17720137202455*x1*x2 - 0.889745340146837*x1 + 0.266635682643669*x2**4 + 0.24845094024961*x2**3 + 0.901111417509874*x2**2 + 0.131332818713812*x2 + 0.0174925260900589
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:7
0-> accuracy1:100.0, accuracy2:49.09999966621399, accuracy3:100.0, loss:0.2617265284061432
10-> accuracy1:100.0, accuracy2:48.60000014305115, accuracy3:100.0, loss:0.2657341957092285
20-> accuracy1:100.0, accuracy2:48.30000102519989, accuracy3:100.0, loss:0.26935967803001404
30-> accuracy1:100.0, accuracy2:48.100000619888306, accuracy3:100.0, loss:0.2736993432044983
40-> accuracy1:100.0, accuracy2:47.69999980926514, accuracy3:100.0, loss:0.27868759632110596
50-> accuracy1:100.0, accuracy2:46.799999475479126, accuracy3:100.0, loss:0.28431299328804016
60-> accuracy1:100.0, accuracy2:46.20000123977661, accuracy3:100.0, loss:0.2907620966434479
70-> accuracy1:100.0, accuracy2:45.39999961853027, accuracy3:100.0, loss:0.2985927164554596
80-> accuracy1:100.0, accuracy2:44.600000977516174, accuracy3:100.0, loss:0.30856287479400635
90-> accuracy1:100.0, accuracy2:42.69999861717224, accuracy3:100.0, loss:0.32157665491104126
B(x) = 0.0175104080986173*x1**4 + 0.0637949018504389*x1**3*x2 - 0.0207497049934663*x1**3 + 0.0908453529823439*x1**2*x2**2 - 0.0998787783844439*x1**2*x2 + 0.190500542146363*x1**2 + 0.095127110337255*x1*x2**3 + 0.0480523488682795*x1*x2**2 + 0.351153900494058*x1*x2 - 0.444532364978878*x1 + 0.0357411690645692*x2**4 + 0.0375284290598726*x2**3 + 0.157538015913054*x2**2 + 0.326417186813448*x2 + 0.0666104307687628
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:8
0-> accuracy1:100.0, accuracy2:37.909090518951416, accuracy3:100.0, loss:0.3834284543991089
10-> accuracy1:100.0, accuracy2:36.636364459991455, accuracy3:100.0, loss:0.3991304039955139
20-> accuracy1:100.0, accuracy2:33.18181931972504, accuracy3:100.0, loss:0.41578686237335205
30-> accuracy1:100.0, accuracy2:31.00000023841858, accuracy3:100.0, loss:0.43103593587875366
40-> accuracy1:100.0, accuracy2:27.909091114997864, accuracy3:100.0, loss:0.4456855356693268
50-> accuracy1:100.0, accuracy2:27.181819081306458, accuracy3:100.0, loss:0.459291011095047
60-> accuracy1:100.0, accuracy2:25.999999046325684, accuracy3:100.0, loss:0.47225433588027954
70-> accuracy1:99.40000176429749, accuracy2:24.909090995788574, accuracy3:100.0, loss:0.4843985140323639
80-> accuracy1:98.4000027179718, accuracy2:24.18181747198105, accuracy3:100.0, loss:0.49571946263313293
90-> accuracy1:97.39999771118164, accuracy2:23.181818425655365, accuracy3:100.0, loss:0.5063953399658203
B(x) = 0.00309880261379028*x1**4 + 0.0111794246808915*x1**3*x2 - 0.00147315481713382*x1**3 + 0.0157981316485725*x1**2*x2**2 - 0.0160063217726837*x1**2*x2 + 0.0414549941596513*x1**2 + 0.0162251460709086*x1*x2**3 + 0.0108194685925916*x1*x2**2 + 0.0703576016106562*x1*x2 - 0.126081736515049*x1 + 0.00567365645965626*x2**4 + 0.0068219416161993*x2**3 + 0.034150455392921*x2**2 + 0.567397165637205*x2 + 0.0626293394835267
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:9
0-> accuracy1:95.99999785423279, accuracy2:20.749999582767487, accuracy3:100.0, loss:0.5451611280441284
10-> accuracy1:94.19999718666077, accuracy2:19.499999284744263, accuracy3:100.0, loss:0.5536389350891113
20-> accuracy1:93.80000233650208, accuracy2:18.916666507720947, accuracy3:100.0, loss:0.5623040199279785
30-> accuracy1:92.79999732971191, accuracy2:18.333333730697632, accuracy3:100.0, loss:0.5706392526626587
40-> accuracy1:92.59999990463257, accuracy2:17.000000178813934, accuracy3:100.0, loss:0.5785467624664307
50-> accuracy1:92.59999990463257, accuracy2:15.333333611488342, accuracy3:100.0, loss:0.5866594910621643
60-> accuracy1:92.40000247955322, accuracy2:13.083332777023315, accuracy3:100.0, loss:0.594907820224762
70-> accuracy1:92.40000247955322, accuracy2:11.749999970197678, accuracy3:100.0, loss:0.603503942489624
80-> accuracy1:92.40000247955322, accuracy2:10.499999672174454, accuracy3:100.0, loss:0.6122444272041321
90-> accuracy1:92.1999990940094, accuracy2:9.25000011920929, accuracy3:100.0, loss:0.6206051111221313
B(x) = 0.000676904792671165*x1**4 + 0.00267770215694316*x1**3*x2 + 0.000137287706219634*x1**3 + 0.00401501233784961*x1**2*x2**2 - 0.00163447873186943*x1**2*x2 + 0.0124630200101385*x1**2 + 0.00368888364774174*x1*x2**3 + 0.00297659001511638*x1*x2**2 + 0.0190590915791718*x1*x2 - 0.0211136968475341*x1 + 0.00116973079986607*x2**4 + 0.00151229715354548*x2**3 + 0.0115828752054065*x2**2 + 0.680894850243273*x2 + 0.0642114232340075
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:10
0-> accuracy1:92.40000247955322, accuracy2:7.999999821186066, accuracy3:100.0, loss:0.6471621990203857
10-> accuracy1:92.40000247955322, accuracy2:7.230769097805023, accuracy3:100.0, loss:0.6545873880386353
20-> accuracy1:92.00000166893005, accuracy2:6.538461893796921, accuracy3:100.0, loss:0.6619499921798706
30-> accuracy1:92.00000166893005, accuracy2:6.0769230127334595, accuracy3:100.0, loss:0.6688993573188782
40-> accuracy1:92.00000166893005, accuracy2:5.7692307978868484, accuracy3:100.0, loss:0.6754304766654968
50-> accuracy1:91.00000262260437, accuracy2:5.384615436196327, accuracy3:100.0, loss:0.6810041666030884
60-> accuracy1:91.60000085830688, accuracy2:4.769230633974075, accuracy3:100.0, loss:0.6863614916801453
70-> accuracy1:91.60000085830688, accuracy2:4.307692125439644, accuracy3:100.0, loss:0.6916526556015015
80-> accuracy1:91.00000262260437, accuracy2:3.692307695746422, accuracy3:100.0, loss:0.6963549852371216
90-> accuracy1:90.39999842643738, accuracy2:2.0769231021404266, accuracy3:100.0, loss:0.7001752853393555
B(x) = 0.000179904882820343*x1**4 + 0.000762735658847601*x1**3*x2 + 0.000108280268436482*x1**3 + 0.00118964200378989*x1**2*x2**2 + 1.72121580129005e-5*x1**2*x2 + 0.0049799137022041*x1**2 + 0.000982619973155265*x1*x2**3 + 0.000801558295927781*x1*x2**2 + 0.00763325493807865*x1*x2 - 0.0081396036476616*x1 + 0.000288414728156277*x2**4 + 0.000358509788765421*x2**3 + 0.00543167268511626*x2**2 + 0.663940745329584*x2 + 0.0622896717447865
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:11
0-> accuracy1:89.99999761581421, accuracy2:2.142857201397419, accuracy3:100.0, loss:0.7132936716079712
10-> accuracy1:89.60000276565552, accuracy2:2.214285731315613, accuracy3:100.0, loss:0.7163902521133423
20-> accuracy1:89.3999993801117, accuracy2:2.3571427911520004, accuracy3:100.0, loss:0.719313383102417
30-> accuracy1:88.40000033378601, accuracy2:2.500000037252903, accuracy3:100.0, loss:0.7217880487442017
40-> accuracy1:88.40000033378601, accuracy2:2.571428567171097, accuracy3:99.40000176429749, loss:0.7238475680351257
50-> accuracy1:88.40000033378601, accuracy2:2.571428567171097, accuracy3:99.40000176429749, loss:0.7256019115447998
60-> accuracy1:88.20000290870667, accuracy2:2.7142856270074844, accuracy3:99.40000176429749, loss:0.727206826210022
70-> accuracy1:88.20000290870667, accuracy2:2.7142856270074844, accuracy3:99.00000095367432, loss:0.72874915599823
80-> accuracy1:88.20000290870667, accuracy2:2.7142856270074844, accuracy3:98.4000027179718, loss:0.730192244052887
90-> accuracy1:88.20000290870667, accuracy2:2.857142873108387, accuracy3:98.4000027179718, loss:0.731499433517456
B(x) = 4.46994864140129e-5*x1**4 + 0.000204450826408307*x1**3*x2 + 3.39610319282146e-5*x1**3 + 0.000336920683095593*x1**2*x2**2 + 7.02030819170613e-5*x1**2*x2 + 0.00203035118692706*x1**2 + 0.000273957838015464*x1*x2**3 + 0.000217666962340615*x1*x2**2 + 0.00410953197389906*x1*x2 + 0.0499002548458773*x1 + 8.01739529460814e-5*x2**4 + 9.39228048021167e-5*x2**3 + 0.00314788404706116*x2**2 + 0.734018258875894*x2 + 0.063904707074436
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:12
0-> accuracy1:87.8000020980835, accuracy2:2.800000086426735, accuracy3:98.4000027179718, loss:0.741765558719635
10-> accuracy1:88.20000290870667, accuracy2:2.5333333760499954, accuracy3:99.19999837875366, loss:0.7430636286735535
20-> accuracy1:88.40000033378601, accuracy2:1.733333244919777, accuracy3:99.40000176429749, loss:0.7444961667060852
30-> accuracy1:88.40000033378601, accuracy2:0.0, accuracy3:100.0, loss:0.7459331750869751
40-> accuracy1:89.20000195503235, accuracy2:0.0, accuracy3:100.0, loss:0.747227668762207
50-> accuracy1:89.3999993801117, accuracy2:0.0, accuracy3:100.0, loss:0.7483102083206177
60-> accuracy1:89.80000019073486, accuracy2:0.0, accuracy3:100.0, loss:0.7492828965187073
70-> accuracy1:90.39999842643738, accuracy2:0.0, accuracy3:100.0, loss:0.750174343585968
80-> accuracy1:90.39999842643738, accuracy2:0.0, accuracy3:100.0, loss:0.7510314583778381
90-> accuracy1:90.39999842643738, accuracy2:0.0, accuracy3:100.0, loss:0.7518669962882996
B(x) = 7.86888989403545e-6*x1**4 + 4.58734315787441e-5*x1**3*x2 + 7.36362689506104e-6*x1**3 + 8.36951108451722e-5*x1**2*x2**2 + 2.14604605903085e-5*x1**2*x2 + 0.00068757762210348*x1**2 + 7.09382126593946e-5*x1*x2**3 + 5.26820182677333e-5*x1*x2**2 + 0.00240123222912587*x1*x2 - 0.016332975634986*x1 + 2.13908066911046e-5*x2**4 + 2.34538778292208e-5*x2**3 + 0.00186105018612029*x2**2 + 0.666155035458447*x2 + 0.0641844342121231
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:13
0-> accuracy1:90.6000018119812, accuracy2:0.0, accuracy3:100.0, loss:0.757217288017273
10-> accuracy1:89.80000019073486, accuracy2:0.0, accuracy3:100.0, loss:0.7573416233062744
20-> accuracy1:88.59999775886536, accuracy2:0.0, accuracy3:100.0, loss:0.7563372254371643
30-> accuracy1:88.40000033378601, accuracy2:0.0, accuracy3:99.40000176429749, loss:0.7546676993370056
40-> accuracy1:87.59999871253967, accuracy2:1.1874999850988388, accuracy3:98.4000027179718, loss:0.7530388832092285
50-> accuracy1:87.40000128746033, accuracy2:2.812499925494194, accuracy3:97.2000002861023, loss:0.7514973878860474
60-> accuracy1:87.59999871253967, accuracy2:3.3124998211860657, accuracy3:98.4000027179718, loss:0.7504866719245911
70-> accuracy1:87.59999871253967, accuracy2:3.437500074505806, accuracy3:98.4000027179718, loss:0.7503839135169983
80-> accuracy1:87.59999871253967, accuracy2:3.3750001341104507, accuracy3:98.4000027179718, loss:0.7507320642471313
90-> accuracy1:87.59999871253967, accuracy2:3.3124998211860657, accuracy3:98.4000027179718, loss:0.7510234117507935
B(x) = 2.16030019431026e-6*x1**4 + 1.42140274063664e-5*x1**3*x2 + 1.99288210903624e-6*x1**3 + 2.66275028173672e-5*x1**2*x2**2 + 7.99984467582151e-6*x1**2*x2 + 0.000395618650348406*x1**2 + 2.20467606513048e-5*x1*x2**3 + 1.54720155005697e-5*x1*x2**2 + 0.00192275543775704*x1*x2 + 0.0755621010284941*x1 + 6.48167569321433e-6*x2**4 + 6.66449322802403e-6*x2**3 + 0.00129031243111762*x2**2 + 0.767233651319189*x2 + 0.0675695084663577
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:14
0-> accuracy1:87.59999871253967, accuracy2:3.235294297337532, accuracy3:98.00000190734863, loss:0.762438952922821
10-> accuracy1:88.20000290870667, accuracy2:1.5294117853045464, accuracy3:99.40000176429749, loss:0.7616510391235352
20-> accuracy1:89.3999993801117, accuracy2:0.0, accuracy3:100.0, loss:0.7608897089958191
30-> accuracy1:90.39999842643738, accuracy2:0.0, accuracy3:100.0, loss:0.7603800296783447
40-> accuracy1:91.79999828338623, accuracy2:0.0, accuracy3:100.0, loss:0.7601518034934998
50-> accuracy1:92.59999990463257, accuracy2:0.0, accuracy3:100.0, loss:0.7600204348564148
60-> accuracy1:93.19999814033508, accuracy2:0.0, accuracy3:100.0, loss:0.7598792910575867
70-> accuracy1:93.80000233650208, accuracy2:0.0, accuracy3:100.0, loss:0.7597802877426147
80-> accuracy1:93.99999976158142, accuracy2:0.17647058703005314, accuracy3:100.0, loss:0.7599152326583862
90-> accuracy1:93.99999976158142, accuracy2:0.2352941082790494, accuracy3:100.0, loss:0.7601848840713501
B(x) = -1.62202798601069e-7*x1**4 + 1.93174930344349e-6*x1**3*x2 + 2.10364204061161e-7*x1**3 + 5.12556298939371e-6*x1**2*x2**2 + 1.3726591251941e-6*x1**2*x2 - 8.55615916128364e-5*x1**2 + 4.81416895095355e-6*x1*x2**3 + 3.28813413444544e-6*x1*x2**2 + 0.000869038272623647*x1*x2 - 0.109623149772262*x1 + 1.48634692738879e-6*x2**4 + 1.49858626270977e-6*x2**3 + 0.000635681410004525*x2**2 + 0.571941678163681*x2 + 0.0653460641648092
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:15
0-> accuracy1:94.19999718666077, accuracy2:0.4444444552063942, accuracy3:100.0, loss:0.7765744924545288
10-> accuracy1:93.80000233650208, accuracy2:0.2222222276031971, accuracy3:100.0, loss:0.7765339612960815
20-> accuracy1:93.4000015258789, accuracy2:0.0, accuracy3:100.0, loss:0.7750784158706665
30-> accuracy1:92.59999990463257, accuracy2:0.0, accuracy3:100.0, loss:0.7736910581588745
40-> accuracy1:92.00000166893005, accuracy2:0.0, accuracy3:100.0, loss:0.772330105304718
50-> accuracy1:91.20000004768372, accuracy2:0.0, accuracy3:100.0, loss:0.771128237247467
60-> accuracy1:90.39999842643738, accuracy2:0.0, accuracy3:100.0, loss:0.7701466679573059
70-> accuracy1:89.99999761581421, accuracy2:0.0, accuracy3:100.0, loss:0.7693021297454834
80-> accuracy1:89.3999993801117, accuracy2:0.0, accuracy3:100.0, loss:0.7686228156089783
90-> accuracy1:88.20000290870667, accuracy2:0.0, accuracy3:100.0, loss:0.767923891544342
B(x) = 6.51863213934158e-8*x1**4 + 9.00540137582922e-7*x1**3*x2 + 1.01295258401263e-7*x1**3 + 1.85695955479046e-6*x1**2*x2**2 + 5.71926563962086e-7*x1**2*x2 + 5.03109686364091e-5*x1**2 + 1.52882247852287e-6*x1*x2**3 + 1.02397244647912e-6*x1*x2**2 + 0.00065529022259295*x1*x2 + 0.0292552193423134*x1 + 4.31463932584276e-7*x2**4 + 4.18234172630608e-7*x2**3 + 0.000380356316491763*x2**2 + 0.704182884740257*x2 + 0.0623739973084494
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:16
0-> accuracy1:88.20000290870667, accuracy2:0.0, accuracy3:99.40000176429749, loss:0.7715756297111511
10-> accuracy1:89.3999993801117, accuracy2:0.0, accuracy3:100.0, loss:0.7704981565475464
20-> accuracy1:91.20000004768372, accuracy2:0.0, accuracy3:100.0, loss:0.7692890763282776
30-> accuracy1:92.1999990940094, accuracy2:0.0, accuracy3:100.0, loss:0.7685648202896118
40-> accuracy1:92.79999732971191, accuracy2:0.0, accuracy3:100.0, loss:0.7678780555725098
50-> accuracy1:93.80000233650208, accuracy2:0.0, accuracy3:100.0, loss:0.7673553228378296
60-> accuracy1:94.19999718666077, accuracy2:0.21052630618214607, accuracy3:100.0, loss:0.7672946453094482
70-> accuracy1:94.59999799728394, accuracy2:1.7368420958518982, accuracy3:100.0, loss:0.7672874331474304
80-> accuracy1:94.9999988079071, accuracy2:1.9999999552965164, accuracy3:100.0, loss:0.7673686742782593
90-> accuracy1:95.59999704360962, accuracy2:2.368421107530594, accuracy3:100.0, loss:0.7674936056137085
B(x) = -3.88596136944592e-8*x1**4 + 8.90654418460386e-8*x1**3*x2 + 2.25901043811651e-9*x1**3 + 3.24340774267424e-7*x1**2*x2**2 + 8.84056443940525e-8*x1**2*x2 - 6.72267930604974e-5*x1**2 + 3.11234499222504e-7*x1*x2**3 + 2.1245152717656e-7*x1*x2**2 + 0.000255970218767619*x1*x2 - 0.138873414149046*x1 + 9.20819959617241e-8*x2**4 + 9.05537867336862e-8*x2**3 + 0.000161975369584035*x2**2 + 0.537635143621905*x2 + 0.0635428366786042
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:17
0-> accuracy1:95.59999704360962, accuracy2:2.3499999195337296, accuracy3:100.0, loss:0.7856143116950989
10-> accuracy1:94.19999718666077, accuracy2:1.899999938905239, accuracy3:100.0, loss:0.785290002822876
20-> accuracy1:93.99999976158142, accuracy2:1.549999974668026, accuracy3:100.0, loss:0.7837692499160767
30-> accuracy1:93.80000233650208, accuracy2:0.1500000013038516, accuracy3:100.0, loss:0.7824892997741699
40-> accuracy1:93.19999814033508, accuracy2:0.0, accuracy3:100.0, loss:0.7813631296157837
50-> accuracy1:92.40000247955322, accuracy2:0.0, accuracy3:100.0, loss:0.7804506421089172
60-> accuracy1:91.79999828338623, accuracy2:0.0, accuracy3:100.0, loss:0.7796376347541809
70-> accuracy1:91.60000085830688, accuracy2:0.0, accuracy3:100.0, loss:0.7789637446403503
80-> accuracy1:90.79999923706055, accuracy2:0.0, accuracy3:100.0, loss:0.7784851789474487
90-> accuracy1:90.20000100135803, accuracy2:0.0, accuracy3:100.0, loss:0.778113067150116
B(x) = -1.21055821472472e-10*x1**4 + 5.35101552269907e-8*x1**3*x2 + 5.11182769727133e-9*x1**3 + 1.18353540166838e-7*x1**2*x2**2 + 3.74822904015865e-8*x1**2*x2 - 8.2437612938025e-7*x1**2 + 9.61041988337849e-8*x1*x2**3 + 6.53358454907418e-8*x1*x2**2 + 0.000171731988680716*x1*x2 - 0.0107373148656778*x1 + 2.57223211365864e-8*x2**4 + 2.46681103047679e-8*x2**3 + 8.72073211623572e-5*x2**2 + 0.658100477261263*x2 + 0.0626566088208732
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:18
0-> accuracy1:89.99999761581421, accuracy2:0.0, accuracy3:100.0, loss:0.7802757024765015
10-> accuracy1:88.20000290870667, accuracy2:0.0, accuracy3:99.00000095367432, loss:0.7784978747367859
20-> accuracy1:87.59999871253967, accuracy2:0.0, accuracy3:97.79999852180481, loss:0.7755651473999023
30-> accuracy1:86.19999885559082, accuracy2:2.619047649204731, accuracy3:96.60000205039978, loss:0.7724220752716064
40-> accuracy1:86.40000224113464, accuracy2:2.809523791074753, accuracy3:98.19999933242798, loss:0.7714951634407043
50-> accuracy1:87.40000128746033, accuracy2:2.809523791074753, accuracy3:96.60000205039978, loss:0.771510899066925
60-> accuracy1:87.59999871253967, accuracy2:2.7142856270074844, accuracy3:96.39999866485596, loss:0.771705150604248
70-> accuracy1:86.79999709129333, accuracy2:2.7142856270074844, accuracy3:96.79999947547913, loss:0.7717202305793762
80-> accuracy1:86.59999966621399, accuracy2:2.7142856270074844, accuracy3:96.79999947547913, loss:0.7717297077178955
90-> accuracy1:86.79999709129333, accuracy2:2.7142856270074844, accuracy3:96.60000205039978, loss:0.771748960018158
B(x) = 2.02483564367235e-9*x1**4 + 2.23052930268786e-8*x1**3*x2 + 2.5548892985547e-9*x1**3 + 4.20445037936448e-8*x1**2*x2**2 + 1.43318965098526e-8*x1**2*x2 + 1.3171613214565e-5*x1**2 + 3.10460260221218e-8*x1*x2**3 + 2.11808911941517e-8*x1*x2**2 + 0.000123508304267015*x1*x2 + 0.0817026086185424*x1 + 7.65638259101846e-9*x2**4 + 7.18564382163054e-9*x2**3 + 5.35301003522474e-5*x2**2 + 0.759805041746896*x2 + 0.0645697113505101
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:19
0-> accuracy1:86.79999709129333, accuracy2:2.5909090414643288, accuracy3:96.60000205039978, loss:0.7803188562393188
10-> accuracy1:87.8000020980835, accuracy2:1.6818182542920113, accuracy3:98.4000027179718, loss:0.7799357771873474
20-> accuracy1:88.20000290870667, accuracy2:0.0, accuracy3:98.4000027179718, loss:0.7798651456832886
30-> accuracy1:88.40000033378601, accuracy2:0.0, accuracy3:99.80000257492065, loss:0.7798810005187988
40-> accuracy1:89.3999993801117, accuracy2:0.0, accuracy3:100.0, loss:0.7798609733581543
50-> accuracy1:90.20000100135803, accuracy2:0.0, accuracy3:100.0, loss:0.7799049019813538
60-> accuracy1:91.60000085830688, accuracy2:0.0, accuracy3:100.0, loss:0.7799007296562195
70-> accuracy1:92.00000166893005, accuracy2:0.0, accuracy3:100.0, loss:0.780048131942749
80-> accuracy1:92.00000166893005, accuracy2:0.0, accuracy3:100.0, loss:0.7801697254180908
90-> accuracy1:92.00000166893005, accuracy2:0.0, accuracy3:100.0, loss:0.7802574634552002
B(x) = -3.98643700437232e-10*x1**4 + 3.68484854676275e-9*x1**3*x2 + 2.53098244568281e-10*x1**3 + 8.91888781658906e-9*x1**2*x2**2 + 2.89535268026528e-9*x1**2*x2 - 5.24052196978154e-6*x1**2 + 7.08184753630962e-9*x1*x2**3 + 4.94634666583203e-9*x1*x2**2 + 5.68108579581869e-5*x1*x2 - 0.0566181947515349*x1 + 1.74759071619759e-9*x2**4 + 1.65402438724742e-9*x2**3 + 2.44873777086389e-5*x2**2 + 0.61666430465452*x2 + 0.0622118591563515
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:20
0-> accuracy1:92.1999990940094, accuracy2:0.0, accuracy3:100.0, loss:0.7866088151931763
10-> accuracy1:91.39999747276306, accuracy2:0.0, accuracy3:100.0, loss:0.7859716415405273
20-> accuracy1:90.20000100135803, accuracy2:0.0, accuracy3:100.0, loss:0.7841595411300659
30-> accuracy1:89.3999993801117, accuracy2:0.0, accuracy3:100.0, loss:0.7824710607528687
40-> accuracy1:87.99999952316284, accuracy2:0.0, accuracy3:98.4000027179718, loss:0.7808677554130554
50-> accuracy1:87.59999871253967, accuracy2:0.0, accuracy3:97.79999852180481, loss:0.7794483304023743
60-> accuracy1:86.59999966621399, accuracy2:2.391304261982441, accuracy3:96.60000205039978, loss:0.7782593369483948
70-> accuracy1:86.79999709129333, accuracy2:2.4782609194517136, accuracy3:97.00000286102295, loss:0.7777066230773926
80-> accuracy1:87.59999871253967, accuracy2:2.4782609194517136, accuracy3:96.39999866485596, loss:0.7776753306388855
90-> accuracy1:87.59999871253967, accuracy2:2.4782609194517136, accuracy3:96.39999866485596, loss:0.7777743935585022
B(x) = 1.57380408759493e-10*x1**4 + 1.80048435828049e-9*x1**3*x2 + 2.0855727330797e-10*x1**3 + 3.29685550303e-9*x1**2*x2**2 + 1.17588555128205e-9*x1**2*x2 + 4.03989660959839e-6*x1**2 + 2.30417209823351e-9*x1*x2**3 + 1.61709007594705e-9*x1*x2**2 + 3.94379737804062e-5*x1*x2 + 0.07975603883022*x1 + 5.16826653981727e-10*x2**4 + 4.80466462699764e-10*x2**3 + 1.43824988851457e-5*x2**2 + 0.756339049772108*x2 + 0.064941266147023
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
Failed
Elapsed Time: 108.55208076909184
