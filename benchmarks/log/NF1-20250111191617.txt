{'batch_size': 600, 'lr': np.float64(0.18999999999999997), 'loss_weight_continuous': (1, 1, 1), 'R_b': 0.4, 'margin': 0.4, 'DEG_continuous': [2, 4, 4, 2], 'learning_loops': 100, 'max_iter': 20, 'err': 0.02677454477719443}

Mosek can be used normally.
iter:1
0-> accuracy1:0.0, accuracy2:56.333333253860474, accuracy3:0.0, loss:1.1892569065093994
10-> accuracy1:100.0, accuracy2:95.16666531562805, accuracy3:100.0, loss:0.056545354425907135
20-> accuracy1:97.1666693687439, accuracy2:97.00000286102295, accuracy3:82.833331823349, loss:0.4751598834991455
30-> accuracy1:100.0, accuracy2:98.00000190734863, accuracy3:100.0, loss:0.10852330178022385
40-> accuracy1:100.0, accuracy2:99.00000095367432, accuracy3:97.83333539962769, loss:0.036615658551454544
50-> accuracy1:100.0, accuracy2:99.50000047683716, accuracy3:100.0, loss:-0.003343914169818163
60-> accuracy1:100.0, accuracy2:98.16666841506958, accuracy3:100.0, loss:0.062233079224824905
70-> accuracy1:100.0, accuracy2:97.83333539962769, accuracy3:88.66666555404663, loss:0.8736405968666077
80-> accuracy1:91.00000262260437, accuracy2:98.83333444595337, accuracy3:100.0, loss:3.5103769302368164
90-> accuracy1:100.0, accuracy2:94.66666579246521, accuracy3:90.49999713897705, loss:187.09132385253906
B(x) = 1709.09164717624*x1**4 + 1497.51848098642*x1**3*x2 + 3296.37889401602*x1**3 - 1399.88021698516*x1**2*x2**2 - 2236.91755791933*x1**2*x2 + 20383.8216877878*x1**2 + 1424.07576420435*x1*x2**3 + 5860.36844944004*x1*x2**2 + 8106.05152034674*x1*x2 - 17360.5429562718*x1 - 559.432942809891*x2**4 - 1546.90478099318*x2**3 - 19850.3462220456*x2**2 + 14022.2909040327*x2 + 5468.09944534282
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:2
0-> accuracy1:100.0, accuracy2:79.5714259147644, accuracy3:100.0, loss:1702.1939697265625
10-> accuracy1:100.0, accuracy2:83.85714292526245, accuracy3:100.0, loss:64.88492584228516
20-> accuracy1:89.66666460037231, accuracy2:96.42857313156128, accuracy3:100.0, loss:8.246728897094727
30-> accuracy1:100.0, accuracy2:95.4285740852356, accuracy3:100.0, loss:1.8787847757339478
40-> accuracy1:100.0, accuracy2:95.57142853736877, accuracy3:100.0, loss:2.488659381866455
50-> accuracy1:100.0, accuracy2:95.85714340209961, accuracy3:100.0, loss:1.2401082515716553
60-> accuracy1:100.0, accuracy2:97.57142663002014, accuracy3:100.0, loss:0.8412050008773804
70-> accuracy1:100.0, accuracy2:98.28571677207947, accuracy3:100.0, loss:0.5102126002311707
80-> accuracy1:100.0, accuracy2:98.28571677207947, accuracy3:99.83333349227905, loss:0.37821319699287415
90-> accuracy1:100.0, accuracy2:98.14285635948181, accuracy3:100.0, loss:0.3485041856765747
B(x) = 289.173718596991*x1**4 + 415.610047063829*x1**3*x2 + 609.997080222105*x1**3 + 297.285359196807*x1**2*x2**2 + 642.876254630814*x1**2*x2 + 312.016467228863*x1**2 + 30.2046772595281*x1*x2**3 + 495.026511651994*x1*x2**2 + 885.280438632642*x1*x2 - 346.141392771095*x1 + 9.87019669243588*x2**4 + 35.6202480909701*x2**3 + 293.519397292839*x2**2 + 137.671892927854*x2 - 48.0374677825962
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:3
0-> accuracy1:100.0, accuracy2:85.75000166893005, accuracy3:100.0, loss:7.48959493637085
10-> accuracy1:100.0, accuracy2:92.5000011920929, accuracy3:94.66666579246521, loss:4.302286624908447
20-> accuracy1:95.83333134651184, accuracy2:94.87500190734863, accuracy3:100.0, loss:0.7328530550003052
30-> accuracy1:99.33333396911621, accuracy2:94.87500190734863, accuracy3:100.0, loss:0.19123125076293945
40-> accuracy1:100.0, accuracy2:95.6250011920929, accuracy3:100.0, loss:0.1211482360959053
50-> accuracy1:99.16666746139526, accuracy2:97.37499952316284, accuracy3:100.0, loss:0.08656667172908783
60-> accuracy1:100.0, accuracy2:97.87499904632568, accuracy3:100.0, loss:0.04847478121519089
70-> accuracy1:99.6666669845581, accuracy2:97.00000286102295, accuracy3:100.0, loss:0.04545032978057861
80-> accuracy1:100.0, accuracy2:97.87499904632568, accuracy3:100.0, loss:0.01590316742658615
90-> accuracy1:99.83333349227905, accuracy2:97.62499928474426, accuracy3:100.0, loss:0.016402745619416237
B(x) = 26.7862618384553*x1**4 + 58.5552057443899*x1**3*x2 + 71.5101175681033*x1**3 + 51.646828115993*x1**2*x2**2 + 81.7507875300545*x1**2*x2 + 62.1999411006621*x1**2 + 22.1113062870605*x1*x2**3 + 85.7204992228371*x1*x2**2 + 142.065989728995*x1*x2 - 50.3405788071065*x1 + 3.4289295999956*x2**4 + 11.9376341821747*x2**3 + 77.9021315601595*x2**2 + 1.6158624380106*x2 - 8.87188648432605
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:4
0-> accuracy1:100.0, accuracy2:87.00000047683716, accuracy3:100.0, loss:0.3866998851299286
10-> accuracy1:98.16666841506958, accuracy2:87.44444251060486, accuracy3:100.0, loss:0.3088659346103668
20-> accuracy1:98.50000143051147, accuracy2:87.00000047683716, accuracy3:100.0, loss:0.23999391496181488
30-> accuracy1:99.50000047683716, accuracy2:86.44444346427917, accuracy3:100.0, loss:0.19230547547340393
40-> accuracy1:99.00000095367432, accuracy2:85.77777743339539, accuracy3:100.0, loss:0.1650843769311905
50-> accuracy1:98.83333444595337, accuracy2:85.2222204208374, accuracy3:100.0, loss:0.14599937200546265
60-> accuracy1:98.83333444595337, accuracy2:84.7777783870697, accuracy3:99.50000047683716, loss:0.1322672814130783
70-> accuracy1:98.66666793823242, accuracy2:84.6666693687439, accuracy3:100.0, loss:0.12244480848312378
80-> accuracy1:98.83333444595337, accuracy2:84.33333039283752, accuracy3:100.0, loss:0.11502521485090256
90-> accuracy1:99.00000095367432, accuracy2:84.22222137451172, accuracy3:99.6666669845581, loss:0.10966730117797852
B(x) = 5.63635771300383*x1**4 + 10.5207793571296*x1**3*x2 + 12.5532323049163*x1**3 + 10.6341439207831*x1**2*x2**2 + 13.6639969625061*x1**2*x2 + 12.0848693427808*x1**2 + 4.97954453594447*x1*x2**3 + 12.3376634531717*x1*x2**2 + 29.7961938397897*x1*x2 - 10.1730262548115*x1 + 0.898661627472182*x2**4 + 3.00058139459769*x2**3 + 15.46738822409*x2**2 - 2.26895183629265*x2 - 1.15259356506249
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 0 counterexamples!
Add 100 counterexamples!
iter:5
0-> accuracy1:99.00000095367432, accuracy2:75.70000290870667, accuracy3:100.0, loss:0.18480096757411957
10-> accuracy1:97.83333539962769, accuracy2:76.09999775886536, accuracy3:100.0, loss:0.17434324324131012
20-> accuracy1:97.66666889190674, accuracy2:75.59999823570251, accuracy3:100.0, loss:0.16514429450035095
30-> accuracy1:98.16666841506958, accuracy2:74.59999918937683, accuracy3:100.0, loss:0.16023685038089752
40-> accuracy1:97.83333539962769, accuracy2:73.69999885559082, accuracy3:100.0, loss:0.15796013176441193
50-> accuracy1:98.00000190734863, accuracy2:72.50000238418579, accuracy3:100.0, loss:0.15645287930965424
60-> accuracy1:98.33333492279053, accuracy2:72.69999980926514, accuracy3:100.0, loss:0.1574425995349884
70-> accuracy1:98.33333492279053, accuracy2:70.99999785423279, accuracy3:100.0, loss:0.15742480754852295
80-> accuracy1:98.83333444595337, accuracy2:69.90000009536743, accuracy3:100.0, loss:0.1589638739824295
90-> accuracy1:98.83333444595337, accuracy2:68.4000015258789, accuracy3:100.0, loss:0.16122174263000488
B(x) = 0.152513433005467*x1**4 + 1.24096871787444*x1**3*x2 + 1.7454140869726*x1**3 + 2.15403031609988*x1**2*x2**2 + 0.703599342122695*x1**2*x2 + 4.06486947177359*x1**2 + 1.44005275124498*x1*x2**3 + 2.8661666810204*x1*x2**2 + 7.58183003406183*x1*x2 - 3.17091707687576*x1 + 0.226192526091213*x2**4 + 0.71247768229646*x2**3 + 3.63326026500934*x2**2 - 0.273877634798757*x2 - 0.313370929263345
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:6
0-> accuracy1:98.83333444595337, accuracy2:61.27272844314575, accuracy3:100.0, loss:0.2058234065771103
10-> accuracy1:99.33333396911621, accuracy2:59.27272439002991, accuracy3:100.0, loss:0.2060769945383072
20-> accuracy1:100.0, accuracy2:57.363635301589966, accuracy3:100.0, loss:0.20716173946857452
30-> accuracy1:100.0, accuracy2:56.727272272109985, accuracy3:100.0, loss:0.2089686244726181
40-> accuracy1:100.0, accuracy2:55.81818222999573, accuracy3:100.0, loss:0.21001987159252167
50-> accuracy1:100.0, accuracy2:55.27272820472717, accuracy3:100.0, loss:0.2107161283493042
60-> accuracy1:100.0, accuracy2:54.818183183670044, accuracy3:100.0, loss:0.2119925320148468
70-> accuracy1:100.0, accuracy2:54.18182015419006, accuracy3:100.0, loss:0.21334174275398254
80-> accuracy1:100.0, accuracy2:53.727275133132935, accuracy3:100.0, loss:0.21463753283023834
90-> accuracy1:100.0, accuracy2:53.272730112075806, accuracy3:100.0, loss:0.21589744091033936
B(x) = 0.0859895888894798*x1**4 + 0.403681188700185*x1**3*x2 + 0.649358605547039*x1**3 + 0.62497103872163*x1**2*x2**2 + 0.350103054156146*x1**2*x2 + 1.33928517778943*x1**2 + 0.409980732654152*x1*x2**3 + 0.881821317426271*x1*x2**2 + 2.67145526838129*x1*x2 - 1.23628526623746*x1 + 0.0593918217866458*x2**4 + 0.200071541261021*x2**3 + 1.01287342220063*x2**2 + 0.063191010732213*x2 + 0.0915351893255313
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:7
0-> accuracy1:100.0, accuracy2:48.66666793823242, accuracy3:100.0, loss:0.2440016120672226
10-> accuracy1:100.0, accuracy2:48.66666793823242, accuracy3:100.0, loss:0.24526484310626984
20-> accuracy1:100.0, accuracy2:48.66666793823242, accuracy3:100.0, loss:0.24658995866775513
30-> accuracy1:100.0, accuracy2:48.58333468437195, accuracy3:100.0, loss:0.24783110618591309
40-> accuracy1:100.0, accuracy2:48.41666519641876, accuracy3:100.0, loss:0.24908089637756348
50-> accuracy1:100.0, accuracy2:48.249998688697815, accuracy3:100.0, loss:0.2503246068954468
60-> accuracy1:100.0, accuracy2:48.16666543483734, accuracy3:100.0, loss:0.2516116201877594
70-> accuracy1:100.0, accuracy2:48.08333218097687, accuracy3:100.0, loss:0.25296467542648315
80-> accuracy1:100.0, accuracy2:47.999998927116394, accuracy3:100.0, loss:0.25431549549102783
90-> accuracy1:100.0, accuracy2:47.83333241939545, accuracy3:100.0, loss:0.2555367946624756
B(x) = 0.0912908506460962*x1**4 + 0.200185599756706*x1**3*x2 + 0.330124127999478*x1**3 + 0.227189185656711*x1**2*x2**2 + 0.163199136125848*x1**2*x2 + 0.555762552921245*x1**2 + 0.116587203690267*x1*x2**3 + 0.36957009624918*x1*x2**2 + 1.02487830596719*x1*x2 - 0.835946549446632*x1 + 0.0155151799938098*x2**4 + 0.0546701689147464*x2**3 + 0.315886188800176*x2**2 + 0.23524416855826*x2 + 0.11098691559533
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:8
0-> accuracy1:100.0, accuracy2:43.99999976158142, accuracy3:100.0, loss:0.28068628907203674
10-> accuracy1:100.0, accuracy2:43.99999976158142, accuracy3:100.0, loss:0.2820853888988495
20-> accuracy1:100.0, accuracy2:43.84615421295166, accuracy3:100.0, loss:0.28348004817962646
30-> accuracy1:100.0, accuracy2:43.38461458683014, accuracy3:100.0, loss:0.28488391637802124
40-> accuracy1:100.0, accuracy2:43.23076903820038, accuracy3:100.0, loss:0.2863878607749939
50-> accuracy1:100.0, accuracy2:43.1538462638855, accuracy3:100.0, loss:0.2881178855895996
60-> accuracy1:100.0, accuracy2:43.00000071525574, accuracy3:100.0, loss:0.2900755703449249
70-> accuracy1:100.0, accuracy2:42.69230663776398, accuracy3:100.0, loss:0.29207828640937805
80-> accuracy1:100.0, accuracy2:42.230769991874695, accuracy3:100.0, loss:0.29427120089530945
90-> accuracy1:100.0, accuracy2:41.923075914382935, accuracy3:100.0, loss:0.2963857054710388
B(x) = 0.0685463682319044*x1**4 + 0.120502646595108*x1**3*x2 + 0.18464855899864*x1**3 + 0.101149164972872*x1**2*x2**2 + 0.0850544908908041*x1**2*x2 + 0.322750928399177*x1**2 + 0.0365191148579622*x1*x2**3 + 0.182471472847955*x1*x2**2 + 0.469725972956194*x1*x2 - 0.729453419434765*x1 + 0.00415983120843081*x2**4 + 0.0167508758315905*x2**3 + 0.118563473887466*x2**2 + 0.27451796460924*x2 + 0.096465060529937
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:9
0-> accuracy1:100.0, accuracy2:38.6428564786911, accuracy3:100.0, loss:0.3201753497123718
10-> accuracy1:100.0, accuracy2:38.499999046325684, accuracy3:100.0, loss:0.32204824686050415
20-> accuracy1:100.0, accuracy2:38.357141613960266, accuracy3:100.0, loss:0.3236451745033264
30-> accuracy1:100.0, accuracy2:37.71428465843201, accuracy3:100.0, loss:0.32507389783859253
40-> accuracy1:100.0, accuracy2:37.42857277393341, accuracy3:100.0, loss:0.32636451721191406
50-> accuracy1:100.0, accuracy2:37.35714256763458, accuracy3:100.0, loss:0.32712435722351074
60-> accuracy1:100.0, accuracy2:37.71428465843201, accuracy3:100.0, loss:0.3275141716003418
70-> accuracy1:100.0, accuracy2:37.64285743236542, accuracy3:100.0, loss:0.327770471572876
80-> accuracy1:100.0, accuracy2:37.42857277393341, accuracy3:100.0, loss:0.3279300928115845
90-> accuracy1:100.0, accuracy2:37.35714256763458, accuracy3:100.0, loss:0.32798296213150024
B(x) = 0.0359223676038593*x1**4 + 0.0704921089119011*x1**3*x2 + 0.0898916371360981*x1**3 + 0.0345024876006297*x1**2*x2**2 - 0.0457554175029849*x1**2*x2 + 0.323793167555574*x1**2 + 0.0169178704965627*x1*x2**3 + 0.107507407188968*x1*x2**2 + 0.292288086470242*x1*x2 - 0.663875680549567*x1 + 0.000727286810929661*x2**4 + 0.0061901833537888*x2**3 + 0.0447028199904206*x2**2 + 0.326213997442037*x2 + 0.0742726652966454
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
iter:10
0-> accuracy1:100.0, accuracy2:37.35714256763458, accuracy3:100.0, loss:0.32800596952438354
10-> accuracy1:100.0, accuracy2:37.214285135269165, accuracy3:100.0, loss:0.3280278146266937
20-> accuracy1:100.0, accuracy2:37.28571534156799, accuracy3:100.0, loss:0.32794755697250366
30-> accuracy1:100.0, accuracy2:37.214285135269165, accuracy3:100.0, loss:0.32770222425460815
40-> accuracy1:100.0, accuracy2:37.142857909202576, accuracy3:100.0, loss:0.3273441195487976
50-> accuracy1:100.0, accuracy2:37.28571534156799, accuracy3:100.0, loss:0.32700204849243164
60-> accuracy1:100.0, accuracy2:37.28571534156799, accuracy3:100.0, loss:0.3268599510192871
70-> accuracy1:100.0, accuracy2:37.214285135269165, accuracy3:100.0, loss:0.3268006443977356
80-> accuracy1:100.0, accuracy2:37.142857909202576, accuracy3:100.0, loss:0.3268997371196747
90-> accuracy1:100.0, accuracy2:37.07142770290375, accuracy3:100.0, loss:0.32703086733818054
B(x) = 0.0116610455838221*x1**4 + 0.0406327122350414*x1**3*x2 + 0.0460736819255907*x1**3 - 0.0125722836253992*x1**2*x2**2 - 0.147265832152621*x1**2*x2 + 0.472063783393832*x1**2 + 0.0120385381545438*x1*x2**3 + 0.0984824250044297*x1*x2**2 + 0.249917122088061*x1*x2 - 0.732086399013396*x1 - 0.000152370992901785*x2**4 + 0.000341872430393145*x2**3 + 0.0134909301180773*x2**2 + 0.343009013165473*x2 + 0.054482993874047
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
iter:11
0-> accuracy1:100.0, accuracy2:37.00000047683716, accuracy3:100.0, loss:0.3270260691642761
10-> accuracy1:100.0, accuracy2:37.00000047683716, accuracy3:100.0, loss:0.3269040882587433
20-> accuracy1:100.0, accuracy2:37.00000047683716, accuracy3:100.0, loss:0.3267451524734497
30-> accuracy1:100.0, accuracy2:37.00000047683716, accuracy3:100.0, loss:0.3265427350997925
40-> accuracy1:100.0, accuracy2:37.142857909202576, accuracy3:100.0, loss:0.32630568742752075
50-> accuracy1:100.0, accuracy2:37.142857909202576, accuracy3:100.0, loss:0.32608985900878906
60-> accuracy1:100.0, accuracy2:37.142857909202576, accuracy3:100.0, loss:0.3257778286933899
70-> accuracy1:100.0, accuracy2:37.142857909202576, accuracy3:100.0, loss:0.3253965377807617
80-> accuracy1:100.0, accuracy2:37.214285135269165, accuracy3:100.0, loss:0.3250831365585327
90-> accuracy1:100.0, accuracy2:37.214285135269165, accuracy3:100.0, loss:0.3248238265514374
B(x) = -0.0121090028858299*x1**4 + 0.0138619032535375*x1**3*x2 + 0.0377885172492619*x1**3 - 0.0459212580558819*x1**2*x2**2 - 0.162223826232858*x1**2*x2 + 0.585544644276456*x1**2 + 0.00988324504599055*x1*x2**3 + 0.116489978302656*x1*x2**2 + 0.274567107450329*x1*x2 - 0.825507973434895*x1 - 0.000238664430128047*x2**4 - 0.00391391111074119*x2**3 + 0.00206850558114497*x2**2 + 0.314907186201715*x2 + 0.0587714572232715
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
iter:12
0-> accuracy1:100.0, accuracy2:37.214285135269165, accuracy3:100.0, loss:0.32463738322257996
10-> accuracy1:100.0, accuracy2:37.214285135269165, accuracy3:100.0, loss:0.32441315054893494
20-> accuracy1:100.0, accuracy2:37.214285135269165, accuracy3:100.0, loss:0.3242050111293793
30-> accuracy1:100.0, accuracy2:37.28571534156799, accuracy3:100.0, loss:0.3240039348602295
40-> accuracy1:100.0, accuracy2:37.28571534156799, accuracy3:100.0, loss:0.32376161217689514
50-> accuracy1:100.0, accuracy2:37.28571534156799, accuracy3:100.0, loss:0.32353833317756653
60-> accuracy1:100.0, accuracy2:37.28571534156799, accuracy3:100.0, loss:0.3233218789100647
70-> accuracy1:100.0, accuracy2:37.28571534156799, accuracy3:100.0, loss:0.32309237122535706
80-> accuracy1:100.0, accuracy2:37.35714256763458, accuracy3:100.0, loss:0.3228408694267273
90-> accuracy1:100.0, accuracy2:37.42857277393341, accuracy3:100.0, loss:0.3225909471511841
B(x) = -0.0234528094181375*x1**4 + 0.00420699330174687*x1**3*x2 + 0.0424812298423182*x1**3 - 0.0674692584397743*x1**2*x2**2 - 0.146813496129276*x1**2*x2 + 0.654420922123592*x1**2 + 0.00504301329143194*x1*x2**3 + 0.138794635733409*x1*x2**2 + 0.295295970890484*x1*x2 - 0.90212605702384*x1 + 3.20868199891227e-6*x2**4 - 0.00676361609953157*x2**3 - 0.00265451031111801*x2**2 + 0.276959174702979*x2 + 0.0670754192423223
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:13
0-> accuracy1:100.0, accuracy2:34.93333458900452, accuracy3:100.0, loss:0.35570064187049866
10-> accuracy1:100.0, accuracy2:34.99999940395355, accuracy3:100.0, loss:0.3480420410633087
20-> accuracy1:100.0, accuracy2:35.13333201408386, accuracy3:100.0, loss:0.3395139276981354
30-> accuracy1:100.0, accuracy2:35.26666760444641, accuracy3:100.0, loss:0.3300659656524658
40-> accuracy1:100.0, accuracy2:35.53333282470703, accuracy3:100.0, loss:0.3186267912387848
50-> accuracy1:100.0, accuracy2:42.46666729450226, accuracy3:100.0, loss:0.30375829339027405
60-> accuracy1:100.0, accuracy2:42.73333251476288, accuracy3:100.0, loss:0.2944396734237671
70-> accuracy1:100.0, accuracy2:42.73333251476288, accuracy3:100.0, loss:0.2919517457485199
80-> accuracy1:100.0, accuracy2:42.73333251476288, accuracy3:100.0, loss:0.29129722714424133
90-> accuracy1:100.0, accuracy2:42.73333251476288, accuracy3:100.0, loss:0.29100799560546875
B(x) = -0.0428331497342765*x1**4 + 0.073335595949392*x1**3*x2 + 0.113408970844906*x1**3 - 0.145118444513637*x1**2*x2**2 - 0.404580645699227*x1**2*x2 + 0.564228266571256*x1**2 + 0.0126528098916889*x1*x2**3 + 0.383249631253625*x1*x2**2 + 0.544917142486479*x1*x2 - 0.891577014477691*x1 + 0.000678633436893727*x2**4 - 0.0432173885685246*x2**3 - 0.0578332629551808*x2**2 + 0.352762248402475*x2 + 0.126269863500108
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:14
0-> accuracy1:100.0, accuracy2:40.00000059604645, accuracy3:100.0, loss:0.31229788064956665
10-> accuracy1:100.0, accuracy2:40.062499046325684, accuracy3:100.0, loss:0.3124071955680847
20-> accuracy1:100.0, accuracy2:40.187498927116394, accuracy3:100.0, loss:0.31267261505126953
30-> accuracy1:100.0, accuracy2:40.187498927116394, accuracy3:100.0, loss:0.312666118144989
40-> accuracy1:100.0, accuracy2:40.12500047683716, accuracy3:100.0, loss:0.3126390874385834
50-> accuracy1:100.0, accuracy2:40.12500047683716, accuracy3:100.0, loss:0.3125428259372711
60-> accuracy1:100.0, accuracy2:40.12500047683716, accuracy3:100.0, loss:0.3125128746032715
70-> accuracy1:100.0, accuracy2:40.12500047683716, accuracy3:100.0, loss:0.3123232424259186
80-> accuracy1:100.0, accuracy2:40.12500047683716, accuracy3:100.0, loss:0.3123701512813568
90-> accuracy1:100.0, accuracy2:40.187498927116394, accuracy3:100.0, loss:0.3121880888938904
B(x) = -0.0399634013001827*x1**4 + 0.070584681750493*x1**3*x2 + 0.113106299498324*x1**3 - 0.142558151746015*x1**2*x2**2 - 0.402884824091871*x1**2*x2 + 0.545906855310016*x1**2 - 0.00127171364258737*x1*x2**3 + 0.348273339253572*x1*x2**2 + 0.56362193633816*x1*x2 - 0.840416460949237*x1 + 0.00246138060944372*x2**4 - 0.0411652723832351*x2**3 - 0.0599054769553119*x2**2 + 0.366666990435709*x2 + 0.125569273816776
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:15
0-> accuracy1:100.0, accuracy2:37.82352805137634, accuracy3:100.0, loss:0.32994455099105835
10-> accuracy1:100.0, accuracy2:37.82352805137634, accuracy3:100.0, loss:0.32979416847229004
20-> accuracy1:100.0, accuracy2:37.82352805137634, accuracy3:100.0, loss:0.32942599058151245
30-> accuracy1:100.0, accuracy2:37.94117569923401, accuracy3:100.0, loss:0.32906031608581543
40-> accuracy1:100.0, accuracy2:37.94117569923401, accuracy3:100.0, loss:0.32872727513313293
50-> accuracy1:100.0, accuracy2:37.94117569923401, accuracy3:100.0, loss:0.32837769389152527
60-> accuracy1:100.0, accuracy2:37.94117569923401, accuracy3:100.0, loss:0.3280859887599945
70-> accuracy1:100.0, accuracy2:37.94117569923401, accuracy3:100.0, loss:0.3277932107448578
80-> accuracy1:100.0, accuracy2:37.99999952316284, accuracy3:100.0, loss:0.3274230360984802
90-> accuracy1:100.0, accuracy2:38.11764717102051, accuracy3:100.0, loss:0.32717165350914
B(x) = -0.0333243185260276*x1**4 + 0.0600833627005847*x1**3*x2 + 0.108539066231939*x1**3 - 0.135206838463319*x1**2*x2**2 - 0.38025406095024*x1**2*x2 + 0.524431514078105*x1**2 - 0.0260165963652174*x1*x2**3 + 0.29752742926782*x1*x2**2 + 0.628070005527433*x1*x2 - 0.709058203904967*x1 + 0.00583255344210845*x2**4 - 0.0407168624997053*x2**3 - 0.0651647821778977*x2**2 + 0.446115682165961*x2 + 0.117861178557257
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:16
0-> accuracy1:100.0, accuracy2:36.05555593967438, accuracy3:100.0, loss:0.3404006063938141
10-> accuracy1:100.0, accuracy2:36.000001430511475, accuracy3:100.0, loss:0.3402330279350281
20-> accuracy1:100.0, accuracy2:36.000001430511475, accuracy3:100.0, loss:0.33994391560554504
30-> accuracy1:100.0, accuracy2:35.94444394111633, accuracy3:100.0, loss:0.33978042006492615
40-> accuracy1:100.0, accuracy2:36.000001430511475, accuracy3:100.0, loss:0.33954012393951416
50-> accuracy1:100.0, accuracy2:36.000001430511475, accuracy3:100.0, loss:0.33936503529548645
60-> accuracy1:100.0, accuracy2:36.05555593967438, accuracy3:100.0, loss:0.33922079205513
70-> accuracy1:100.0, accuracy2:36.05555593967438, accuracy3:100.0, loss:0.3390100598335266
80-> accuracy1:100.0, accuracy2:36.05555593967438, accuracy3:100.0, loss:0.33877578377723694
90-> accuracy1:100.0, accuracy2:36.05555593967438, accuracy3:100.0, loss:0.33857184648513794
B(x) = -0.0279802421492826*x1**4 + 0.0583596626923806*x1**3*x2 + 0.108424355706603*x1**3 - 0.138531625951614*x1**2*x2**2 - 0.371005390548628*x1**2*x2 + 0.52800701509372*x1**2 - 0.0445719712876768*x1*x2**3 + 0.272602221953351*x1*x2**2 + 0.678949240645624*x1*x2 - 0.636384163147632*x1 + 0.00748577057191959*x2**4 - 0.0401260966633923*x2**3 - 0.0572206310939951*x2**2 + 0.494907332994566*x2 + 0.108229935334719
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:17
0-> accuracy1:100.0, accuracy2:34.15789604187012, accuracy3:100.0, loss:0.3502861559391022
10-> accuracy1:100.0, accuracy2:34.15789604187012, accuracy3:100.0, loss:0.3501517176628113
20-> accuracy1:100.0, accuracy2:34.10526216030121, accuracy3:100.0, loss:0.3500054180622101
30-> accuracy1:100.0, accuracy2:34.10526216030121, accuracy3:100.0, loss:0.34987929463386536
40-> accuracy1:100.0, accuracy2:34.10526216030121, accuracy3:100.0, loss:0.3498235046863556
50-> accuracy1:100.0, accuracy2:34.10526216030121, accuracy3:100.0, loss:0.3497336506843567
60-> accuracy1:100.0, accuracy2:34.10526216030121, accuracy3:100.0, loss:0.34961920976638794
70-> accuracy1:100.0, accuracy2:34.10526216030121, accuracy3:100.0, loss:0.3494921922683716
80-> accuracy1:100.0, accuracy2:34.10526216030121, accuracy3:100.0, loss:0.3494050204753876
90-> accuracy1:100.0, accuracy2:34.10526216030121, accuracy3:100.0, loss:0.3492593467235565
B(x) = -0.023806825033012*x1**4 + 0.0681503802959491*x1**3*x2 + 0.110715041909589*x1**3 - 0.151291008496277*x1**2*x2**2 - 0.390510509878967*x1**2*x2 + 0.541780580230232*x1**2 - 0.0480487925951142*x1*x2**3 + 0.28321801966418*x1*x2**2 + 0.687972294972263*x1*x2 - 0.671583758074684*x1 + 0.00568388029109008*x2**4 - 0.035530585805471*x2**3 - 0.0262967699311949*x2**2 + 0.474191831954012*x2 + 0.101981322001319
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:18
0-> accuracy1:100.0, accuracy2:32.40000009536743, accuracy3:100.0, loss:0.3596491515636444
10-> accuracy1:100.0, accuracy2:32.40000009536743, accuracy3:100.0, loss:0.35955074429512024
20-> accuracy1:100.0, accuracy2:32.40000009536743, accuracy3:100.0, loss:0.3593284487724304
30-> accuracy1:100.0, accuracy2:32.40000009536743, accuracy3:100.0, loss:0.35910800099372864
40-> accuracy1:100.0, accuracy2:32.350000739097595, accuracy3:100.0, loss:0.3589496612548828
50-> accuracy1:100.0, accuracy2:32.40000009536743, accuracy3:100.0, loss:0.3588176667690277
60-> accuracy1:100.0, accuracy2:32.40000009536743, accuracy3:100.0, loss:0.3586934506893158
70-> accuracy1:100.0, accuracy2:32.40000009536743, accuracy3:100.0, loss:0.35857340693473816
80-> accuracy1:100.0, accuracy2:32.44999945163727, accuracy3:100.0, loss:0.35839635133743286
90-> accuracy1:100.0, accuracy2:32.44999945163727, accuracy3:100.0, loss:0.35823482275009155
B(x) = -0.0198440738746714*x1**4 + 0.0779297016389405*x1**3*x2 + 0.109346558896437*x1**3 - 0.168264299884726*x1**2*x2**2 - 0.41992593300471*x1**2*x2 + 0.55963457470465*x1**2 - 0.0494169700670042*x1*x2**3 + 0.291237246266313*x1*x2**2 + 0.692035960823425*x1*x2 - 0.687233402650955*x1 + 0.00391066301124351*x2**4 - 0.0305212576169285*x2**3 + 0.00483108597832213*x2**2 + 0.46772140137644*x2 + 0.0910359452537563
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:19
0-> accuracy1:100.0, accuracy2:30.90476095676422, accuracy3:100.0, loss:0.36739853024482727
10-> accuracy1:100.0, accuracy2:30.90476095676422, accuracy3:100.0, loss:0.3672873377799988
20-> accuracy1:100.0, accuracy2:30.90476095676422, accuracy3:100.0, loss:0.3671511709690094
30-> accuracy1:100.0, accuracy2:30.90476095676422, accuracy3:100.0, loss:0.3669757544994354
40-> accuracy1:100.0, accuracy2:30.90476095676422, accuracy3:100.0, loss:0.36689069867134094
50-> accuracy1:100.0, accuracy2:30.90476095676422, accuracy3:100.0, loss:0.36679184436798096
60-> accuracy1:100.0, accuracy2:30.90476095676422, accuracy3:100.0, loss:0.36661094427108765
70-> accuracy1:100.0, accuracy2:30.85714280605316, accuracy3:100.0, loss:0.3664684295654297
80-> accuracy1:100.0, accuracy2:30.85714280605316, accuracy3:100.0, loss:0.3663603365421295
90-> accuracy1:100.0, accuracy2:30.85714280605316, accuracy3:100.0, loss:0.3662319779396057
B(x) = -0.0154588696300324*x1**4 + 0.079484835599154*x1**3*x2 + 0.101999240652614*x1**3 - 0.171948537051225*x1**2*x2**2 - 0.429352960002137*x1**2*x2 + 0.573481544618199*x1**2 - 0.0542035740729276*x1*x2**3 + 0.284001082565608*x1*x2**2 + 0.714496502199131*x1*x2 - 0.656070926459839*x1 + 0.00361068293599395*x2**4 - 0.0303905843572451*x2**3 + 0.0172743836530984*x2**2 + 0.497691750728367*x2 + 0.0786492221278676
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:20
0-> accuracy1:100.0, accuracy2:29.454544186592102, accuracy3:100.0, loss:0.37423983216285706
10-> accuracy1:100.0, accuracy2:29.454544186592102, accuracy3:100.0, loss:0.3741229176521301
20-> accuracy1:100.0, accuracy2:29.454544186592102, accuracy3:100.0, loss:0.3739526867866516
30-> accuracy1:100.0, accuracy2:29.40908968448639, accuracy3:100.0, loss:0.3737410306930542
40-> accuracy1:100.0, accuracy2:29.40908968448639, accuracy3:100.0, loss:0.37360116839408875
50-> accuracy1:100.0, accuracy2:29.454544186592102, accuracy3:100.0, loss:0.3734269142150879
60-> accuracy1:100.0, accuracy2:29.454544186592102, accuracy3:100.0, loss:0.3733530640602112
70-> accuracy1:100.0, accuracy2:29.40908968448639, accuracy3:100.0, loss:0.37322938442230225
80-> accuracy1:100.0, accuracy2:29.454544186592102, accuracy3:100.0, loss:0.3729117810726166
90-> accuracy1:100.0, accuracy2:29.454544186592102, accuracy3:100.0, loss:0.3727814555168152
B(x) = -0.0128964489802492*x1**4 + 0.0824954842321765*x1**3*x2 + 0.0978671189138016*x1**3 - 0.179297612763618*x1**2*x2**2 - 0.446741279585656*x1**2*x2 + 0.608721287675039*x1**2 - 0.0581100644766038*x1*x2**3 + 0.287794291294486*x1*x2**2 + 0.745722363567463*x1*x2 - 0.654121957148695*x1 + 0.00298334143148283*x2**4 - 0.0292956101128894*x2**3 + 0.0334203058417435*x2**2 + 0.513744581590663*x2 + 0.0665901456855376
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
Failed
Elapsed Time: 112.24422161700204
