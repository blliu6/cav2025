{'batch_size': 700, 'lr': np.float64(0.03), 'loss_weight_continuous': (1, 1, 1), 'R_b': 0.4, 'margin': 0.4, 'DEG_continuous': [2, 4, 4, 2], 'learning_loops': 100, 'max_iter': 20, 'err': 0.02677454477719443}

Mosek can be used normally.
iter:1
0-> accuracy1:0.0, accuracy2:44.71428692340851, accuracy3:0.0, loss:1.1065565347671509
10-> accuracy1:100.0, accuracy2:90.85714221000671, accuracy3:100.0, loss:0.07275956124067307
20-> accuracy1:100.0, accuracy2:96.71428799629211, accuracy3:100.0, loss:0.03243584930896759
30-> accuracy1:100.0, accuracy2:97.85714149475098, accuracy3:100.0, loss:0.015119061805307865
40-> accuracy1:100.0, accuracy2:97.7142870426178, accuracy3:100.0, loss:0.008435089141130447
50-> accuracy1:100.0, accuracy2:98.28571677207947, accuracy3:100.0, loss:0.0045046512968838215
60-> accuracy1:100.0, accuracy2:98.85714054107666, accuracy3:100.0, loss:0.0006132912822067738
70-> accuracy1:100.0, accuracy2:98.85714054107666, accuracy3:100.0, loss:-0.0009808908216655254
80-> accuracy1:100.0, accuracy2:98.85714054107666, accuracy3:100.0, loss:-0.0018794951029121876
90-> accuracy1:100.0, accuracy2:99.00000095367432, accuracy3:100.0, loss:-0.0027449349872767925
B(x) = 1.53459634267211*x1**4 + 6.8889796914209*x1**3*x2 - 1.42162590837692*x1**3 + 7.08825488832586*x1**2*x2**2 - 10.3041634783513*x1**2*x2 + 10.1881604514045*x1**2 + 2.19842409279097*x1*x2**3 - 6.71156829514931*x1*x2**2 + 16.6641468662207*x1*x2 - 3.57204667909245*x1 + 1.23305720103424*x2**4 - 4.0388677742323*x2**3 + 2.50460073181406*x2**2 + 5.47497314393229*x2 - 1.29989589547814
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:2
0-> accuracy1:100.0, accuracy2:86.62499785423279, accuracy3:100.0, loss:0.11726636439561844
10-> accuracy1:100.0, accuracy2:92.25000143051147, accuracy3:100.0, loss:0.07956136763095856
20-> accuracy1:100.0, accuracy2:98.37499856948853, accuracy3:100.0, loss:0.03225571662187576
30-> accuracy1:100.0, accuracy2:98.87499809265137, accuracy3:95.99999785423279, loss:0.05178079754114151
40-> accuracy1:100.0, accuracy2:95.6250011920929, accuracy3:100.0, loss:0.04302406311035156
50-> accuracy1:100.0, accuracy2:97.75000214576721, accuracy3:100.0, loss:0.013874782249331474
60-> accuracy1:100.0, accuracy2:98.62499833106995, accuracy3:100.0, loss:0.00202819611877203
70-> accuracy1:100.0, accuracy2:98.7500011920929, accuracy3:100.0, loss:0.0015715528279542923
80-> accuracy1:100.0, accuracy2:99.00000095367432, accuracy3:100.0, loss:-0.0008176653645932674
90-> accuracy1:100.0, accuracy2:99.00000095367432, accuracy3:100.0, loss:-0.0032201907597482204
B(x) = 1.1786204754405*x1**4 + 5.25361419192105*x1**3*x2 - 0.980900004180252*x1**3 + 5.20661812480963*x1**2*x2**2 - 14.0105523663882*x1**2*x2 + 16.4548201156533*x1**2 + 1.07882596482731*x1*x2**3 - 1.95124637307404*x1*x2**2 + 30.9640510409855*x1*x2 - 8.51855145040125*x1 - 0.0316740120656594*x2**4 - 2.76208165116322*x2**3 + 10.4521021007616*x2**2 + 3.82594769273039*x2 + 1.74579134509578
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:3
0-> accuracy1:100.0, accuracy2:88.11110854148865, accuracy3:100.0, loss:0.22006525099277496
10-> accuracy1:100.0, accuracy2:86.22221946716309, accuracy3:100.0, loss:0.08533672988414764
20-> accuracy1:96.57142758369446, accuracy2:92.00000166893005, accuracy3:100.0, loss:0.06268499791622162
30-> accuracy1:100.0, accuracy2:89.11111354827881, accuracy3:100.0, loss:0.05333154648542404
40-> accuracy1:98.57142567634583, accuracy2:92.88889169692993, accuracy3:100.0, loss:0.047095995396375656
50-> accuracy1:100.0, accuracy2:91.11111164093018, accuracy3:100.0, loss:0.04268385097384453
60-> accuracy1:100.0, accuracy2:93.55555772781372, accuracy3:100.0, loss:0.039401981979608536
70-> accuracy1:100.0, accuracy2:93.77777576446533, accuracy3:100.0, loss:0.03527011349797249
80-> accuracy1:100.0, accuracy2:89.99999761581421, accuracy3:100.0, loss:0.049498550593853
90-> accuracy1:100.0, accuracy2:93.88889074325562, accuracy3:100.0, loss:0.03658300265669823
B(x) = 2.94326872150311*x1**4 + 11.7176965577307*x1**3*x2 - 14.3661802084056*x1**3 + 13.2309490785197*x1**2*x2**2 - 42.9331412576068*x1**2*x2 + 30.3842461963226*x1**2 + 5.0824738388244*x1*x2**3 - 22.7479571526712*x1*x2**2 + 55.6559438209639*x1*x2 - 14.3533549145102*x1 + 0.453126622408716*x2**4 - 3.49360336066445*x2**3 + 23.5987052525622*x2**2 - 4.85531993317922*x2 - 0.80936380512892
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:4
0-> accuracy1:99.71428513526917, accuracy2:84.79999899864197, accuracy3:98.71428608894348, loss:0.14167819917201996
10-> accuracy1:98.42857122421265, accuracy2:81.5999984741211, accuracy3:100.0, loss:0.11905740201473236
20-> accuracy1:98.85714054107666, accuracy2:84.7000002861023, accuracy3:100.0, loss:0.10623273253440857
30-> accuracy1:99.42857027053833, accuracy2:82.59999752044678, accuracy3:99.85714554786682, loss:0.11723176389932632
40-> accuracy1:96.28571271896362, accuracy2:83.79999995231628, accuracy3:100.0, loss:0.11930125951766968
50-> accuracy1:98.14285635948181, accuracy2:82.20000267028809, accuracy3:100.0, loss:0.11314063519239426
60-> accuracy1:97.7142870426178, accuracy2:83.70000123977661, accuracy3:100.0, loss:0.10684694349765778
70-> accuracy1:97.2857117652893, accuracy2:84.29999947547913, accuracy3:100.0, loss:0.10152526199817657
80-> accuracy1:97.42857217788696, accuracy2:84.79999899864197, accuracy3:100.0, loss:0.09872143715620041
90-> accuracy1:97.42857217788696, accuracy2:84.89999771118164, accuracy3:100.0, loss:0.09733019024133682
B(x) = 3.08701616589573*x1**4 + 10.3375796161002*x1**3*x2 - 5.93669517956272*x1**3 + 10.4699708577251*x1**2*x2**2 - 15.3380514104321*x1**2*x2 + 31.7992252741022*x1**2 + 3.48757951798788*x1*x2**3 - 4.50913914183805*x1*x2**2 + 61.4736847900555*x1*x2 - 7.75431716595813*x1 + 0.830982413069843*x2**4 + 2.78802366958144*x2**3 + 26.0778693440157*x2**2 - 2.7441423960139*x2 - 0.586403883437414
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 88 counterexamples!
iter:5
0-> accuracy1:97.85714149475098, accuracy2:77.9411792755127, accuracy3:100.0, loss:0.13941311836242676
10-> accuracy1:97.85714149475098, accuracy2:78.03308963775635, accuracy3:100.0, loss:0.13678424060344696
20-> accuracy1:95.99999785423279, accuracy2:78.86029481887817, accuracy3:100.0, loss:0.13408099114894867
30-> accuracy1:96.71428799629211, accuracy2:78.76838445663452, accuracy3:100.0, loss:0.13016913831233978
40-> accuracy1:97.57142663002014, accuracy2:78.49264740943909, accuracy3:100.0, loss:0.13001465797424316
50-> accuracy1:97.14285731315613, accuracy2:79.31985259056091, accuracy3:100.0, loss:0.12783578038215637
60-> accuracy1:95.99999785423279, accuracy2:79.13603186607361, accuracy3:100.0, loss:0.13110913336277008
70-> accuracy1:96.8571424484253, accuracy2:78.86029481887817, accuracy3:100.0, loss:0.1269022822380066
80-> accuracy1:97.57142663002014, accuracy2:79.22794222831726, accuracy3:100.0, loss:0.134800523519516
90-> accuracy1:97.42857217788696, accuracy2:77.02205777168274, accuracy3:100.0, loss:0.1256735920906067
B(x) = 4.61748655963284*x1**4 + 12.3176216572971*x1**3*x2 - 16.6766952581196*x1**3 + 10.1408932735193*x1**2*x2**2 - 22.3423737978254*x1**2*x2 + 38.8546630067501*x1**2 + 5.19943072311539*x1*x2**3 + 13.3979345923786*x1*x2**2 + 72.0676512744136*x1*x2 - 7.91530752610569*x1 + 2.55220367102602*x2**4 + 15.5459870589079*x2**3 + 31.6034485045239*x2**2 - 3.39844713602046*x2 - 0.600886903340424
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 0 counterexamples!
Add 80 counterexamples!
iter:6
0-> accuracy1:96.71428799629211, accuracy2:73.45890402793884, accuracy3:99.71428513526917, loss:0.16549891233444214
10-> accuracy1:97.85714149475098, accuracy2:71.40411138534546, accuracy3:100.0, loss:0.15834692120552063
20-> accuracy1:98.14285635948181, accuracy2:71.23287916183472, accuracy3:100.0, loss:0.15264619886875153
30-> accuracy1:96.71428799629211, accuracy2:71.66095972061157, accuracy3:100.0, loss:0.1496959924697876
40-> accuracy1:97.2857117652893, accuracy2:72.94520735740662, accuracy3:99.71428513526917, loss:0.14836101233959198
50-> accuracy1:98.42857122421265, accuracy2:73.8869845867157, accuracy3:100.0, loss:0.14149093627929688
60-> accuracy1:98.14285635948181, accuracy2:77.48287916183472, accuracy3:99.57143068313599, loss:0.12392372637987137
70-> accuracy1:100.0, accuracy2:91.18150472640991, accuracy3:98.71428608894348, loss:0.0867384597659111
80-> accuracy1:100.0, accuracy2:90.9246563911438, accuracy3:100.0, loss:0.07643750309944153
90-> accuracy1:100.0, accuracy2:91.01027250289917, accuracy3:99.28571581840515, loss:0.06678006052970886
B(x) = 1.07409418149515*x1**4 + 4.12903025949294*x1**3*x2 - 3.21434433699576*x1**3 + 6.16717344435657*x1**2*x2**2 + 1.16463433456026*x1**2*x2 + 12.2731980315779*x1**2 + 10.4699481446949*x1*x2**3 + 26.0641683607554*x1*x2**2 + 23.7077390615031*x1*x2 - 5.50772412669673*x1 + 6.91367936467108*x2**4 + 17.1340427578035*x2**3 + 10.3763322625467*x2**2 - 1.54372749978924*x2 + 0.932782633987663
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:7
0-> accuracy1:100.0, accuracy2:83.59621167182922, accuracy3:100.0, loss:0.13564026355743408
10-> accuracy1:100.0, accuracy2:83.43848586082458, accuracy3:100.0, loss:0.12318837642669678
20-> accuracy1:100.0, accuracy2:83.35962295532227, accuracy3:100.0, loss:0.13527686893939972
30-> accuracy1:100.0, accuracy2:83.5173487663269, accuracy3:100.0, loss:0.12787525355815887
40-> accuracy1:100.0, accuracy2:83.35962295532227, accuracy3:100.0, loss:0.12308408319950104
50-> accuracy1:100.0, accuracy2:83.12302827835083, accuracy3:100.0, loss:0.12136894464492798
60-> accuracy1:100.0, accuracy2:83.20189118385315, accuracy3:100.0, loss:0.12307213246822357
70-> accuracy1:100.0, accuracy2:83.35962295532227, accuracy3:100.0, loss:0.117640420794487
80-> accuracy1:100.0, accuracy2:83.43848586082458, accuracy3:100.0, loss:0.11827553808689117
90-> accuracy1:100.0, accuracy2:83.43848586082458, accuracy3:100.0, loss:0.11607393622398376
B(x) = 0.313074791435289*x1**4 + 2.60990426027172*x1**3*x2 + 0.800725081951189*x1**3 + 7.38368419610862*x1**2*x2**2 + 5.48629582773383*x1**2*x2 + 2.35612378057192*x1**2 + 8.15453795571988*x1*x2**3 + 9.58929315719514*x1*x2**2 + 3.31545784809081*x1*x2 - 1.51362624559149*x1 + 2.86549104711705*x2**4 + 4.30934516730807*x2**3 + 2.42895738834951*x2**2 + 1.1241297204818*x2 + 0.486191346373353
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:8
0-> accuracy1:100.0, accuracy2:77.26607918739319, accuracy3:100.0, loss:0.1629171371459961
10-> accuracy1:100.0, accuracy2:77.11988091468811, accuracy3:100.0, loss:0.16164036095142365
20-> accuracy1:100.0, accuracy2:76.97368264198303, accuracy3:100.0, loss:0.16083283722400665
30-> accuracy1:100.0, accuracy2:76.97368264198303, accuracy3:100.0, loss:0.16105490922927856
40-> accuracy1:100.0, accuracy2:77.04678177833557, accuracy3:100.0, loss:0.16073743999004364
50-> accuracy1:100.0, accuracy2:77.04678177833557, accuracy3:100.0, loss:0.16182775795459747
60-> accuracy1:100.0, accuracy2:77.04678177833557, accuracy3:100.0, loss:0.16099093854427338
70-> accuracy1:100.0, accuracy2:77.19298005104065, accuracy3:100.0, loss:0.16126827895641327
80-> accuracy1:100.0, accuracy2:76.75438523292542, accuracy3:100.0, loss:0.162115678191185
90-> accuracy1:100.0, accuracy2:77.11988091468811, accuracy3:100.0, loss:0.16112662851810455
B(x) = 0.43712047477912*x1**4 + 3.30554886344746*x1**3*x2 + 0.923928113789057*x1**3 + 9.65547724771764*x1**2*x2**2 + 7.51654215089459*x1**2*x2 + 2.67451310973039*x1**2 + 11.9816985429534*x1*x2**3 + 14.1090409016333*x1*x2**2 + 3.8758056325352*x1*x2 - 1.62936318212247*x1 + 4.89665778882542*x2**4 + 6.86207382054861*x2**3 + 2.5513894180601*x2**2 + 0.855832391895916*x2 + 0.459499642946175
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:9
0-> accuracy1:100.0, accuracy2:71.79836630821228, accuracy3:100.0, loss:0.2016960233449936
10-> accuracy1:100.0, accuracy2:71.79836630821228, accuracy3:100.0, loss:0.20131085813045502
20-> accuracy1:100.0, accuracy2:71.79836630821228, accuracy3:100.0, loss:0.2009507566690445
30-> accuracy1:100.0, accuracy2:71.79836630821228, accuracy3:100.0, loss:0.20113471150398254
40-> accuracy1:100.0, accuracy2:71.79836630821228, accuracy3:100.0, loss:0.20147889852523804
50-> accuracy1:100.0, accuracy2:71.79836630821228, accuracy3:100.0, loss:0.20106373727321625
60-> accuracy1:100.0, accuracy2:71.79836630821228, accuracy3:100.0, loss:0.2010601907968521
70-> accuracy1:100.0, accuracy2:71.79836630821228, accuracy3:100.0, loss:0.20121125876903534
80-> accuracy1:100.0, accuracy2:71.79836630821228, accuracy3:100.0, loss:0.20087185502052307
90-> accuracy1:100.0, accuracy2:71.79836630821228, accuracy3:100.0, loss:0.20094692707061768
B(x) = 0.547869686587239*x1**4 + 3.76666507100028*x1**3*x2 + 0.892419424810462*x1**3 + 10.2642576234855*x1**2*x2**2 + 7.82944149704567*x1**2*x2 + 2.74228483288332*x1**2 + 12.3137964282909*x1*x2**3 + 14.7864410304695*x1*x2**2 + 3.98715095242647*x1*x2 - 1.60734407309452*x1 + 4.95326682887468*x2**4 + 7.26131493284843*x2**3 + 2.55662765345634*x2**2 + 0.768555682944753*x2 + 0.438755560836476
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:10
0-> accuracy1:100.0, accuracy2:67.21938848495483, accuracy3:100.0, loss:0.23692402243614197
10-> accuracy1:100.0, accuracy2:67.21938848495483, accuracy3:100.0, loss:0.2365962415933609
20-> accuracy1:100.0, accuracy2:67.21938848495483, accuracy3:100.0, loss:0.23674362897872925
30-> accuracy1:100.0, accuracy2:67.21938848495483, accuracy3:100.0, loss:0.23654137551784515
40-> accuracy1:100.0, accuracy2:67.0918345451355, accuracy3:100.0, loss:0.23687945306301117
50-> accuracy1:100.0, accuracy2:67.21938848495483, accuracy3:100.0, loss:0.23667676746845245
60-> accuracy1:100.0, accuracy2:67.21938848495483, accuracy3:100.0, loss:0.23660066723823547
70-> accuracy1:100.0, accuracy2:67.0918345451355, accuracy3:100.0, loss:0.23695263266563416
80-> accuracy1:100.0, accuracy2:67.21938848495483, accuracy3:100.0, loss:0.236395925283432
90-> accuracy1:100.0, accuracy2:67.21938848495483, accuracy3:100.0, loss:0.2366730123758316
B(x) = 0.610666056380556*x1**4 + 3.87918398815344*x1**3*x2 + 0.920718852113877*x1**3 + 10.0013053769483*x1**2*x2**2 + 7.52981992894283*x1**2*x2 + 2.31825900034374*x1**2 + 11.6461364977315*x1*x2**3 + 13.9006188801566*x1*x2**2 + 3.15686220870217*x1*x2 - 1.48942286127241*x1 + 4.60155476535257*x2**4 + 6.74962840395439*x2**3 + 2.1527594974141*x2**2 + 0.808066118456983*x2 + 0.422037061817603
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:11
0-> accuracy1:100.0, accuracy2:63.18944692611694, accuracy3:100.0, loss:0.268137663602829
10-> accuracy1:100.0, accuracy2:63.18944692611694, accuracy3:100.0, loss:0.2687652111053467
20-> accuracy1:100.0, accuracy2:63.129496574401855, accuracy3:100.0, loss:0.26812079548835754
30-> accuracy1:100.0, accuracy2:63.18944692611694, accuracy3:100.0, loss:0.26807573437690735
40-> accuracy1:100.0, accuracy2:63.18944692611694, accuracy3:100.0, loss:0.2681520879268646
50-> accuracy1:100.0, accuracy2:63.18944692611694, accuracy3:100.0, loss:0.2680886685848236
60-> accuracy1:100.0, accuracy2:63.18944692611694, accuracy3:100.0, loss:0.2679533362388611
70-> accuracy1:100.0, accuracy2:63.18944692611694, accuracy3:100.0, loss:0.26800501346588135
80-> accuracy1:100.0, accuracy2:63.18944692611694, accuracy3:100.0, loss:0.2681792080402374
90-> accuracy1:100.0, accuracy2:63.18944692611694, accuracy3:100.0, loss:0.2680971622467041
B(x) = 0.724412404157995*x1**4 + 4.22473465185129*x1**3*x2 + 0.856090867344543*x1**3 + 10.2605222494243*x1**2*x2**2 + 6.92522207199958*x1**2*x2 + 1.98400236816157*x1**2 + 11.5489063722264*x1*x2**3 + 12.8301299311327*x1*x2**2 + 2.57496309861514*x1*x2 - 1.40146457540675*x1 + 4.49204383997323*x2**4 + 6.22787319973018*x2**3 + 1.78552801112983*x2**2 + 0.799464141834479*x2 + 0.414217469784775
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:12
0-> accuracy1:100.0, accuracy2:59.61538553237915, accuracy3:100.0, loss:0.296265184879303
10-> accuracy1:100.0, accuracy2:59.558820724487305, accuracy3:100.0, loss:0.29599323868751526
20-> accuracy1:100.0, accuracy2:59.558820724487305, accuracy3:100.0, loss:0.295881450176239
30-> accuracy1:100.0, accuracy2:59.61538553237915, accuracy3:100.0, loss:0.29591691493988037
40-> accuracy1:100.0, accuracy2:59.61538553237915, accuracy3:100.0, loss:0.2957698106765747
50-> accuracy1:100.0, accuracy2:59.61538553237915, accuracy3:100.0, loss:0.29595351219177246
60-> accuracy1:100.0, accuracy2:59.61538553237915, accuracy3:100.0, loss:0.29619142413139343
70-> accuracy1:100.0, accuracy2:59.558820724487305, accuracy3:100.0, loss:0.2962160110473633
80-> accuracy1:100.0, accuracy2:59.558820724487305, accuracy3:100.0, loss:0.29606255888938904
90-> accuracy1:100.0, accuracy2:59.61538553237915, accuracy3:100.0, loss:0.29598066210746765
B(x) = 1.0009127469361*x1**4 + 5.26137325894588*x1**3*x2 + 0.644897502440807*x1**3 + 11.7341432439218*x1**2*x2**2 + 6.40086273300394*x1**2*x2 + 1.79369615456649*x1**2 + 12.3353772710878*x1*x2**3 + 12.0357226651174*x1*x2**2 + 2.12953740650742*x1*x2 - 1.29182130537056*x1 + 4.60033225253507*x2**4 + 5.82284264606164*x2**3 + 1.5499550937042*x2**2 + 0.862266789908572*x2 + 0.394119821797725
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
iter:13
0-> accuracy1:100.0, accuracy2:59.558820724487305, accuracy3:100.0, loss:0.2957921326160431
10-> accuracy1:100.0, accuracy2:59.61538553237915, accuracy3:100.0, loss:0.29578831791877747
20-> accuracy1:100.0, accuracy2:59.61538553237915, accuracy3:100.0, loss:0.29555225372314453
30-> accuracy1:100.0, accuracy2:59.50226187705994, accuracy3:100.0, loss:0.2959745228290558
40-> accuracy1:100.0, accuracy2:59.61538553237915, accuracy3:100.0, loss:0.295354425907135
50-> accuracy1:100.0, accuracy2:59.61538553237915, accuracy3:100.0, loss:0.29537591338157654
60-> accuracy1:100.0, accuracy2:59.61538553237915, accuracy3:100.0, loss:0.2954063415527344
70-> accuracy1:100.0, accuracy2:59.61538553237915, accuracy3:100.0, loss:0.2953173518180847
80-> accuracy1:100.0, accuracy2:59.38913822174072, accuracy3:100.0, loss:0.29583612084388733
90-> accuracy1:100.0, accuracy2:59.61538553237915, accuracy3:100.0, loss:0.295529305934906
B(x) = 1.36900363599698*x1**4 + 6.45017307308103*x1**3*x2 + 0.283718032684585*x1**3 + 13.240935739824*x1**2*x2**2 + 5.5991188076997*x1**2*x2 + 1.81018410493201*x1**2 + 13.2212451150006*x1*x2**3 + 11.4494754208693*x1*x2**2 + 2.09044818320504*x1*x2 - 1.28072222655615*x1 + 4.80765867331212*x2**4 + 5.68997874280763*x2**3 + 1.50730245271836*x2**2 + 0.868460170722799*x2 + 0.397381805312739
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:14
0-> accuracy1:100.0, accuracy2:56.37044906616211, accuracy3:100.0, loss:0.3223179578781128
10-> accuracy1:100.0, accuracy2:56.42397999763489, accuracy3:100.0, loss:0.3220185935497284
20-> accuracy1:100.0, accuracy2:56.42397999763489, accuracy3:100.0, loss:0.32218968868255615
30-> accuracy1:100.0, accuracy2:56.37044906616211, accuracy3:100.0, loss:0.32177987694740295
40-> accuracy1:100.0, accuracy2:56.42397999763489, accuracy3:100.0, loss:0.32136672735214233
50-> accuracy1:100.0, accuracy2:56.37044906616211, accuracy3:100.0, loss:0.3212835490703583
60-> accuracy1:100.0, accuracy2:56.42397999763489, accuracy3:100.0, loss:0.32117873430252075
70-> accuracy1:100.0, accuracy2:56.31691813468933, accuracy3:100.0, loss:0.32108423113822937
80-> accuracy1:100.0, accuracy2:56.37044906616211, accuracy3:100.0, loss:0.3210035264492035
90-> accuracy1:100.0, accuracy2:56.477516889572144, accuracy3:100.0, loss:0.320993036031723
B(x) = 2.08298271503732*x1**4 + 8.59477297559931*x1**3*x2 - 1.00239622497683*x1**3 + 15.7216877433823*x1**2*x2**2 + 3.08450875753917*x1**2*x2 + 2.58197630116657*x1**2 + 14.5290944083006*x1*x2**3 + 9.78510505161101*x1*x2**2 + 3.25365040438699*x1*x2 - 1.27333724613227*x1 + 5.06430721197735*x2**4 + 5.31587371213339*x2**3 + 1.96860045220313*x2**2 + 0.88236926805159*x2 + 0.379330834457828
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:15
0-> accuracy1:100.0, accuracy2:53.607726097106934, accuracy3:100.0, loss:0.3449435830116272
10-> accuracy1:100.0, accuracy2:53.50610017776489, accuracy3:100.0, loss:0.34458261728286743
20-> accuracy1:100.0, accuracy2:53.55691313743591, accuracy3:100.0, loss:0.3445267975330353
30-> accuracy1:100.0, accuracy2:53.45528721809387, accuracy3:100.0, loss:0.3446618914604187
40-> accuracy1:100.0, accuracy2:53.35366129875183, accuracy3:100.0, loss:0.3449215888977051
50-> accuracy1:100.0, accuracy2:53.35366129875183, accuracy3:100.0, loss:0.34484612941741943
60-> accuracy1:100.0, accuracy2:53.607726097106934, accuracy3:100.0, loss:0.3449995815753937
70-> accuracy1:100.0, accuracy2:53.35366129875183, accuracy3:100.0, loss:0.345148503780365
80-> accuracy1:100.0, accuracy2:53.15040946006775, accuracy3:100.0, loss:0.35280346870422363
90-> accuracy1:100.0, accuracy2:53.50610017776489, accuracy3:100.0, loss:0.36172980070114136
B(x) = 2.70204160238672*x1**4 + 10.7258792021161*x1**3*x2 - 2.0007205692322*x1**3 + 17.4957508363515*x1**2*x2**2 - 1.32616634090736*x1**2*x2 + 1.98557563171941*x1**2 + 13.7202960838719*x1*x2**3 + 4.48038576945203*x1*x2**2 + 3.01881883843062*x1*x2 - 0.998598723038*x1 + 4.24744170631677*x2**4 + 3.38762108399368*x2**3 + 1.64503496109506*x2**2 + 0.777480930831405*x2 + 0.375621254528332
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:16
0-> accuracy1:100.0, accuracy2:50.58026909828186, accuracy3:100.0, loss:0.37703055143356323
10-> accuracy1:100.0, accuracy2:50.67698359489441, accuracy3:100.0, loss:0.3714063763618469
20-> accuracy1:100.0, accuracy2:50.87040662765503, accuracy3:100.0, loss:0.3681304156780243
30-> accuracy1:100.0, accuracy2:50.822049379348755, accuracy3:100.0, loss:0.3665311932563782
40-> accuracy1:100.0, accuracy2:50.87040662765503, accuracy3:100.0, loss:0.3688727617263794
50-> accuracy1:100.0, accuracy2:50.87040662765503, accuracy3:100.0, loss:0.36493951082229614
60-> accuracy1:100.0, accuracy2:50.918763875961304, accuracy3:100.0, loss:0.3662504553794861
70-> accuracy1:100.0, accuracy2:50.435203313827515, accuracy3:100.0, loss:0.3756362199783325
80-> accuracy1:100.0, accuracy2:51.015472412109375, accuracy3:100.0, loss:0.3747798204421997
90-> accuracy1:100.0, accuracy2:50.53191781044006, accuracy3:100.0, loss:0.37258198857307434
B(x) = 2.470642770719*x1**4 + 9.9302375360063*x1**3*x2 - 1.8884959153993*x1**3 + 16.0678354935195*x1**2*x2**2 - 1.73321714526605*x1**2*x2 + 1.91243581786824*x1**2 + 12.3197720785429*x1*x2**3 + 2.65144795604071*x1*x2**2 + 2.17285629635785*x1*x2 - 1.10441697804142*x1 + 3.60592470505301*x2**4 + 2.14465214853243*x2**3 + 1.35344013379955*x2**2 + 0.893892511208394*x2 + 0.346223557413972
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:17
0-> accuracy1:100.0, accuracy2:48.43173325061798, accuracy3:100.0, loss:0.38943278789520264
10-> accuracy1:100.0, accuracy2:48.385608196258545, accuracy3:100.0, loss:0.38688310980796814
20-> accuracy1:100.0, accuracy2:48.29335808753967, accuracy3:100.0, loss:0.3847993314266205
30-> accuracy1:100.0, accuracy2:48.43173325061798, accuracy3:100.0, loss:0.38335075974464417
40-> accuracy1:100.0, accuracy2:48.47785830497742, accuracy3:100.0, loss:0.3821724057197571
50-> accuracy1:100.0, accuracy2:48.57011139392853, accuracy3:100.0, loss:0.38179585337638855
60-> accuracy1:100.0, accuracy2:48.52398633956909, accuracy3:100.0, loss:0.38581135869026184
70-> accuracy1:100.0, accuracy2:48.43173325061798, accuracy3:100.0, loss:0.3876306414604187
80-> accuracy1:100.0, accuracy2:48.385608196258545, accuracy3:100.0, loss:0.38519078493118286
90-> accuracy1:100.0, accuracy2:48.33948314189911, accuracy3:100.0, loss:0.38376596570014954
B(x) = 2.9835042349177*x1**4 + 12.3764465460506*x1**3*x2 - 1.5923624822066*x1**3 + 21.155128311156*x1**2*x2**2 + 0.539235740954601*x1**2*x2 + 2.60210783167435*x1**2 + 17.5683593989757*x1*x2**3 + 6.39119833842128*x1*x2**2 + 2.82806375492407*x1*x2 - 1.4633376924034*x1 + 5.5587479057922*x2**4 + 3.92698161810548*x2**3 + 1.70356824580063*x2**2 + 0.749060291139704*x2 + 0.344401505278896
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:18
0-> accuracy1:100.0, accuracy2:46.384480595588684, accuracy3:100.0, loss:0.3979542851448059
10-> accuracy1:100.0, accuracy2:46.34038805961609, accuracy3:100.0, loss:0.3970627784729004
20-> accuracy1:100.0, accuracy2:46.20811343193054, accuracy3:100.0, loss:0.3958926200866699
30-> accuracy1:100.0, accuracy2:38.62433731555939, accuracy3:100.0, loss:0.39340198040008545
40-> accuracy1:99.57143068313599, accuracy2:31.790122389793396, accuracy3:100.0, loss:0.3707940876483917
50-> accuracy1:91.8571412563324, accuracy2:83.24515223503113, accuracy3:100.0, loss:0.15710116922855377
60-> accuracy1:84.28571224212646, accuracy2:83.90652537345886, accuracy3:100.0, loss:0.15465855598449707
70-> accuracy1:100.0, accuracy2:83.55379104614258, accuracy3:100.0, loss:0.12602195143699646
80-> accuracy1:97.42857217788696, accuracy2:84.70017910003662, accuracy3:100.0, loss:0.10634168982505798
90-> accuracy1:97.7142870426178, accuracy2:85.4938268661499, accuracy3:100.0, loss:0.10024936497211456
B(x) = 12.5779658484067*x1**4 + 52.0258898452117*x1**3*x2 - 8.52933163174519*x1**3 + 84.0170845124078*x1**2*x2**2 - 2.08571218585949*x1**2*x2 + 27.3571958739506*x1**2 + 65.0727012341646*x1*x2**3 + 30.0595832288706*x1*x2**2 + 48.9414923128015*x1*x2 - 7.26101005636164*x1 + 20.144076684016*x2**4 + 21.192580993842*x2**3 + 20.6350629584583*x2**2 - 3.78315326632876*x2 - 0.423713374052418
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 21 counterexamples!
Add 86 counterexamples!
iter:19
0-> accuracy1:94.59084868431091, accuracy2:82.88020491600037, accuracy3:100.0, loss:0.12929777801036835
10-> accuracy1:94.45214867591858, accuracy2:83.94222855567932, accuracy3:100.0, loss:0.11958784610033035
20-> accuracy1:95.14563083648682, accuracy2:84.40951704978943, accuracy3:100.0, loss:0.11371738463640213
30-> accuracy1:93.48127841949463, accuracy2:85.30161380767822, accuracy3:100.0, loss:0.10894597321748734
40-> accuracy1:95.14563083648682, accuracy2:85.04672646522522, accuracy3:100.0, loss:0.1118394210934639
50-> accuracy1:94.03606057167053, accuracy2:86.4061176776886, accuracy3:100.0, loss:0.10861733555793762
60-> accuracy1:94.59084868431091, accuracy2:86.57603859901428, accuracy3:100.0, loss:0.1106206476688385
70-> accuracy1:95.7004189491272, accuracy2:86.6185188293457, accuracy3:100.0, loss:0.10750588029623032
80-> accuracy1:95.14563083648682, accuracy2:85.98130941390991, accuracy3:100.0, loss:0.11169439554214478
90-> accuracy1:94.45214867591858, accuracy2:86.53355836868286, accuracy3:100.0, loss:0.10809307545423508
B(x) = 23.8023098389119*x1**4 + 97.9474632021467*x1**3*x2 - 19.5996402945706*x1**3 + 172.20214031232*x1**2*x2**2 + 18.919401725241*x1**2*x2 + 56.3353267441545*x1**2 + 155.171878818247*x1*x2**3 + 116.001588330785*x1*x2**2 + 94.5126335012199*x1*x2 - 16.5296437273449*x1 + 56.279733103102*x2**4 + 70.1742150329288*x2**3 + 37.2719154119658*x2**2 - 11.0687808182323*x2 + 0.0800996876621301
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 81 counterexamples!
iter:20
0-> accuracy1:95.83911299705505, accuracy2:83.69609713554382, accuracy3:100.0, loss:0.12900623679161072
10-> accuracy1:93.61997246742249, accuracy2:83.36755633354187, accuracy3:100.0, loss:0.12846767902374268
20-> accuracy1:94.86823678016663, accuracy2:83.32648873329163, accuracy3:100.0, loss:0.12795621156692505
30-> accuracy1:93.48127841949463, accuracy2:83.53182673454285, accuracy3:100.0, loss:0.1258440911769867
40-> accuracy1:93.89736652374268, accuracy2:83.16221833229065, accuracy3:100.0, loss:0.1301724910736084
50-> accuracy1:93.61997246742249, accuracy2:83.28542113304138, accuracy3:100.0, loss:0.1295183300971985
60-> accuracy1:93.48127841949463, accuracy2:83.08008313179016, accuracy3:100.0, loss:0.1270364224910736
70-> accuracy1:93.89736652374268, accuracy2:83.08008313179016, accuracy3:100.0, loss:0.1273871809244156
80-> accuracy1:93.48127841949463, accuracy2:83.44969153404236, accuracy3:100.0, loss:0.12694552540779114
90-> accuracy1:93.61997246742249, accuracy2:82.99794793128967, accuracy3:100.0, loss:0.12743444740772247
B(x) = 21.8240645995426*x1**4 + 93.620282372022*x1**3*x2 - 12.9112600259608*x1**3 + 168.966634065171*x1**2*x2**2 + 30.907809761856*x1**2*x2 + 50.9845782752339*x1**2 + 151.321602645436*x1*x2**3 + 116.384419726216*x1*x2**2 + 86.5601022132551*x1*x2 - 14.3752424196228*x1 + 53.3413707892936*x2**4 + 66.3554277153245*x2**3 + 34.9760534923518*x2**2 - 9.42051935321715*x2 - 0.152465476853023
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 1 counterexamples!
Add 78 counterexamples!
Failed
Elapsed Time: 109.41982860094868
