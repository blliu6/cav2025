{'batch_size': 900, 'lr': np.float64(0.03), 'loss_weight_continuous': (1, 1, 1), 'R_b': 0.4, 'margin': 0.4, 'DEG_continuous': [2, 4, 4, 2], 'learning_loops': 100, 'max_iter': 20, 'err': 0.02677454477719443}

Mosek can be used normally.
iter:1
0-> accuracy1:0.0, accuracy2:30.000001192092896, accuracy3:0.0, loss:1.4056824445724487
10-> accuracy1:100.0, accuracy2:88.55555653572083, accuracy3:100.0, loss:0.0906163677573204
20-> accuracy1:100.0, accuracy2:97.77777791023254, accuracy3:100.0, loss:0.00910232961177826
30-> accuracy1:100.0, accuracy2:98.88888597488403, accuracy3:100.0, loss:0.003986929543316364
40-> accuracy1:100.0, accuracy2:98.77777695655823, accuracy3:100.0, loss:-0.0014597591944038868
50-> accuracy1:100.0, accuracy2:99.2222249507904, accuracy3:100.0, loss:-0.004951672162860632
60-> accuracy1:100.0, accuracy2:99.44444298744202, accuracy3:100.0, loss:-0.006522994488477707
70-> accuracy1:100.0, accuracy2:99.44444298744202, accuracy3:100.0, loss:-0.006655941717326641
80-> accuracy1:100.0, accuracy2:99.33333396911621, accuracy3:100.0, loss:-0.007323430851101875
90-> accuracy1:100.0, accuracy2:99.44444298744202, accuracy3:100.0, loss:-0.0076282997615635395
B(x) = 0.542668397348923*x1**4 + 2.38110584340373*x1**3*x2 + 2.26046956293471*x1**3 + 2.13055770866632*x1**2*x2**2 + 3.02074151116972*x1**2*x2 + 4.67522298938851*x1**2 + 2.50851297801449*x1*x2**3 + 4.98236000603584*x1*x2**2 + 5.26174057159571*x1*x2 - 3.58539846786544*x1 + 0.213384785986975*x2**4 - 0.434857302417954*x2**3 + 5.55655248264863*x2**2 + 5.87478444192459*x2 + 1.48348417470835
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:2
0-> accuracy1:100.0, accuracy2:89.49999809265137, accuracy3:100.0, loss:0.11061114817857742
10-> accuracy1:100.0, accuracy2:88.20000290870667, accuracy3:100.0, loss:0.07126149535179138
20-> accuracy1:100.0, accuracy2:98.69999885559082, accuracy3:100.0, loss:0.00308558763936162
30-> accuracy1:100.0, accuracy2:98.69999885559082, accuracy3:100.0, loss:0.003442788263782859
40-> accuracy1:100.0, accuracy2:99.00000095367432, accuracy3:100.0, loss:-0.003741762600839138
50-> accuracy1:100.0, accuracy2:99.29999709129333, accuracy3:100.0, loss:-0.007036486640572548
60-> accuracy1:100.0, accuracy2:99.29999709129333, accuracy3:100.0, loss:-0.00876395870000124
70-> accuracy1:100.0, accuracy2:99.50000047683716, accuracy3:100.0, loss:-0.009792421013116837
80-> accuracy1:100.0, accuracy2:99.50000047683716, accuracy3:100.0, loss:-0.01087023876607418
90-> accuracy1:100.0, accuracy2:99.6999979019165, accuracy3:100.0, loss:-0.012093110010027885
B(x) = 2.68859847747246*x1**4 + 9.51675064590639*x1**3*x2 + 9.98496046545067*x1**3 + 12.5991698603614*x1**2*x2**2 + 21.6378470256072*x1**2*x2 + 16.4487569759266*x1**2 + 6.79793547106227*x1*x2**3 + 21.5913568485353*x1*x2**2 + 33.2264877522227*x1*x2 - 5.19965276477032*x1 + 0.771941997428533*x2**4 + 3.65904852469057*x2**3 + 11.9106749722089*x2**2 + 5.74707714400485*x2 - 1.67310528414857
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:3
0-> accuracy1:100.0, accuracy2:90.81818461418152, accuracy3:100.0, loss:0.09704319387674332
10-> accuracy1:100.0, accuracy2:91.27272963523865, accuracy3:100.0, loss:0.03549696132540703
20-> accuracy1:98.66666793823242, accuracy2:94.36363577842712, accuracy3:100.0, loss:0.01928924210369587
30-> accuracy1:100.0, accuracy2:96.36363387107849, accuracy3:100.0, loss:0.006426441483199596
40-> accuracy1:99.77777600288391, accuracy2:98.27272891998291, accuracy3:100.0, loss:-0.0007284143939614296
50-> accuracy1:100.0, accuracy2:98.90909194946289, accuracy3:100.0, loss:-0.004928227048367262
60-> accuracy1:100.0, accuracy2:99.00000095367432, accuracy3:100.0, loss:-0.005202188156545162
70-> accuracy1:98.55555295944214, accuracy2:99.00000095367432, accuracy3:100.0, loss:0.0042967586778104305
80-> accuracy1:99.6666669845581, accuracy2:98.90909194946289, accuracy3:100.0, loss:-0.004848982207477093
90-> accuracy1:99.77777600288391, accuracy2:98.45454692840576, accuracy3:100.0, loss:-0.003219238016754389
B(x) = 0.893439243747481*x1**4 + 18.7391033402098*x1**3*x2 + 2.52066545618921*x1**3 + 62.5126758324798*x1**2*x2**2 + 66.5327027105105*x1**2*x2 + 88.8422111567025*x1**2 + 86.0788119730314*x1*x2**3 + 167.164753605825*x1*x2**2 + 146.388298414501*x1*x2 - 33.7102953794878*x1 + 35.2812410953939*x2**4 + 81.9416034931872*x2**3 + 60.4396247051984*x2**2 - 15.2383441056978*x2 - 1.36718922871545
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 90 counterexamples!
iter:4
0-> accuracy1:99.77777600288391, accuracy2:91.59663915634155, accuracy3:100.0, loss:0.1302797943353653
10-> accuracy1:98.33333492279053, accuracy2:88.31932544708252, accuracy3:99.2222249507904, loss:0.0872066393494606
20-> accuracy1:98.11111092567444, accuracy2:83.27730894088745, accuracy3:100.0, loss:0.3974944055080414
30-> accuracy1:100.0, accuracy2:85.96638441085815, accuracy3:98.00000190734863, loss:0.22170020639896393
40-> accuracy1:100.0, accuracy2:89.15966153144836, accuracy3:97.00000286102295, loss:0.32146888971328735
50-> accuracy1:99.44444298744202, accuracy2:88.31932544708252, accuracy3:100.0, loss:0.09899544715881348
60-> accuracy1:98.33333492279053, accuracy2:87.47898936271667, accuracy3:100.0, loss:0.07896629720926285
70-> accuracy1:96.22222185134888, accuracy2:87.3109221458435, accuracy3:100.0, loss:0.08788837492465973
80-> accuracy1:99.00000095367432, accuracy2:86.13445162773132, accuracy3:98.11111092567444, loss:0.09314223378896713
90-> accuracy1:100.0, accuracy2:87.98319101333618, accuracy3:100.0, loss:0.07551142573356628
B(x) = 2.09940229693388*x1**4 + 12.4413799719559*x1**3*x2 + 4.83069065836846*x1**3 + 25.1890958765828*x1**2*x2**2 + 5.27496626077538*x1**2*x2 + 15.8655859508051*x1**2 + 20.3396565439351*x1*x2**3 + 14.6685141814678*x1*x2**2 + 30.2835392624564*x1*x2 - 10.7996651894071*x1 + 6.01941631747854*x2**4 + 8.38141436502571*x2**3 + 12.1298144733749*x2**2 - 5.11641589423507*x2 + 0.0798715860468265
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:5
0-> accuracy1:100.0, accuracy2:80.54263591766357, accuracy3:100.0, loss:0.13730785250663757
10-> accuracy1:100.0, accuracy2:79.0697693824768, accuracy3:100.0, loss:0.12096557766199112
20-> accuracy1:99.5555579662323, accuracy2:76.82170271873474, accuracy3:100.0, loss:0.11856860667467117
30-> accuracy1:100.0, accuracy2:77.3643434047699, accuracy3:100.0, loss:0.11528725177049637
40-> accuracy1:100.0, accuracy2:78.21705341339111, accuracy3:100.0, loss:0.11114007979631424
50-> accuracy1:100.0, accuracy2:78.83720993995667, accuracy3:100.0, loss:0.09737513959407806
60-> accuracy1:100.0, accuracy2:91.31782650947571, accuracy3:100.0, loss:0.05692464858293533
70-> accuracy1:100.0, accuracy2:91.62790775299072, accuracy3:100.0, loss:0.056510165333747864
80-> accuracy1:100.0, accuracy2:91.62790775299072, accuracy3:100.0, loss:0.05773821100592613
90-> accuracy1:100.0, accuracy2:91.62790775299072, accuracy3:100.0, loss:0.05503455922007561
B(x) = 0.590279354325269*x1**4 + 3.96584745765373*x1**3*x2 + 1.80447617974008*x1**3 + 9.33831902051085*x1**2*x2**2 + 5.73480300813537*x1**2*x2 + 4.6146784477721*x1**2 + 9.04162182004901*x1*x2**3 + 14.8860098828943*x1*x2**2 + 9.97414318958922*x1*x2 - 4.05107963641875*x1 + 3.85609890048437*x2**4 + 7.67759725839351*x2**3 + 3.37275250605845*x2**2 - 0.708783142248969*x2 + 1.17324826044437
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:6
0-> accuracy1:100.0, accuracy2:84.82014536857605, accuracy3:100.0, loss:0.12717457115650177
10-> accuracy1:100.0, accuracy2:84.38848853111267, accuracy3:100.0, loss:0.11515098810195923
20-> accuracy1:100.0, accuracy2:84.67625975608826, accuracy3:100.0, loss:0.11368291825056076
30-> accuracy1:100.0, accuracy2:84.46043133735657, accuracy3:100.0, loss:0.11883945018053055
40-> accuracy1:100.0, accuracy2:84.74820256233215, accuracy3:100.0, loss:0.11141043901443481
50-> accuracy1:100.0, accuracy2:84.67625975608826, accuracy3:100.0, loss:0.11062326282262802
60-> accuracy1:100.0, accuracy2:84.74820256233215, accuracy3:100.0, loss:0.11265356838703156
70-> accuracy1:100.0, accuracy2:84.31654572486877, accuracy3:100.0, loss:0.11130183190107346
80-> accuracy1:100.0, accuracy2:84.67625975608826, accuracy3:100.0, loss:0.11126015335321426
90-> accuracy1:100.0, accuracy2:84.46043133735657, accuracy3:100.0, loss:0.10898589342832565
B(x) = 0.216375051814343*x1**4 + 2.18127666364005*x1**3*x2 + 1.28280658388296*x1**3 + 6.35301157190919*x1**2*x2**2 + 5.78866745154101*x1**2*x2 + 2.11969008710315*x1**2 + 7.95040664484242*x1*x2**3 + 11.8778392775764*x1*x2**2 + 4.74882783266169*x1*x2 - 1.5056865973296*x1 + 3.54153584514162*x2**4 + 6.03233091507964*x2**3 + 2.83166351825246*x2**2 + 0.902594261976009*x2 + 0.598945175278331
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:7
0-> accuracy1:100.0, accuracy2:78.85906100273132, accuracy3:100.0, loss:0.1564755141735077
10-> accuracy1:100.0, accuracy2:78.85906100273132, accuracy3:100.0, loss:0.1543455868959427
20-> accuracy1:100.0, accuracy2:78.79194617271423, accuracy3:100.0, loss:0.15316633880138397
30-> accuracy1:100.0, accuracy2:78.85906100273132, accuracy3:100.0, loss:0.15278464555740356
40-> accuracy1:100.0, accuracy2:78.79194617271423, accuracy3:100.0, loss:0.15115970373153687
50-> accuracy1:100.0, accuracy2:78.65771651268005, accuracy3:100.0, loss:0.15037938952445984
60-> accuracy1:100.0, accuracy2:78.72483134269714, accuracy3:100.0, loss:0.15204425156116486
70-> accuracy1:100.0, accuracy2:78.72483134269714, accuracy3:100.0, loss:0.1506953239440918
80-> accuracy1:100.0, accuracy2:78.72483134269714, accuracy3:100.0, loss:0.1510058045387268
90-> accuracy1:100.0, accuracy2:78.72483134269714, accuracy3:100.0, loss:0.15012945234775543
B(x) = 0.270278093615725*x1**4 + 2.72837142325841*x1**3*x2 + 1.15839164154781*x1**3 + 7.69458339691305*x1**2*x2**2 + 5.94305468158001*x1**2*x2 + 2.22883895464229*x1**2 + 9.72167045991333*x1*x2**3 + 12.0460459848482*x1*x2**2 + 3.98673376095861*x1*x2 - 1.63609038463998*x1 + 4.12031276023073*x2**4 + 6.14429037812516*x2**3 + 2.76605112852944*x2**2 + 1.00177398237414*x2 + 0.58596973185249
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:8
0-> accuracy1:100.0, accuracy2:73.83647561073303, accuracy3:100.0, loss:0.19133947789669037
10-> accuracy1:100.0, accuracy2:73.77358675003052, accuracy3:100.0, loss:0.18937674164772034
20-> accuracy1:100.0, accuracy2:73.58490824699402, accuracy3:100.0, loss:0.1901434063911438
30-> accuracy1:100.0, accuracy2:73.20754528045654, accuracy3:100.0, loss:0.19114701449871063
40-> accuracy1:100.0, accuracy2:73.64779710769653, accuracy3:100.0, loss:0.19090989232063293
50-> accuracy1:100.0, accuracy2:73.77358675003052, accuracy3:100.0, loss:0.1893923133611679
60-> accuracy1:100.0, accuracy2:73.77358675003052, accuracy3:100.0, loss:0.18920622766017914
70-> accuracy1:100.0, accuracy2:73.64779710769653, accuracy3:100.0, loss:0.18862508237361908
80-> accuracy1:100.0, accuracy2:73.64779710769653, accuracy3:100.0, loss:0.189677432179451
90-> accuracy1:100.0, accuracy2:73.77358675003052, accuracy3:100.0, loss:0.18863742053508759
B(x) = 0.293056363885796*x1**4 + 2.86312754561548*x1**3*x2 + 1.15390205144926*x1**3 + 8.11614653920246*x1**2*x2**2 + 6.23279360954752*x1**2*x2 + 1.95026174875028*x1**2 + 10.0220942571673*x1*x2**3 + 11.6795239663491*x1*x2**2 + 3.18575149128573*x1*x2 - 1.42384617363043*x1 + 4.0964929820349*x2**4 + 5.73364437810821*x2**3 + 2.45150851654965*x2**2 + 1.08153811135053*x2 + 0.492390206354179
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:9
0-> accuracy1:100.0, accuracy2:69.34911012649536, accuracy3:100.0, loss:0.22261132299900055
10-> accuracy1:100.0, accuracy2:69.34911012649536, accuracy3:100.0, loss:0.2224777489900589
20-> accuracy1:100.0, accuracy2:69.1715955734253, accuracy3:100.0, loss:0.22233594954013824
30-> accuracy1:100.0, accuracy2:69.2307710647583, accuracy3:100.0, loss:0.2224166989326477
40-> accuracy1:100.0, accuracy2:69.11242604255676, accuracy3:100.0, loss:0.22270207107067108
50-> accuracy1:100.0, accuracy2:69.28994059562683, accuracy3:100.0, loss:0.2228444665670395
60-> accuracy1:100.0, accuracy2:69.11242604255676, accuracy3:100.0, loss:0.22279395163059235
70-> accuracy1:100.0, accuracy2:69.1715955734253, accuracy3:100.0, loss:0.22239623963832855
80-> accuracy1:100.0, accuracy2:69.11242604255676, accuracy3:100.0, loss:0.22235175967216492
90-> accuracy1:100.0, accuracy2:69.28994059562683, accuracy3:100.0, loss:0.2222156822681427
B(x) = 0.344752390497194*x1**4 + 3.10546452897905*x1**3*x2 + 1.10185093958939*x1**3 + 8.62879304409716*x1**2*x2**2 + 6.34557711827081*x1**2*x2 + 1.87249952863908*x1**2 + 10.3327066137511*x1*x2**3 + 11.6601121871762*x1*x2**2 + 2.83279161345338*x1*x2 - 1.38782840490661*x1 + 4.09398858116472*x2**4 + 5.60874524189797*x2**3 + 2.22011892252128*x2**2 + 1.0828388073515*x2 + 0.475268210035234
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:10
0-> accuracy1:100.0, accuracy2:65.4189944267273, accuracy3:100.0, loss:0.25301235914230347
10-> accuracy1:100.0, accuracy2:65.36312699317932, accuracy3:100.0, loss:0.25299063324928284
20-> accuracy1:100.0, accuracy2:65.25139808654785, accuracy3:100.0, loss:0.25274720788002014
30-> accuracy1:100.0, accuracy2:65.25139808654785, accuracy3:100.0, loss:0.2524189054965973
40-> accuracy1:100.0, accuracy2:65.25139808654785, accuracy3:100.0, loss:0.25224947929382324
50-> accuracy1:100.0, accuracy2:65.25139808654785, accuracy3:100.0, loss:0.2524184584617615
60-> accuracy1:100.0, accuracy2:65.25139808654785, accuracy3:100.0, loss:0.2525920569896698
70-> accuracy1:100.0, accuracy2:65.25139808654785, accuracy3:100.0, loss:0.2523495554924011
80-> accuracy1:100.0, accuracy2:65.25139808654785, accuracy3:100.0, loss:0.25221768021583557
90-> accuracy1:100.0, accuracy2:65.25139808654785, accuracy3:100.0, loss:0.25242477655410767
B(x) = 0.395852825845286*x1**4 + 3.23542410075526*x1**3*x2 + 1.06997476087712*x1**3 + 8.85256677211353*x1**2*x2**2 + 6.38163914880009*x1**2*x2 + 1.76706323114406*x1**2 + 10.4816140221471*x1*x2**3 + 11.5547442590685*x1*x2**2 + 2.53985838676012*x1*x2 - 1.33055221719433*x1 + 4.15127953741708*x2**4 + 5.59385926136325*x2**3 + 2.05765151489566*x2**2 + 1.04355387562668*x2 + 0.441466391254015
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:11
0-> accuracy1:100.0, accuracy2:61.79894208908081, accuracy3:100.0, loss:0.2798870801925659
10-> accuracy1:100.0, accuracy2:61.79894208908081, accuracy3:100.0, loss:0.27935123443603516
20-> accuracy1:100.0, accuracy2:61.79894208908081, accuracy3:100.0, loss:0.27939531207084656
30-> accuracy1:100.0, accuracy2:61.79894208908081, accuracy3:100.0, loss:0.27937081456184387
40-> accuracy1:100.0, accuracy2:61.79894208908081, accuracy3:100.0, loss:0.2792852818965912
50-> accuracy1:100.0, accuracy2:61.79894208908081, accuracy3:100.0, loss:0.27928200364112854
60-> accuracy1:100.0, accuracy2:61.79894208908081, accuracy3:100.0, loss:0.27932024002075195
70-> accuracy1:100.0, accuracy2:61.79894208908081, accuracy3:100.0, loss:0.27934056520462036
80-> accuracy1:100.0, accuracy2:61.79894208908081, accuracy3:100.0, loss:0.27930158376693726
90-> accuracy1:100.0, accuracy2:61.79894208908081, accuracy3:100.0, loss:0.2792128920555115
B(x) = 0.463935561595401*x1**4 + 3.45214345716421*x1**3*x2 + 1.0313548628514*x1**3 + 9.22584752943125*x1**2*x2**2 + 6.3349733041183*x1**2*x2 + 1.65258167637843*x1**2 + 10.7403009821689*x1*x2**3 + 11.273763628293*x1*x2**2 + 2.23845141412025*x1*x2 - 1.2525663393108*x1 + 4.20568511950771*x2**4 + 5.39434896614781*x2**3 + 1.8588759565527*x2**2 + 1.05061264733286*x2 + 0.421597403437702
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:12
0-> accuracy1:100.0, accuracy2:58.69346857070923, accuracy3:100.0, loss:0.30345213413238525
10-> accuracy1:100.0, accuracy2:58.69346857070923, accuracy3:100.0, loss:0.3032587468624115
20-> accuracy1:100.0, accuracy2:58.69346857070923, accuracy3:100.0, loss:0.3031720519065857
30-> accuracy1:100.0, accuracy2:58.69346857070923, accuracy3:100.0, loss:0.3031874895095825
40-> accuracy1:100.0, accuracy2:58.69346857070923, accuracy3:100.0, loss:0.30324769020080566
50-> accuracy1:100.0, accuracy2:58.69346857070923, accuracy3:100.0, loss:0.3030886948108673
60-> accuracy1:100.0, accuracy2:58.69346857070923, accuracy3:100.0, loss:0.3030935227870941
70-> accuracy1:100.0, accuracy2:58.69346857070923, accuracy3:100.0, loss:0.30304911732673645
80-> accuracy1:100.0, accuracy2:58.69346857070923, accuracy3:100.0, loss:0.303022563457489
90-> accuracy1:100.0, accuracy2:58.69346857070923, accuracy3:100.0, loss:0.302971750497818
B(x) = 0.577424251933654*x1**4 + 3.82340434666903*x1**3*x2 + 0.98827075976806*x1**3 + 9.7880488978576*x1**2*x2**2 + 6.30677213259872*x1**2*x2 + 1.54600033464746*x1**2 + 11.0458759124352*x1*x2**3 + 10.9818443982086*x1*x2**2 + 1.91250163488083*x1*x2 - 1.19907161631123*x1 + 4.24225062313265*x2**4 + 5.1638210292779*x2**3 + 1.62693904012478*x2**2 + 1.03398425063974*x2 + 0.406947568576207
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:13
0-> accuracy1:100.0, accuracy2:55.88516592979431, accuracy3:100.0, loss:0.32471024990081787
10-> accuracy1:100.0, accuracy2:55.837321281433105, accuracy3:100.0, loss:0.3245446979999542
20-> accuracy1:100.0, accuracy2:55.837321281433105, accuracy3:100.0, loss:0.3244641423225403
30-> accuracy1:100.0, accuracy2:55.88516592979431, accuracy3:100.0, loss:0.32434752583503723
40-> accuracy1:100.0, accuracy2:55.837321281433105, accuracy3:100.0, loss:0.3242817521095276
50-> accuracy1:100.0, accuracy2:55.837321281433105, accuracy3:100.0, loss:0.3244016170501709
60-> accuracy1:100.0, accuracy2:55.7894766330719, accuracy3:100.0, loss:0.3241656422615051
70-> accuracy1:100.0, accuracy2:55.7894766330719, accuracy3:100.0, loss:0.32419052720069885
80-> accuracy1:100.0, accuracy2:55.7894766330719, accuracy3:100.0, loss:0.3239365220069885
90-> accuracy1:100.0, accuracy2:52.53588557243347, accuracy3:100.0, loss:0.32329460978507996
B(x) = 0.831509246582464*x1**4 + 4.77921984798396*x1**3*x2 + 0.770261258218059*x1**3 + 11.1222852579243*x1**2*x2**2 + 6.06723828998078*x1**2*x2 + 1.9526491844769*x1**2 + 11.7021244473362*x1*x2**3 + 10.5214398948689*x1*x2**2 + 1.69846108072349*x1*x2 - 1.52493488203692*x1 + 4.31064680840852*x2**4 + 4.74785538914863*x2**3 + 0.693391583673186*x2**2 + 0.274872526444896*x2 + 0.236131284476115
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:14
0-> accuracy1:100.0, accuracy2:45.388126373291016, accuracy3:100.0, loss:0.33872294425964355
10-> accuracy1:100.0, accuracy2:41.78082048892975, accuracy3:100.0, loss:0.3236255347728729
20-> accuracy1:98.33333492279053, accuracy2:40.09132385253906, accuracy3:100.0, loss:0.2735363841056824
30-> accuracy1:97.77777791023254, accuracy2:86.2557053565979, accuracy3:100.0, loss:0.12561725080013275
40-> accuracy1:91.88888669013977, accuracy2:86.57534122467041, accuracy3:100.0, loss:0.11263997852802277
50-> accuracy1:95.88888883590698, accuracy2:87.07762360572815, accuracy3:100.0, loss:0.09475123882293701
60-> accuracy1:96.77777886390686, accuracy2:87.62556910514832, accuracy3:100.0, loss:0.08234713226556778
70-> accuracy1:97.33333587646484, accuracy2:88.12785148620605, accuracy3:100.0, loss:0.0721815899014473
80-> accuracy1:97.77777791023254, accuracy2:88.90410661697388, accuracy3:100.0, loss:0.06603270024061203
90-> accuracy1:97.88888692855835, accuracy2:89.72602486610413, accuracy3:100.0, loss:0.06142379716038704
B(x) = 4.08634663223493*x1**4 + 23.7218345001789*x1**3*x2 + 8.35673435049167*x1**3 + 53.7617023262859*x1**2*x2**2 + 51.9718124915408*x1**2*x2 + 28.5223059585134*x1**2 + 53.476628412069*x1*x2**3 + 86.0344951703771*x1*x2**2 + 55.8274352633977*x1*x2 - 6.30342158640165*x1 + 18.7786255780323*x2**4 + 39.2075218842187*x2**3 + 26.7366237844039*x2**2 - 2.53673568433475*x2 - 0.61107400854386
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 85 counterexamples!
iter:15
0-> accuracy1:98.11111092567444, accuracy2:86.8571400642395, accuracy3:100.0, loss:0.08461121469736099
10-> accuracy1:97.88888692855835, accuracy2:87.6043975353241, accuracy3:100.0, loss:0.07841639220714569
20-> accuracy1:92.88889169692993, accuracy2:88.52747082710266, accuracy3:100.0, loss:0.08934947848320007
30-> accuracy1:98.11111092567444, accuracy2:87.95604109764099, accuracy3:100.0, loss:0.07708360999822617
40-> accuracy1:97.77777791023254, accuracy2:88.43955993652344, accuracy3:100.0, loss:0.07546366751194
50-> accuracy1:96.77777886390686, accuracy2:88.48351836204529, accuracy3:100.0, loss:0.07508006691932678
60-> accuracy1:97.00000286102295, accuracy2:88.39560151100159, accuracy3:100.0, loss:0.07963620126247406
70-> accuracy1:96.33333086967468, accuracy2:88.79120945930481, accuracy3:100.0, loss:0.07550301402807236
80-> accuracy1:96.77777886390686, accuracy2:88.79120945930481, accuracy3:100.0, loss:0.0735640749335289
90-> accuracy1:95.44444680213928, accuracy2:89.58241939544678, accuracy3:100.0, loss:0.07644089311361313
B(x) = 5.06372459189094*x1**4 + 34.5747099967977*x1**3*x2 + 15.5671542973606*x1**3 + 90.3075835113376*x1**2*x2**2 + 88.2284195254865*x1**2*x2 + 45.4218405191574*x1**2 + 99.3213682739545*x1*x2**3 + 143.71314183119*x1*x2**2 + 83.8544105077934*x1*x2 - 13.5819067782873*x1 + 37.7971232131904*x2**4 + 66.5463918219669*x2**3 + 36.6328178915461*x2**2 - 7.57313646858239*x2 - 0.89721310400071
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 48 counterexamples!
Add 75 counterexamples!
iter:16
0-> accuracy1:91.03375673294067, accuracy2:86.12765669822693, accuracy3:100.0, loss:0.1322144865989685
10-> accuracy1:97.36286997795105, accuracy2:85.61702370643616, accuracy3:100.0, loss:0.11051927506923676
20-> accuracy1:99.2616057395935, accuracy2:84.93617177009583, accuracy3:99.6666669845581, loss:0.11961183696985245
30-> accuracy1:93.67088675498962, accuracy2:87.44680881500244, accuracy3:100.0, loss:0.10419665277004242
40-> accuracy1:99.2616057395935, accuracy2:85.14893651008606, accuracy3:100.0, loss:0.10578303039073944
50-> accuracy1:96.72995805740356, accuracy2:86.42553091049194, accuracy3:100.0, loss:0.10054245591163635
60-> accuracy1:96.94092869758606, accuracy2:86.42553091049194, accuracy3:100.0, loss:0.10001102089881897
70-> accuracy1:96.94092869758606, accuracy2:86.89361810684204, accuracy3:100.0, loss:0.09717118740081787
80-> accuracy1:98.20675253868103, accuracy2:86.29786968231201, accuracy3:100.0, loss:0.10023833066225052
90-> accuracy1:95.99156379699707, accuracy2:86.72340512275696, accuracy3:100.0, loss:0.09761738032102585
B(x) = 3.7420417169015*x1**4 + 32.4168493004266*x1**3*x2 + 17.7038719435192*x1**3 + 96.729963430281*x1**2*x2**2 + 112.156414975002*x1**2*x2 + 53.5685495345168*x1**2 + 114.211540409456*x1*x2**3 + 184.505830784407*x1*x2**2 + 98.7066002550654*x1*x2 - 15.0447535200261*x1 + 45.1289028802576*x2**4 + 84.4082187481321*x2**3 + 42.2655243877895*x2**2 - 9.28603959203438*x2 - 0.149986497007035
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 74 counterexamples!
iter:17
0-> accuracy1:95.4641342163086, accuracy2:85.27227640151978, accuracy3:100.0, loss:0.11950136721134186
10-> accuracy1:95.2531635761261, accuracy2:83.78713130950928, accuracy3:100.0, loss:0.12069951742887497
20-> accuracy1:96.41350507736206, accuracy2:84.36468839645386, accuracy3:100.0, loss:0.11938020586967468
30-> accuracy1:97.15189933776855, accuracy2:84.07590985298157, accuracy3:100.0, loss:0.11709441989660263
40-> accuracy1:96.20253443717957, accuracy2:83.58085751533508, accuracy3:100.0, loss:0.12009923160076141
50-> accuracy1:95.56962251663208, accuracy2:84.65346693992615, accuracy3:100.0, loss:0.11510736495256424
60-> accuracy1:97.36286997795105, accuracy2:84.03465151786804, accuracy3:100.0, loss:0.11573153734207153
70-> accuracy1:95.67510485649109, accuracy2:84.61220860481262, accuracy3:100.0, loss:0.11353245377540588
80-> accuracy1:95.78059315681458, accuracy2:84.90098714828491, accuracy3:100.0, loss:0.11364197731018066
90-> accuracy1:97.89029359817505, accuracy2:83.7046205997467, accuracy3:100.0, loss:0.1164267435669899
B(x) = 1.21405047285189*x1**4 + 24.0371454241712*x1**3*x2 + 12.6677535805272*x1**3 + 86.836425209041*x1**2*x2**2 + 102.925809386581*x1**2*x2 + 52.4151367596555*x1**2 + 111.104913685503*x1*x2**3 + 181.539126239806*x1*x2**2 + 94.0103937939847*x1*x2 - 14.1448498587882*x1 + 45.9862799508687*x2**4 + 85.4692830593713*x2**3 + 39.9247352917494*x2**2 - 8.48556565369601*x2 - 0.207519272659094
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 75 counterexamples!
iter:18
0-> accuracy1:98.31223487854004, accuracy2:81.55261874198914, accuracy3:100.0, loss:0.1343662589788437
10-> accuracy1:93.24894547462463, accuracy2:82.43297338485718, accuracy3:100.0, loss:0.1316099911928177
20-> accuracy1:94.9367105960846, accuracy2:82.39295482635498, accuracy3:100.0, loss:0.13131867349147797
30-> accuracy1:95.14768123626709, accuracy2:81.91276788711548, accuracy3:100.0, loss:0.130514994263649
40-> accuracy1:91.77215099334717, accuracy2:82.83313512802124, accuracy3:100.0, loss:0.13139402866363525
50-> accuracy1:95.78059315681458, accuracy2:82.03281164169312, accuracy3:100.0, loss:0.1318407654762268
60-> accuracy1:94.83122229576111, accuracy2:82.35294222831726, accuracy3:100.0, loss:0.13094954192638397
70-> accuracy1:93.03797483444214, accuracy2:81.83273077011108, accuracy3:100.0, loss:0.1326119303703308
80-> accuracy1:96.51898741722107, accuracy2:81.83273077011108, accuracy3:100.0, loss:0.13175667822360992
90-> accuracy1:95.14768123626709, accuracy2:81.87274932861328, accuracy3:100.0, loss:0.12951913475990295
B(x) = 1.45210355639542*x1**4 + 25.3813704881144*x1**3*x2 + 14.6705582516309*x1**3 + 85.1191151243235*x1**2*x2**2 + 103.798592114535*x1**2*x2 + 52.0480290535686*x1**2 + 103.883090337102*x1*x2**3 + 176.608444095974*x1*x2**2 + 96.4282781732261*x1*x2 - 13.8066484874219*x1 + 42.1184025394035*x2**4 + 82.733988584233*x2**3 + 41.9379593189775*x2**2 - 8.8947586163285*x2 - 0.164927216927983
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 76 counterexamples!
iter:19
0-> accuracy1:94.09282803535461, accuracy2:79.88349795341492, accuracy3:100.0, loss:0.14656729996204376
10-> accuracy1:93.35442781448364, accuracy2:79.57281470298767, accuracy3:100.0, loss:0.14846879243850708
20-> accuracy1:90.61181545257568, accuracy2:80.2718460559845, accuracy3:100.0, loss:0.1470683515071869
30-> accuracy1:90.1898741722107, accuracy2:80.0000011920929, accuracy3:100.0, loss:0.148288756608963
40-> accuracy1:92.51055121421814, accuracy2:79.61165308952332, accuracy3:100.0, loss:0.14652390778064728
50-> accuracy1:91.45569801330566, accuracy2:80.38834929466248, accuracy3:100.0, loss:0.1470765471458435
60-> accuracy1:92.82700419425964, accuracy2:79.88349795341492, accuracy3:100.0, loss:0.1472904533147812
70-> accuracy1:93.24894547462463, accuracy2:79.88349795341492, accuracy3:99.8888909816742, loss:0.1480107456445694
80-> accuracy1:93.14345717430115, accuracy2:79.22329902648926, accuracy3:100.0, loss:0.14756596088409424
90-> accuracy1:91.98312163352966, accuracy2:79.37864065170288, accuracy3:100.0, loss:0.14680138230323792
B(x) = 1.25052353108635*x1**4 + 24.2853808771769*x1**3*x2 + 14.669801977772*x1**3 + 79.351724143643*x1**2*x2**2 + 96.7708896512809*x1**2*x2 + 48.434491098734*x1**2 + 93.8356391949858*x1*x2**3 + 161.566560947179*x1*x2**2 + 90.4543922676112*x1*x2 - 12.7176822206507*x1 + 37.256717752953*x2**4 + 75.0554009470645*x2**3 + 39.6633583535964*x2**2 - 8.01057540982141*x2 - 0.235852278173488
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 73 counterexamples!
iter:20
0-> accuracy1:93.03797483444214, accuracy2:77.15256810188293, accuracy3:100.0, loss:0.16099616885185242
10-> accuracy1:92.40506291389465, accuracy2:77.41692066192627, accuracy3:100.0, loss:0.160875141620636
20-> accuracy1:91.24472737312317, accuracy2:77.41692066192627, accuracy3:100.0, loss:0.16093356907367706
30-> accuracy1:93.98733973503113, accuracy2:76.73715949058533, accuracy3:100.0, loss:0.16480009257793427
40-> accuracy1:91.24472737312317, accuracy2:77.37915515899658, accuracy3:100.0, loss:0.16049636900424957
50-> accuracy1:92.19409227371216, accuracy2:77.53021121025085, accuracy3:100.0, loss:0.1604534089565277
60-> accuracy1:91.03375673294067, accuracy2:77.79456377029419, accuracy3:100.0, loss:0.16002948582172394
70-> accuracy1:92.51055121421814, accuracy2:77.53021121025085, accuracy3:100.0, loss:0.16256076097488403
80-> accuracy1:90.92826843261719, accuracy2:78.32326292991638, accuracy3:100.0, loss:0.16514509916305542
90-> accuracy1:92.29958057403564, accuracy2:76.8126904964447, accuracy3:100.0, loss:0.16363894939422607
B(x) = 1.43765086612028*x1**4 + 24.7866430381488*x1**3*x2 + 15.7992807881661*x1**3 + 77.2303073308982*x1**2*x2**2 + 95.5795027156763*x1**2*x2 + 46.7072487547326*x1**2 + 87.9137443457246*x1*x2**3 + 155.052262408271*x1*x2**2 + 87.8234704759891*x1*x2 - 12.1076538079601*x1 + 34.0385339921735*x2**4 + 71.054151358004*x2**3 + 38.3905799253595*x2**2 - 7.54112108482301*x2 - 0.239329815773194
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 78 counterexamples!
Failed
Elapsed Time: 111.3081775130704
