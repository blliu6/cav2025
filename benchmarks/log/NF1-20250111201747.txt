{'batch_size': 700, 'lr': np.float64(0.21999999999999997), 'loss_weight_continuous': (1, 1, 1), 'R_b': 0.4, 'margin': 0.4, 'DEG_continuous': [2, 4, 4, 2], 'learning_loops': 100, 'max_iter': 20, 'err': 0.02677454477719443}

Mosek can be used normally.
iter:1
0-> accuracy1:0.0, accuracy2:29.14285659790039, accuracy3:0.0, loss:1.3165496587753296
10-> accuracy1:100.0, accuracy2:81.99999928474426, accuracy3:100.0, loss:4.821972846984863
20-> accuracy1:100.0, accuracy2:95.4285740852356, accuracy3:100.0, loss:0.6059253811836243
30-> accuracy1:83.28571319580078, accuracy2:98.71428608894348, accuracy3:100.0, loss:6.617180347442627
40-> accuracy1:100.0, accuracy2:95.71428298950195, accuracy3:100.0, loss:23.51701545715332
50-> accuracy1:93.85714530944824, accuracy2:97.42857217788696, accuracy3:100.0, loss:19.47922134399414
60-> accuracy1:97.57142663002014, accuracy2:88.57142925262451, accuracy3:100.0, loss:1032.1109619140625
70-> accuracy1:93.14285516738892, accuracy2:97.42857217788696, accuracy3:100.0, loss:115.61485290527344
80-> accuracy1:100.0, accuracy2:96.71428799629211, accuracy3:100.0, loss:247.8226776123047
90-> accuracy1:97.7142870426178, accuracy2:96.42857313156128, accuracy3:100.0, loss:186.8325958251953
B(x) = 2548.17916962413*x1**4 + 5804.48856460269*x1**3*x2 + 7432.51159531774*x1**3 + 117.320188452313*x1**2*x2**2 + 11753.2192148848*x1**2*x2 - 6089.86950095132*x1**2 - 1531.20300715532*x1*x2**3 - 14171.0015242286*x1*x2**2 + 28961.9351946388*x1*x2 - 15613.5867449621*x1 - 797.255345800956*x2**4 + 1502.01479589648*x2**3 - 16520.1017150394*x2**2 + 18557.7036037178*x2 - 5701.93177050791
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:2
0-> accuracy1:54.85714077949524, accuracy2:86.62499785423279, accuracy3:100.0, loss:680.6175537109375
10-> accuracy1:92.28571653366089, accuracy2:84.12500023841858, accuracy3:100.0, loss:363.3376159667969
20-> accuracy1:50.428569316864014, accuracy2:93.25000047683716, accuracy3:100.0, loss:69.23405456542969
30-> accuracy1:0.0, accuracy2:100.0, accuracy3:100.0, loss:1217.761962890625
40-> accuracy1:83.1428587436676, accuracy2:84.50000286102295, accuracy3:100.0, loss:243.10733032226562
50-> accuracy1:88.1428599357605, accuracy2:85.75000166893005, accuracy3:100.0, loss:85.3470687866211
60-> accuracy1:69.28571462631226, accuracy2:95.49999833106995, accuracy3:100.0, loss:17.825523376464844
70-> accuracy1:72.85714149475098, accuracy2:94.12500262260437, accuracy3:100.0, loss:6.795724868774414
80-> accuracy1:66.00000262260437, accuracy2:95.6250011920929, accuracy3:100.0, loss:3.817326545715332
90-> accuracy1:77.85714268684387, accuracy2:91.00000262260437, accuracy3:100.0, loss:2.4773764610290527
B(x) = 160.925827992988*x1**4 + 296.851464237221*x1**3*x2 + 352.829793002963*x1**3 - 193.513806323336*x1**2*x2**2 + 681.392455273444*x1**2*x2 + 156.785555212433*x1**2 - 71.7436485017613*x1*x2**3 - 280.729792103178*x1*x2**2 + 571.329434013117*x1*x2 - 80.7952630842426*x1 - 225.9941974009*x2**4 + 264.818365433619*x2**3 - 183.598208764578*x2**2 + 169.504957613164*x2 - 45.2687607970441
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:3
0-> accuracy1:82.14285969734192, accuracy2:84.11111235618591, accuracy3:100.0, loss:10.027078628540039
10-> accuracy1:68.14285516738892, accuracy2:96.77777886390686, accuracy3:100.0, loss:1.4892643690109253
20-> accuracy1:83.1428587436676, accuracy2:94.33333277702332, accuracy3:100.0, loss:1.23820960521698
30-> accuracy1:84.71428751945496, accuracy2:93.00000071525574, accuracy3:100.0, loss:0.9520164132118225
40-> accuracy1:81.99999928474426, accuracy2:92.11111068725586, accuracy3:100.0, loss:0.6733513474464417
50-> accuracy1:85.57142615318298, accuracy2:93.77777576446533, accuracy3:100.0, loss:0.4197959899902344
60-> accuracy1:88.85714411735535, accuracy2:92.66666769981384, accuracy3:100.0, loss:0.2676456868648529
70-> accuracy1:86.28571629524231, accuracy2:96.33333086967468, accuracy3:100.0, loss:0.22777493298053741
80-> accuracy1:86.71428561210632, accuracy2:95.6666648387909, accuracy3:100.0, loss:0.17831873893737793
90-> accuracy1:87.285715341568, accuracy2:93.11110973358154, accuracy3:100.0, loss:0.15374363958835602
B(x) = 31.0469741630744*x1**4 + 66.017458111181*x1**3*x2 + 59.1939770219885*x1**3 - 0.482874093969106*x1**2*x2**2 + 137.84826453572*x1**2*x2 + 23.451965332647*x1**2 + 5.55862306962993*x1*x2**3 - 15.1820339337882*x1*x2**2 + 108.500926639556*x1*x2 - 13.9934682342304*x1 - 35.3848413856113*x2**4 + 51.2014028990472*x2**3 - 21.1583141962244*x2**2 + 25.8458603548134*x2 - 6.0598040803134
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
Add 100 counterexamples!
iter:4
0-> accuracy1:75.12500286102295, accuracy2:85.10000109672546, accuracy3:100.0, loss:0.6101213097572327
10-> accuracy1:67.37499833106995, accuracy2:86.00000143051147, accuracy3:100.0, loss:0.32832640409469604
20-> accuracy1:61.62499785423279, accuracy2:88.49999904632568, accuracy3:100.0, loss:0.3170167803764343
30-> accuracy1:65.37500023841858, accuracy2:86.40000224113464, accuracy3:100.0, loss:0.2822060286998749
40-> accuracy1:68.25000047683716, accuracy2:85.00000238418579, accuracy3:100.0, loss:0.2657877802848816
50-> accuracy1:69.74999904632568, accuracy2:85.10000109672546, accuracy3:100.0, loss:0.25382623076438904
60-> accuracy1:73.1249988079071, accuracy2:84.3999981880188, accuracy3:100.0, loss:0.24536094069480896
70-> accuracy1:71.49999737739563, accuracy2:85.69999933242798, accuracy3:100.0, loss:0.23792091012001038
80-> accuracy1:75.49999952316284, accuracy2:85.19999980926514, accuracy3:100.0, loss:0.23172156512737274
90-> accuracy1:78.125, accuracy2:85.39999723434448, accuracy3:100.0, loss:0.2285868227481842
B(x) = 7.5959886817496*x1**4 + 15.0806868249437*x1**3*x2 + 14.5813899326538*x1**3 + 3.2549289011373*x1**2*x2**2 + 30.3206155716974*x1**2*x2 + 7.39891660375854*x1**2 + 1.39150900597567*x1*x2**3 + 1.60477149291574*x1*x2**2 + 25.3623332138784*x1*x2 - 2.62113151908328*x1 - 6.74150065154948*x2**4 + 9.99384211685177*x2**3 - 3.19524712345205*x2**2 + 6.47415117012863*x2 - 1.10614280372864
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
iter:5
0-> accuracy1:78.75000238418579, accuracy2:85.6000006198883, accuracy3:100.0, loss:0.22581756114959717
10-> accuracy1:81.87500238418579, accuracy2:85.39999723434448, accuracy3:100.0, loss:0.2235935628414154
20-> accuracy1:85.12499928474426, accuracy2:85.6000006198883, accuracy3:100.0, loss:0.22091645002365112
30-> accuracy1:87.37499713897705, accuracy2:85.50000190734863, accuracy3:100.0, loss:0.21851006150245667
40-> accuracy1:87.62500286102295, accuracy2:85.29999852180481, accuracy3:100.0, loss:0.21627946197986603
50-> accuracy1:87.87500262260437, accuracy2:84.60000157356262, accuracy3:100.0, loss:0.21453198790550232
60-> accuracy1:87.99999952316284, accuracy2:84.10000205039978, accuracy3:100.0, loss:0.213558629155159
70-> accuracy1:87.99999952316284, accuracy2:83.79999995231628, accuracy3:100.0, loss:0.21294361352920532
80-> accuracy1:88.12500238418579, accuracy2:83.30000042915344, accuracy3:100.0, loss:0.21236667037010193
90-> accuracy1:88.12500238418579, accuracy2:83.30000042915344, accuracy3:100.0, loss:0.21067941188812256
B(x) = 1.73265459475441*x1**4 + 2.9917155480765*x1**3*x2 + 3.14941699142058*x1**3 + 0.882699473223061*x1**2*x2**2 + 5.73358865864137*x1**2*x2 + 1.66916566384092*x1**2 + 0.0911752469217639*x1*x2**3 + 1.20815638303319*x1*x2**2 + 5.44606850929428*x1*x2 - 0.727837058966634*x1 - 1.41128290034525*x2**4 + 1.98099481511329*x2**3 - 0.907420816420349*x2**2 + 1.90958983018591*x2 - 0.0580518697105872
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:6
0-> accuracy1:88.12500238418579, accuracy2:75.27272701263428, accuracy3:100.0, loss:0.2902674973011017
10-> accuracy1:90.625, accuracy2:73.45454692840576, accuracy3:100.0, loss:0.2870323359966278
20-> accuracy1:94.12500262260437, accuracy2:71.18181586265564, accuracy3:100.0, loss:0.28600332140922546
30-> accuracy1:96.875, accuracy2:71.18181586265564, accuracy3:100.0, loss:0.28693532943725586
40-> accuracy1:97.00000286102295, accuracy2:71.18181586265564, accuracy3:100.0, loss:0.28849220275878906
50-> accuracy1:96.875, accuracy2:70.99999785423279, accuracy3:100.0, loss:0.2886269986629486
60-> accuracy1:97.50000238418579, accuracy2:70.81817984580994, accuracy3:100.0, loss:0.28828954696655273
70-> accuracy1:97.62499928474426, accuracy2:70.18181681632996, accuracy3:100.0, loss:0.28794199228286743
80-> accuracy1:97.62499928474426, accuracy2:69.9999988079071, accuracy3:100.0, loss:0.28728532791137695
90-> accuracy1:98.25000166893005, accuracy2:69.9999988079071, accuracy3:100.0, loss:0.2865661382675171
B(x) = 0.440093983069663*x1**4 + 0.678166815191355*x1**3*x2 + 0.821330381064228*x1**3 + 0.105715387992499*x1**2*x2**2 + 1.06939818401373*x1**2*x2 + 0.485050112759562*x1**2 - 0.0220457447655105*x1*x2**3 + 0.437126498369249*x1*x2**2 + 1.3820344606803*x1*x2 - 0.355004839836696*x1 - 0.33538200604555*x2**4 + 0.402682860714252*x2**3 - 0.428960261427349*x2**2 + 0.895514315527141*x2 + 0.104560332089729
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:7
0-> accuracy1:98.37499856948853, accuracy2:64.083331823349, accuracy3:100.0, loss:0.339322954416275
10-> accuracy1:100.0, accuracy2:63.333332538604736, accuracy3:100.0, loss:0.34105098247528076
20-> accuracy1:100.0, accuracy2:62.08333373069763, accuracy3:100.0, loss:0.343153178691864
30-> accuracy1:100.0, accuracy2:60.333335399627686, accuracy3:100.0, loss:0.3446895182132721
40-> accuracy1:100.0, accuracy2:58.99999737739563, accuracy3:100.0, loss:0.3466154932975769
50-> accuracy1:100.0, accuracy2:56.166666746139526, accuracy3:100.0, loss:0.34833234548568726
60-> accuracy1:100.0, accuracy2:54.83333468437195, accuracy3:100.0, loss:0.3504684567451477
70-> accuracy1:100.0, accuracy2:54.41666841506958, accuracy3:100.0, loss:0.3530683219432831
80-> accuracy1:100.0, accuracy2:54.25000190734863, accuracy3:100.0, loss:0.3557818531990051
90-> accuracy1:100.0, accuracy2:54.00000214576721, accuracy3:100.0, loss:0.3587612509727478
B(x) = 0.125787670301233*x1**4 + 0.196377606658003*x1**3*x2 + 0.251428794104511*x1**3 + 0.010153326863334*x1**2*x2**2 + 0.179488296852659*x1**2*x2 + 0.151473687556946*x1**2 - 0.00244372212975669*x1*x2**3 + 0.180669391263475*x1*x2**2 + 0.471823341054058*x1*x2 - 0.317924439112195*x1 - 0.0846994767660424*x2**4 + 0.0763418327621923*x2**3 - 0.230323552269217*x2**2 + 0.576708130522931*x2 + 0.1201072434519
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:8
0-> accuracy1:100.0, accuracy2:49.84615445137024, accuracy3:100.0, loss:0.3962423801422119
10-> accuracy1:100.0, accuracy2:49.69230890274048, accuracy3:100.0, loss:0.3985994756221771
20-> accuracy1:100.0, accuracy2:49.15384650230408, accuracy3:100.0, loss:0.40157759189605713
30-> accuracy1:100.0, accuracy2:48.461538553237915, accuracy3:100.0, loss:0.4044698476791382
40-> accuracy1:100.0, accuracy2:47.84615337848663, accuracy3:100.0, loss:0.40741613507270813
50-> accuracy1:100.0, accuracy2:47.38461673259735, accuracy3:100.0, loss:0.4105588495731354
60-> accuracy1:100.0, accuracy2:47.07692265510559, accuracy3:100.0, loss:0.41348519921302795
70-> accuracy1:100.0, accuracy2:46.61538600921631, accuracy3:100.0, loss:0.41643771529197693
80-> accuracy1:100.0, accuracy2:46.00000083446503, accuracy3:100.0, loss:0.41950201988220215
90-> accuracy1:100.0, accuracy2:45.538461208343506, accuracy3:100.0, loss:0.4225393831729889
B(x) = 0.0418912508503666*x1**4 + 0.0752290107232458*x1**3*x2 + 0.090399996914496*x1**3 + 0.00881951660464885*x1**2*x2**2 + 0.0216599597963775*x1**2*x2 + 0.0407970453099093*x1**2 + 0.00476798322121446*x1*x2**3 + 0.0831054978822409*x1*x2**2 + 0.228887890187996*x1*x2 - 0.331115541586185*x1 - 0.0201445110404345*x2**4 + 0.0108785160738872*x2**3 - 0.120078063504336*x2**2 + 0.445341338283112*x2 + 0.0791720351972537
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:9
0-> accuracy1:100.0, accuracy2:41.78571403026581, accuracy3:100.0, loss:0.4496728777885437
10-> accuracy1:100.0, accuracy2:41.285714507102966, accuracy3:100.0, loss:0.4517609477043152
20-> accuracy1:100.0, accuracy2:40.35714268684387, accuracy3:100.0, loss:0.45417532324790955
30-> accuracy1:100.0, accuracy2:40.214285254478455, accuracy3:100.0, loss:0.45686519145965576
40-> accuracy1:100.0, accuracy2:40.00000059604645, accuracy3:100.0, loss:0.45989513397216797
50-> accuracy1:100.0, accuracy2:39.71428573131561, accuracy3:100.0, loss:0.46249961853027344
60-> accuracy1:100.0, accuracy2:39.21428620815277, accuracy3:100.0, loss:0.4644864797592163
70-> accuracy1:100.0, accuracy2:37.99999952316284, accuracy3:100.0, loss:0.46611201763153076
80-> accuracy1:100.0, accuracy2:37.35714256763458, accuracy3:100.0, loss:0.4677554965019226
90-> accuracy1:100.0, accuracy2:36.571428179740906, accuracy3:100.0, loss:0.4692416191101074
B(x) = 0.0155478636061676*x1**4 + 0.0319606689675777*x1**3*x2 + 0.0363510748084912*x1**3 + 0.0067294692330406*x1**2*x2**2 - 0.00608902663597625*x1**2*x2 + 0.00917017949933016*x1**2 + 0.00286405845389626*x1*x2**3 + 0.0472750043516396*x1*x2**2 + 0.149924556531157*x1*x2 - 0.343288587716114*x1 - 0.00596716974887878*x2**4 - 0.0046406246008954*x2**3 - 0.0780414847119016*x2**2 + 0.379266387306321*x2 + 0.0690380344280616
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:10
0-> accuracy1:100.0, accuracy2:33.73333215713501, accuracy3:100.0, loss:0.49424615502357483
10-> accuracy1:100.0, accuracy2:33.266666531562805, accuracy3:100.0, loss:0.49691230058670044
20-> accuracy1:100.0, accuracy2:32.866665720939636, accuracy3:100.0, loss:0.4998241066932678
30-> accuracy1:100.0, accuracy2:32.8000009059906, accuracy3:100.0, loss:0.5015769600868225
40-> accuracy1:100.0, accuracy2:32.40000009536743, accuracy3:100.0, loss:0.5033504366874695
50-> accuracy1:100.0, accuracy2:31.999999284744263, accuracy3:100.0, loss:0.5049391388893127
60-> accuracy1:100.0, accuracy2:31.400001049041748, accuracy3:100.0, loss:0.506298303604126
70-> accuracy1:100.0, accuracy2:31.066668033599854, accuracy3:100.0, loss:0.5072669386863708
80-> accuracy1:100.0, accuracy2:31.066668033599854, accuracy3:100.0, loss:0.5081638097763062
90-> accuracy1:100.0, accuracy2:31.00000023841858, accuracy3:100.0, loss:0.5086257457733154
B(x) = 0.00816397390311677*x1**4 + 0.0145727207935344*x1**3*x2 + 0.0191875758136254*x1**3 + 0.00459738965567517*x1**2*x2**2 - 0.0106656846043527*x1**2*x2 + 0.0144199935517434*x1**2 - 0.000722971698815527*x1*x2**3 + 0.0331551609378337*x1*x2**2 + 0.116129200100855*x1*x2 - 0.315198722973281*x1 - 0.00266291415929807*x2**4 - 0.00943886961643719*x2**3 - 0.0699846838617769*x2**2 + 0.380414682253011*x2 + 0.0664414191722508
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:11
0-> accuracy1:100.0, accuracy2:28.874999284744263, accuracy3:100.0, loss:0.5338441729545593
10-> accuracy1:100.0, accuracy2:28.937500715255737, accuracy3:100.0, loss:0.5333689451217651
20-> accuracy1:100.0, accuracy2:28.812500834465027, accuracy3:100.0, loss:0.5318301320075989
30-> accuracy1:100.0, accuracy2:28.874999284744263, accuracy3:100.0, loss:0.5297084450721741
40-> accuracy1:100.0, accuracy2:28.874999284744263, accuracy3:100.0, loss:0.5273257493972778
50-> accuracy1:100.0, accuracy2:28.937500715255737, accuracy3:100.0, loss:0.524948239326477
60-> accuracy1:100.0, accuracy2:28.937500715255737, accuracy3:100.0, loss:0.522620677947998
70-> accuracy1:100.0, accuracy2:28.812500834465027, accuracy3:100.0, loss:0.5201325416564941
80-> accuracy1:100.0, accuracy2:28.749999403953552, accuracy3:100.0, loss:0.5176934599876404
90-> accuracy1:100.0, accuracy2:28.874999284744263, accuracy3:100.0, loss:0.51524817943573
B(x) = 0.00570744599314637*x1**4 + 0.00875191528227682*x1**3*x2 + 0.0144886695042464*x1**3 + 0.00103382630825596*x1**2*x2**2 - 0.0155331456147017*x1**2*x2 + 0.0285170347291295*x1**2 - 0.000424274250457535*x1*x2**3 + 0.031004949028019*x1*x2**2 + 0.116429857629429*x1*x2 - 0.283715863798552*x1 - 0.00230240501702298*x2**4 - 0.0123694585587057*x2**3 - 0.0864081632750649*x2**2 + 0.412636219187239*x2 + 0.0791051045573003
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:12
0-> accuracy1:100.0, accuracy2:27.117645740509033, accuracy3:100.0, loss:0.5431395769119263
10-> accuracy1:100.0, accuracy2:27.4117648601532, accuracy3:100.0, loss:0.5377016663551331
20-> accuracy1:100.0, accuracy2:27.352941036224365, accuracy3:100.0, loss:0.5300997495651245
30-> accuracy1:100.0, accuracy2:27.941176295280457, accuracy3:100.0, loss:0.5213451385498047
40-> accuracy1:100.0, accuracy2:28.117647767066956, accuracy3:100.0, loss:0.5115154981613159
50-> accuracy1:100.0, accuracy2:28.00000011920929, accuracy3:100.0, loss:0.5005282759666443
60-> accuracy1:100.0, accuracy2:28.35294008255005, accuracy3:100.0, loss:0.4881821572780609
70-> accuracy1:100.0, accuracy2:31.058824062347412, accuracy3:100.0, loss:0.4744574725627899
80-> accuracy1:100.0, accuracy2:34.76470708847046, accuracy3:100.0, loss:0.4600778818130493
90-> accuracy1:100.0, accuracy2:35.058823227882385, accuracy3:100.0, loss:0.4496026933193207
B(x) = 0.00801531307995302*x1**4 + 0.0101449000403039*x1**3*x2 + 0.0172369692202768*x1**3 - 0.00274191192399716*x1**2*x2**2 - 0.0145373396083293*x1**2*x2 + 0.111246737860783*x1**2 + 0.00206383578321043*x1*x2**3 + 0.0303830154598452*x1*x2**2 + 0.121743204619097*x1*x2 - 0.262221687654514*x1 - 0.00301225407878099*x2**4 - 0.0134624546391656*x2**3 - 0.115077012001305*x2**2 + 0.475079190008529*x2 + 0.0740971608099535
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 46 counterexamples!
iter:13
0-> accuracy1:100.0, accuracy2:34.36426222324371, accuracy3:100.0, loss:0.452199250459671
10-> accuracy1:100.0, accuracy2:34.53608155250549, accuracy3:100.0, loss:0.44830477237701416
20-> accuracy1:100.0, accuracy2:34.99427139759064, accuracy3:100.0, loss:0.44503700733184814
30-> accuracy1:100.0, accuracy2:35.39519011974335, accuracy3:100.0, loss:0.44178903102874756
40-> accuracy1:100.0, accuracy2:35.96792817115784, accuracy3:100.0, loss:0.43861275911331177
50-> accuracy1:100.0, accuracy2:36.42611801624298, accuracy3:100.0, loss:0.4355149567127228
60-> accuracy1:100.0, accuracy2:36.483389139175415, accuracy3:100.0, loss:0.4331059157848358
70-> accuracy1:100.0, accuracy2:36.483389139175415, accuracy3:100.0, loss:0.43138134479522705
80-> accuracy1:100.0, accuracy2:36.655211448669434, accuracy3:100.0, loss:0.4300073981285095
90-> accuracy1:100.0, accuracy2:36.82703375816345, accuracy3:100.0, loss:0.4288496971130371
B(x) = 0.00626515713808539*x1**4 + 0.0102479059345153*x1**3*x2 + 0.015566406481177*x1**3 - 0.00657886910715194*x1**2*x2**2 - 0.0183545148691113*x1**2*x2 + 0.142186097373933*x1**2 + 0.00531268643931351*x1*x2**3 + 0.0303377539410091*x1*x2**2 + 0.152902653949671*x1*x2 - 0.30167288667153*x1 - 0.00266024137069829*x2**4 - 0.0120467477957176*x2**3 - 0.122635852029229*x2**2 + 0.461475080666769*x2 + 0.0980563409943989
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 54 counterexamples!
iter:14
0-> accuracy1:100.0, accuracy2:35.66666543483734, accuracy3:100.0, loss:0.4456072449684143
10-> accuracy1:100.0, accuracy2:35.61111092567444, accuracy3:100.0, loss:0.44520625472068787
20-> accuracy1:100.0, accuracy2:35.499998927116394, accuracy3:100.0, loss:0.4448157548904419
30-> accuracy1:100.0, accuracy2:35.33333241939545, accuracy3:100.0, loss:0.44409894943237305
40-> accuracy1:100.0, accuracy2:35.277777910232544, accuracy3:100.0, loss:0.4432334303855896
50-> accuracy1:100.0, accuracy2:35.1111114025116, accuracy3:100.0, loss:0.44233977794647217
60-> accuracy1:100.0, accuracy2:35.055556893348694, accuracy3:100.0, loss:0.4412989616394043
70-> accuracy1:100.0, accuracy2:34.94444489479065, accuracy3:100.0, loss:0.44012925028800964
80-> accuracy1:100.0, accuracy2:34.88888740539551, accuracy3:100.0, loss:0.4388829469680786
90-> accuracy1:100.0, accuracy2:34.833332896232605, accuracy3:100.0, loss:0.4376576840877533
B(x) = 0.00412467507824556*x1**4 + 0.0101546915945875*x1**3*x2 + 0.0145006219297597*x1**3 - 0.00955529540213766*x1**2*x2**2 - 0.0242657373235764*x1**2*x2 + 0.167256162152485*x1**2 + 0.00689896690964902*x1*x2**3 + 0.0316854558839819*x1*x2**2 + 0.146768240456574*x1*x2 - 0.351822255947742*x1 - 0.00206880379894051*x2**4 - 0.0106844168393472*x2**3 - 0.0992209712273805*x2**2 + 0.433881798635944*x2 + 0.0951554975385966
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 40 counterexamples!
iter:15
0-> accuracy1:100.0, accuracy2:34.130436182022095, accuracy3:100.0, loss:0.44910815358161926
10-> accuracy1:100.0, accuracy2:33.91304314136505, accuracy3:100.0, loss:0.4482205808162689
20-> accuracy1:100.0, accuracy2:33.80434811115265, accuracy3:100.0, loss:0.44741082191467285
30-> accuracy1:100.0, accuracy2:33.75000059604645, accuracy3:100.0, loss:0.4464108943939209
40-> accuracy1:100.0, accuracy2:33.80434811115265, accuracy3:100.0, loss:0.4451192319393158
50-> accuracy1:100.0, accuracy2:33.69565308094025, accuracy3:100.0, loss:0.44372230768203735
60-> accuracy1:100.0, accuracy2:33.532607555389404, accuracy3:100.0, loss:0.442295104265213
70-> accuracy1:100.0, accuracy2:33.532607555389404, accuracy3:100.0, loss:0.44087255001068115
80-> accuracy1:100.0, accuracy2:33.2608699798584, accuracy3:100.0, loss:0.43957626819610596
90-> accuracy1:100.0, accuracy2:33.3152174949646, accuracy3:100.0, loss:0.43823903799057007
B(x) = 0.00187417527459092*x1**4 + 0.0108313135229398*x1**3*x2 + 0.0149960951627175*x1**3 - 0.0122072885675465*x1**2*x2**2 - 0.0327395134544581*x1**2*x2 + 0.18797302031288*x1**2 + 0.00782265532440347*x1*x2**3 + 0.0354333453948598*x1*x2**2 + 0.118441370922293*x1*x2 - 0.415754607930486*x1 - 0.00172955753084039*x2**4 - 0.0102448388685875*x2**3 - 0.0642747181877558*x2**2 + 0.406054361783709*x2 + 0.0844078757913801
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 54 counterexamples!
iter:16
0-> accuracy1:100.0, accuracy2:32.36536383628845, accuracy3:100.0, loss:0.45011085271835327
10-> accuracy1:100.0, accuracy2:32.41816163063049, accuracy3:100.0, loss:0.44871968030929565
20-> accuracy1:100.0, accuracy2:32.41816163063049, accuracy3:100.0, loss:0.44727689027786255
30-> accuracy1:100.0, accuracy2:32.41816163063049, accuracy3:100.0, loss:0.44562360644340515
40-> accuracy1:100.0, accuracy2:32.20697045326233, accuracy3:100.0, loss:0.44401243329048157
50-> accuracy1:100.0, accuracy2:32.04857409000397, accuracy3:100.0, loss:0.44230833649635315
60-> accuracy1:100.0, accuracy2:32.04857409000397, accuracy3:100.0, loss:0.4405578672885895
70-> accuracy1:100.0, accuracy2:31.995776295661926, accuracy3:100.0, loss:0.4387732744216919
80-> accuracy1:100.0, accuracy2:32.04857409000397, accuracy3:100.0, loss:0.43682020902633667
90-> accuracy1:100.0, accuracy2:32.10137188434601, accuracy3:100.0, loss:0.4347110390663147
B(x) = -0.000123063644542322*x1**4 + 0.0118355023056207*x1**3*x2 + 0.0170143144111952*x1**3 - 0.0142075448517823*x1**2*x2**2 - 0.0432162945737316*x1**2*x2 + 0.205868143911278*x1**2 + 0.00832273190246605*x1*x2**3 + 0.0416234408581397*x1*x2**2 + 0.0847280707354261*x1*x2 - 0.485694169568743*x1 - 0.00156137388778541*x2**4 - 0.0107406030311989*x2**3 - 0.030721739598207*x2**2 + 0.371757993423104*x2 + 0.0746890630256752
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:17
0-> accuracy1:100.0, accuracy2:30.491474270820618, accuracy3:100.0, loss:0.44681715965270996
10-> accuracy1:100.0, accuracy2:30.54162561893463, accuracy3:100.0, loss:0.4449492394924164
20-> accuracy1:100.0, accuracy2:30.692076683044434, accuracy3:100.0, loss:0.4429624080657959
30-> accuracy1:100.0, accuracy2:30.842527747154236, accuracy3:100.0, loss:0.44072970747947693
40-> accuracy1:100.0, accuracy2:30.942827463150024, accuracy3:100.0, loss:0.4381888210773468
50-> accuracy1:100.0, accuracy2:31.14342987537384, accuracy3:100.0, loss:0.4354833960533142
60-> accuracy1:100.0, accuracy2:31.243732571601868, accuracy3:100.0, loss:0.43266549706459045
70-> accuracy1:100.0, accuracy2:31.544634699821472, accuracy3:100.0, loss:0.42967689037323
80-> accuracy1:100.0, accuracy2:31.594783067703247, accuracy3:100.0, loss:0.4264751076698303
90-> accuracy1:100.0, accuracy2:31.64493441581726, accuracy3:100.0, loss:0.4232438802719116
B(x) = -0.00152224253302888*x1**4 + 0.0133456204256629*x1**3*x2 + 0.0201518537532032*x1**3 - 0.0169910536779407*x1**2*x2**2 - 0.0561743261923168*x1**2*x2 + 0.234436795690541*x1**2 + 0.00982224470659222*x1*x2**3 + 0.0526981635301562*x1*x2**2 + 0.0842668479199095*x1*x2 - 0.508188223089512*x1 - 0.00177875974945428*x2**4 - 0.0131914850137096*x2**3 - 0.0106319579322611*x2**2 + 0.390405313689886*x2 + 0.0735733224240454
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:18
0-> accuracy1:100.0, accuracy2:30.18147051334381, accuracy3:100.0, loss:0.4336555600166321
10-> accuracy1:100.0, accuracy2:30.420249700546265, accuracy3:100.0, loss:0.4303218722343445
20-> accuracy1:100.0, accuracy2:30.611270666122437, accuracy3:100.0, loss:0.42695724964141846
30-> accuracy1:100.0, accuracy2:30.754536390304565, accuracy3:100.0, loss:0.42367249727249146
40-> accuracy1:100.0, accuracy2:30.945557355880737, accuracy3:100.0, loss:0.4202946126461029
50-> accuracy1:100.0, accuracy2:31.18433654308319, accuracy3:100.0, loss:0.4167715311050415
60-> accuracy1:100.0, accuracy2:31.32760226726532, accuracy3:100.0, loss:0.4129534661769867
70-> accuracy1:100.0, accuracy2:31.32760226726532, accuracy3:100.0, loss:0.4088001251220703
80-> accuracy1:100.0, accuracy2:31.66189193725586, accuracy3:100.0, loss:0.4042132794857025
90-> accuracy1:100.0, accuracy2:31.80515766143799, accuracy3:100.0, loss:0.39915725588798523
B(x) = -0.00249158585904392*x1**4 + 0.0149417871753819*x1**3*x2 + 0.0240406083207836*x1**3 - 0.019877264626809*x1**2*x2**2 - 0.0723652500123333*x1**2*x2 + 0.275879191985341*x1**2 + 0.0115157403082007*x1*x2**3 + 0.0689840334578476*x1*x2**2 + 0.104527868177365*x1*x2 - 0.502167478825258*x1 - 0.00205173509681638*x2**4 - 0.0174543056844974*x2**3 + 0.0235018782126807*x2**2 + 0.452664247772171*x2 + 0.0716583970779298
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:19
0-> accuracy1:100.0, accuracy2:30.537831783294678, accuracy3:100.0, loss:0.40565818548202515
10-> accuracy1:100.0, accuracy2:30.90246021747589, accuracy3:100.0, loss:0.40037739276885986
20-> accuracy1:100.0, accuracy2:31.677302718162537, accuracy3:100.0, loss:0.3950487971305847
30-> accuracy1:100.0, accuracy2:31.76845908164978, accuracy3:100.0, loss:0.3895549178123474
40-> accuracy1:100.0, accuracy2:31.859618425369263, accuracy3:100.0, loss:0.38359692692756653
50-> accuracy1:100.0, accuracy2:31.905195116996765, accuracy3:100.0, loss:0.3771176040172577
60-> accuracy1:100.0, accuracy2:31.950774788856506, accuracy3:100.0, loss:0.3702075183391571
70-> accuracy1:100.0, accuracy2:31.996354460716248, accuracy3:100.0, loss:0.3627157211303711
80-> accuracy1:100.0, accuracy2:32.178670167922974, accuracy3:100.0, loss:0.3542330265045166
90-> accuracy1:100.0, accuracy2:33.363717794418335, accuracy3:100.0, loss:0.34428703784942627
B(x) = -0.0032894219213863*x1**4 + 0.0166817297474342*x1**3*x2 + 0.030419061870347*x1**3 - 0.0216954264318736*x1**2*x2**2 - 0.0993532767565339*x1**2*x2 + 0.361359365026605*x1**2 + 0.0115307021243888*x1*x2**3 + 0.0990082624360199*x1*x2**2 + 0.129786285765353*x1*x2 - 0.54985694323832*x1 - 0.00178366840468643*x2**4 - 0.0267515292438423*x2**3 + 0.110408934170591*x2**2 + 0.535230347388463*x2 + 0.0646780256044819
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:20
0-> accuracy1:100.0, accuracy2:36.57366931438446, accuracy3:100.0, loss:0.3448990285396576
10-> accuracy1:100.0, accuracy2:39.31996524333954, accuracy3:100.0, loss:0.3327798843383789
20-> accuracy1:100.0, accuracy2:39.450740814208984, accuracy3:100.0, loss:0.32404816150665283
30-> accuracy1:100.0, accuracy2:39.712291955947876, accuracy3:100.0, loss:0.317086786031723
40-> accuracy1:100.0, accuracy2:39.930254220962524, accuracy3:100.0, loss:0.3103421628475189
50-> accuracy1:100.0, accuracy2:40.148213505744934, accuracy3:100.0, loss:0.302794873714447
60-> accuracy1:100.0, accuracy2:40.366172790527344, accuracy3:100.0, loss:0.2942773997783661
70-> accuracy1:100.0, accuracy2:40.54054021835327, accuracy3:100.0, loss:0.28519514203071594
80-> accuracy1:100.0, accuracy2:40.80209136009216, accuracy3:100.0, loss:0.2749319076538086
90-> accuracy1:100.0, accuracy2:41.02005362510681, accuracy3:100.0, loss:0.2631780505180359
B(x) = -0.00268531460353416*x1**4 + 0.0150984972118721*x1**3*x2 + 0.0272266782144189*x1**3 - 0.0187150568844866*x1**2*x2**2 - 0.103126503548513*x1**2*x2 + 0.571272345513703*x1**2 + 0.00800395387211443*x1*x2**3 + 0.112338940489993*x1*x2**2 + 0.504367056790146*x1*x2 - 0.416253607315772*x1 - 0.000458143620435301*x2**4 - 0.032137033052104*x2**3 + 0.282690635088761*x2**2 + 0.76326849923742*x2 + 0.0746332420076143
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
Failed
Elapsed Time: 115.52857584296726
