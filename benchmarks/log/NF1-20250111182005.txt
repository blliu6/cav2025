{'batch_size': 500, 'lr': np.float64(0.18), 'loss_weight_continuous': (1, 1, 1), 'R_b': 0.4, 'margin': 0.4, 'DEG_continuous': [2, 4, 4, 2], 'learning_loops': 100, 'max_iter': 20, 'err': 0.02677454477719443}

Mosek can be used normally.
iter:1
0-> accuracy1:0.0, accuracy2:2.9999999329447746, accuracy3:0.0, loss:1.7913579940795898
10-> accuracy1:88.20000290870667, accuracy2:96.20000123977661, accuracy3:100.0, loss:0.40726369619369507
20-> accuracy1:98.60000014305115, accuracy2:98.7999975681305, accuracy3:100.0, loss:0.060658048838377
30-> accuracy1:94.9999988079071, accuracy2:98.4000027179718, accuracy3:100.0, loss:0.5321692824363708
40-> accuracy1:100.0, accuracy2:97.00000286102295, accuracy3:100.0, loss:4.605248928070068
50-> accuracy1:93.80000233650208, accuracy2:98.4000027179718, accuracy3:100.0, loss:11.335886001586914
60-> accuracy1:100.0, accuracy2:98.4000027179718, accuracy3:100.0, loss:6.882786750793457
70-> accuracy1:100.0, accuracy2:99.00000095367432, accuracy3:100.0, loss:5.149086952209473
80-> accuracy1:100.0, accuracy2:99.00000095367432, accuracy3:100.0, loss:2.173964738845825
90-> accuracy1:100.0, accuracy2:92.1999990940094, accuracy3:95.20000219345093, loss:55.24003601074219
B(x) = 882.169584447434*x1**4 + 2428.0501408735*x1**3*x2 + 1839.50470603354*x1**3 + 2971.84066085014*x1**2*x2**2 + 2239.53757549618*x1**2*x2 + 3068.85011667717*x1**2 + 1721.45367598977*x1*x2**3 + 1722.94741343707*x1*x2**2 + 5524.56410904334*x1*x2 - 3191.06496589324*x1 + 589.123321980126*x2**4 + 661.824268635958*x2**3 + 2247.42615910589*x2**2 + 1365.27469243533*x2 + 800.510170748804
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:2
0-> accuracy1:100.0, accuracy2:80.16666769981384, accuracy3:100.0, loss:1234.9156494140625
10-> accuracy1:100.0, accuracy2:99.50000047683716, accuracy3:46.799999475479126, loss:201.49952697753906
20-> accuracy1:100.0, accuracy2:99.16666746139526, accuracy3:97.2000002861023, loss:12.972417831420898
30-> accuracy1:100.0, accuracy2:99.33333396911621, accuracy3:100.0, loss:6.76362419128418
40-> accuracy1:100.0, accuracy2:99.50000047683716, accuracy3:100.0, loss:9.670784950256348
50-> accuracy1:100.0, accuracy2:99.33333396911621, accuracy3:100.0, loss:10.329090118408203
60-> accuracy1:100.0, accuracy2:99.50000047683716, accuracy3:97.60000109672546, loss:7.636650562286377
70-> accuracy1:100.0, accuracy2:99.50000047683716, accuracy3:100.0, loss:4.4734039306640625
80-> accuracy1:100.0, accuracy2:99.6666669845581, accuracy3:96.39999866485596, loss:3.3963143825531006
90-> accuracy1:100.0, accuracy2:99.50000047683716, accuracy3:98.4000027179718, loss:2.345726490020752
B(x) = 764.709536422923*x1**4 + 1491.4493580731*x1**3*x2 + 331.238329945074*x1**3 + 1288.46386297214*x1**2*x2**2 + 1115.77960293966*x1**2*x2 + 464.578506756645*x1**2 + 935.147133716914*x1*x2**3 + 886.38328432199*x1*x2**2 - 2512.98720372914*x1*x2 - 2812.39092924048*x1 + 286.634285956578*x2**4 + 1610.4984588731*x2**3 + 4806.47052932844*x2**2 + 5922.13787068257*x2 + 2586.60743236305
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Add 100 counterexamples!
iter:3
0-> accuracy1:100.0, accuracy2:85.28571724891663, accuracy3:99.19999837875366, loss:162.88502502441406
10-> accuracy1:100.0, accuracy2:93.28571557998657, accuracy3:100.0, loss:15.172246932983398
20-> accuracy1:100.0, accuracy2:99.28571581840515, accuracy3:96.60000205039978, loss:3.4019880294799805
30-> accuracy1:100.0, accuracy2:99.1428554058075, accuracy3:100.0, loss:1.6223297119140625
40-> accuracy1:100.0, accuracy2:99.57143068313599, accuracy3:100.0, loss:0.6565962433815002
50-> accuracy1:100.0, accuracy2:99.42857027053833, accuracy3:98.7999975681305, loss:0.37410005927085876
60-> accuracy1:100.0, accuracy2:99.42857027053833, accuracy3:99.19999837875366, loss:0.3431333601474762
70-> accuracy1:100.0, accuracy2:99.42857027053833, accuracy3:99.00000095367432, loss:0.2729273736476898
80-> accuracy1:100.0, accuracy2:99.57143068313599, accuracy3:99.19999837875366, loss:0.20897959172725677
90-> accuracy1:100.0, accuracy2:99.57143068313599, accuracy3:100.0, loss:0.17495036125183105
B(x) = 177.538258330994*x1**4 + 452.326241870043*x1**3*x2 + 77.4226053191495*x1**3 + 459.558267943574*x1**2*x2**2 + 366.900286108321*x1**2*x2 + 193.357686126201*x1**2 + 136.339186217897*x1*x2**3 + 86.7433160260927*x1*x2**2 - 320.067000193329*x1*x2 - 385.840330226725*x1 + 23.8971775178265*x2**4 + 32.9026781742615*x2**3 + 107.651843839827*x2**2 + 261.312459406908*x2 + 186.189815610036
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:4
0-> accuracy1:100.0, accuracy2:87.12499737739563, accuracy3:100.0, loss:7.922276973724365
10-> accuracy1:100.0, accuracy2:86.75000071525574, accuracy3:63.200002908706665, loss:4.161085605621338
20-> accuracy1:100.0, accuracy2:86.12499833106995, accuracy3:76.99999809265137, loss:3.265653610229492
30-> accuracy1:100.0, accuracy2:87.25000023841858, accuracy3:74.59999918937683, loss:2.3657610416412354
40-> accuracy1:100.0, accuracy2:86.87499761581421, accuracy3:69.59999799728394, loss:1.3908754587173462
50-> accuracy1:100.0, accuracy2:86.75000071525574, accuracy3:74.59999918937683, loss:0.7856826782226562
60-> accuracy1:100.0, accuracy2:87.12499737739563, accuracy3:77.7999997138977, loss:0.49791041016578674
70-> accuracy1:100.0, accuracy2:87.12499737739563, accuracy3:80.40000200271606, loss:0.3837009072303772
80-> accuracy1:100.0, accuracy2:87.00000047683716, accuracy3:82.8000009059906, loss:0.33017563819885254
90-> accuracy1:100.0, accuracy2:87.00000047683716, accuracy3:85.6000006198883, loss:0.29727351665496826
B(x) = 13.6649263585562*x1**4 + 48.8892066728477*x1**3*x2 + 1.39048591093397*x1**3 + 73.8828972320855*x1**2*x2**2 + 26.9567832630734*x1**2*x2 + 13.2233462237938*x1**2 + 43.1718987894574*x1*x2**3 + 14.4126697979213*x1*x2**2 - 17.0051346415309*x1*x2 - 18.534345606509*x1 + 11.3528273649596*x2**4 + 7.50080300540009*x2**3 - 2.48722341514493*x2**2 + 3.03495095366185*x2 + 5.68936775637906
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Add 100 counterexamples!
iter:5
0-> accuracy1:100.0, accuracy2:77.22222208976746, accuracy3:91.60000085830688, loss:0.4350643455982208
10-> accuracy1:100.0, accuracy2:77.33333110809326, accuracy3:80.59999942779541, loss:0.3695394694805145
20-> accuracy1:100.0, accuracy2:76.99999809265137, accuracy3:84.79999899864197, loss:0.33634909987449646
30-> accuracy1:100.0, accuracy2:77.11111307144165, accuracy3:93.59999895095825, loss:0.30554959177970886
40-> accuracy1:100.0, accuracy2:76.99999809265137, accuracy3:100.0, loss:0.28450262546539307
50-> accuracy1:100.0, accuracy2:76.66666507720947, accuracy3:100.0, loss:0.2745530307292938
60-> accuracy1:100.0, accuracy2:76.88888907432556, accuracy3:100.0, loss:0.26522719860076904
70-> accuracy1:100.0, accuracy2:76.66666507720947, accuracy3:100.0, loss:0.26274171471595764
80-> accuracy1:100.0, accuracy2:76.55555605888367, accuracy3:100.0, loss:0.26131996512413025
90-> accuracy1:100.0, accuracy2:76.11111402511597, accuracy3:100.0, loss:0.2613140046596527
B(x) = 1.87548406163069*x1**4 + 8.55711830005787*x1**3*x2 + 1.08354423482774*x1**3 + 15.6303196355324*x1**2*x2**2 + 6.55820922769704*x1**2*x2 + 1.85452091113995*x1**2 + 10.9676354336786*x1*x2**3 + 3.97704375987383*x1*x2**2 - 1.80469316447905*x1*x2 - 1.68549286604283*x1 + 3.69036633386423*x2**4 + 3.82856576229346*x2**3 + 2.85826475354738*x2**2 + 1.86245636245971*x2 + 0.305576974077284
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:6
0-> accuracy1:100.0, accuracy2:68.30000281333923, accuracy3:100.0, loss:0.3328768312931061
10-> accuracy1:100.0, accuracy2:67.40000247955322, accuracy3:100.0, loss:0.32934120297431946
20-> accuracy1:100.0, accuracy2:67.69999861717224, accuracy3:100.0, loss:0.324493408203125
30-> accuracy1:100.0, accuracy2:67.79999732971191, accuracy3:100.0, loss:0.3213205337524414
40-> accuracy1:100.0, accuracy2:67.79999732971191, accuracy3:100.0, loss:0.3197193741798401
50-> accuracy1:100.0, accuracy2:67.40000247955322, accuracy3:100.0, loss:0.31882038712501526
60-> accuracy1:100.0, accuracy2:67.10000038146973, accuracy3:100.0, loss:0.3183756172657013
70-> accuracy1:100.0, accuracy2:67.10000038146973, accuracy3:100.0, loss:0.31798455119132996
80-> accuracy1:100.0, accuracy2:67.10000038146973, accuracy3:100.0, loss:0.31761083006858826
90-> accuracy1:100.0, accuracy2:66.90000295639038, accuracy3:100.0, loss:0.3171691596508026
B(x) = 1.17522033863575*x1**4 + 4.34695531883674*x1**3*x2 + 0.631978220786927*x1**3 + 6.83390203365097*x1**2*x2**2 + 3.53524361017866*x1**2*x2 + 1.58930629135759*x1**2 + 4.73315566916092*x1*x2**3 + 2.35700664968128*x1*x2**2 - 1.40713376027746*x1*x2 - 2.09358301819962*x1 + 1.62958716981407*x2**4 + 2.20840066519004*x2**3 + 2.55199741012092*x2**2 + 2.47332144560113*x2 + 0.852776297627627
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:7
0-> accuracy1:100.0, accuracy2:60.81818342208862, accuracy3:100.0, loss:0.37188875675201416
10-> accuracy1:100.0, accuracy2:60.27272939682007, accuracy3:100.0, loss:0.37108084559440613
20-> accuracy1:100.0, accuracy2:59.36363339424133, accuracy3:100.0, loss:0.37074753642082214
30-> accuracy1:100.0, accuracy2:59.27272439002991, accuracy3:100.0, loss:0.36986029148101807
40-> accuracy1:100.0, accuracy2:59.54545736312866, accuracy3:100.0, loss:0.368429958820343
50-> accuracy1:100.0, accuracy2:59.727275371551514, accuracy3:100.0, loss:0.36711594462394714
60-> accuracy1:100.0, accuracy2:59.727275371551514, accuracy3:100.0, loss:0.36607176065444946
70-> accuracy1:100.0, accuracy2:59.36363339424133, accuracy3:100.0, loss:0.3648412823677063
80-> accuracy1:100.0, accuracy2:58.99999737739563, accuracy3:100.0, loss:0.36331266164779663
90-> accuracy1:100.0, accuracy2:58.909088373184204, accuracy3:100.0, loss:0.3614675998687744
B(x) = 0.515999140102604*x1**4 + 1.8317203505522*x1**3*x2 + 0.457157615691742*x1**3 + 2.5771400168958*x1**2*x2**2 + 1.5967195396*x1**2*x2 + 0.902197459189675*x1**2 + 1.81038752743292*x1*x2**3 + 1.27707124527681*x1*x2**2 - 0.171723084266789*x1*x2 - 1.08345810159472*x1 + 0.627490367556517*x2**4 + 0.839844923549092*x2**3 + 1.17015713427389*x2**2 + 1.17165752254154*x2 + 0.269622658621569
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:8
0-> accuracy1:100.0, accuracy2:54.00000214576721, accuracy3:100.0, loss:0.39752668142318726
10-> accuracy1:100.0, accuracy2:53.75000238418579, accuracy3:100.0, loss:0.3956849277019501
20-> accuracy1:100.0, accuracy2:53.166669607162476, accuracy3:100.0, loss:0.3938888609409332
30-> accuracy1:100.0, accuracy2:52.91666388511658, accuracy3:100.0, loss:0.3918593227863312
40-> accuracy1:100.0, accuracy2:52.49999761581421, accuracy3:100.0, loss:0.38985398411750793
50-> accuracy1:100.0, accuracy2:52.08333134651184, accuracy3:100.0, loss:0.38769611716270447
60-> accuracy1:100.0, accuracy2:51.749998331069946, accuracy3:100.0, loss:0.3856569528579712
70-> accuracy1:100.0, accuracy2:51.33333206176758, accuracy3:100.0, loss:0.38395628333091736
80-> accuracy1:100.0, accuracy2:50.74999928474426, accuracy3:100.0, loss:0.38187795877456665
90-> accuracy1:100.0, accuracy2:50.41666626930237, accuracy3:100.0, loss:0.3797362446784973
B(x) = 0.251414128252062*x1**4 + 0.835534222940175*x1**3*x2 + 0.292958688710206*x1**3 + 1.02107894245244*x1**2*x2**2 + 0.742132577222922*x1**2*x2 + 0.611682334891934*x1**2 + 0.718924091285869*x1*x2**3 + 0.613111642524357*x1*x2**2 + 0.134512335154019*x1*x2 - 0.731254127412838*x1 + 0.262386021008728*x2**4 + 0.313167436474452*x2**3 + 0.648402551734167*x2**2 + 0.621870136446042*x2 + 0.024303599925006
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:9
0-> accuracy1:100.0, accuracy2:46.07692360877991, accuracy3:100.0, loss:0.405819296836853
10-> accuracy1:100.0, accuracy2:45.69230675697327, accuracy3:100.0, loss:0.40374523401260376
20-> accuracy1:100.0, accuracy2:44.846153259277344, accuracy3:100.0, loss:0.4016514718532562
30-> accuracy1:100.0, accuracy2:44.38461661338806, accuracy3:100.0, loss:0.3997451961040497
40-> accuracy1:100.0, accuracy2:43.92307698726654, accuracy3:100.0, loss:0.39801907539367676
50-> accuracy1:100.0, accuracy2:43.76923143863678, accuracy3:100.0, loss:0.3963662087917328
60-> accuracy1:100.0, accuracy2:43.5384601354599, accuracy3:100.0, loss:0.39486023783683777
70-> accuracy1:100.0, accuracy2:43.46153736114502, accuracy3:100.0, loss:0.39358028769493103
80-> accuracy1:100.0, accuracy2:43.30769181251526, accuracy3:100.0, loss:0.39234742522239685
90-> accuracy1:100.0, accuracy2:43.30769181251526, accuracy3:100.0, loss:0.3909514546394348
B(x) = 0.127257788214202*x1**4 + 0.401945739487738*x1**3*x2 + 0.178558515311351*x1**3 + 0.407487908265867*x1**2*x2**2 + 0.33070501260881*x1**2*x2 + 0.453741505019239*x1**2 + 0.321903612032568*x1*x2**3 + 0.325430411552559*x1*x2**2 + 0.128071040861959*x1*x2 - 0.683762778010267*x1 + 0.132877943858669*x2**4 + 0.147677445317654*x2**3 + 0.526348084334743*x2**2 + 0.547304493632582*x2 + 0.0243521621604707
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:10
0-> accuracy1:100.0, accuracy2:40.142858028411865, accuracy3:100.0, loss:0.4121013581752777
10-> accuracy1:100.0, accuracy2:40.142858028411865, accuracy3:100.0, loss:0.4106265902519226
20-> accuracy1:100.0, accuracy2:40.00000059604645, accuracy3:100.0, loss:0.40953004360198975
30-> accuracy1:100.0, accuracy2:39.85714316368103, accuracy3:100.0, loss:0.40851861238479614
40-> accuracy1:100.0, accuracy2:39.71428573131561, accuracy3:100.0, loss:0.40755152702331543
50-> accuracy1:100.0, accuracy2:39.35714364051819, accuracy3:100.0, loss:0.4065228998661041
60-> accuracy1:100.0, accuracy2:39.28571343421936, accuracy3:100.0, loss:0.40543559193611145
70-> accuracy1:100.0, accuracy2:39.28571343421936, accuracy3:100.0, loss:0.40427476167678833
80-> accuracy1:100.0, accuracy2:39.21428620815277, accuracy3:100.0, loss:0.4029593765735626
90-> accuracy1:100.0, accuracy2:39.07142877578735, accuracy3:100.0, loss:0.4017219543457031
B(x) = 0.0614148998826737*x1**4 + 0.190150520575913*x1**3*x2 + 0.105425658030672*x1**3 + 0.14276035665643*x1**2*x2**2 + 0.132204512776111*x1**2*x2 + 0.340855960290634*x1**2 + 0.152028508811395*x1*x2**3 + 0.188629086164567*x1*x2**2 + 0.0803460592268581*x1*x2 - 0.621686334484292*x1 + 0.0755691682762028*x2**4 + 0.0641532750463944*x2**3 + 0.434723473735217*x2**2 + 0.534436577306172*x2 + 0.0297523670258987
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:11
0-> accuracy1:100.0, accuracy2:36.46666705608368, accuracy3:100.0, loss:0.4197100102901459
10-> accuracy1:100.0, accuracy2:36.266666650772095, accuracy3:100.0, loss:0.41844886541366577
20-> accuracy1:100.0, accuracy2:36.133334040641785, accuracy3:100.0, loss:0.41756701469421387
30-> accuracy1:100.0, accuracy2:36.133334040641785, accuracy3:100.0, loss:0.41688257455825806
40-> accuracy1:100.0, accuracy2:36.06666624546051, accuracy3:100.0, loss:0.4162837862968445
50-> accuracy1:100.0, accuracy2:35.9333336353302, accuracy3:100.0, loss:0.4156690835952759
60-> accuracy1:100.0, accuracy2:35.733333230018616, accuracy3:100.0, loss:0.4150368571281433
70-> accuracy1:100.0, accuracy2:35.66666543483734, accuracy3:100.0, loss:0.4144080579280853
80-> accuracy1:100.0, accuracy2:35.600000619888306, accuracy3:100.0, loss:0.41383400559425354
90-> accuracy1:100.0, accuracy2:35.600000619888306, accuracy3:100.0, loss:0.4132506549358368
B(x) = 0.029666170561458*x1**4 + 0.0925909654947325*x1**3*x2 + 0.0622287555164215*x1**3 + 0.0343432594772847*x1**2*x2**2 + 0.0396463582119262*x1**2*x2 + 0.258766909469087*x1**2 + 0.0763717317895028*x1*x2**3 + 0.120149765127729*x1*x2**2 + 0.0197257018879039*x1*x2 - 0.555040409379386*x1 + 0.0456604618867353*x2**4 + 0.0217573095309061*x2**3 + 0.355271372393409*x2**2 + 0.546327216680016*x2 + 0.0304487558500391
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:12
0-> accuracy1:100.0, accuracy2:33.31249952316284, accuracy3:100.0, loss:0.4297715425491333
10-> accuracy1:100.0, accuracy2:33.18749964237213, accuracy3:100.0, loss:0.4291776418685913
20-> accuracy1:100.0, accuracy2:32.93749988079071, accuracy3:100.0, loss:0.4289463460445404
30-> accuracy1:100.0, accuracy2:32.68750011920929, accuracy3:100.0, loss:0.42879897356033325
40-> accuracy1:100.0, accuracy2:32.249999046325684, accuracy3:100.0, loss:0.4286298453807831
50-> accuracy1:100.0, accuracy2:31.937500834465027, accuracy3:100.0, loss:0.4282740354537964
60-> accuracy1:100.0, accuracy2:31.437501311302185, accuracy3:100.0, loss:0.42778533697128296
70-> accuracy1:100.0, accuracy2:31.37499988079071, accuracy3:100.0, loss:0.4272927939891815
80-> accuracy1:100.0, accuracy2:31.312501430511475, accuracy3:100.0, loss:0.42668455839157104
90-> accuracy1:100.0, accuracy2:31.25, accuracy3:100.0, loss:0.426016241312027
B(x) = 0.0149262079907791*x1**4 + 0.0503223171080512*x1**3*x2 + 0.0389665255193685*x1**3 - 0.00440163197656532*x1**2*x2**2 - 0.000893252442820079*x1**2*x2 + 0.200348713419089*x1**2 + 0.0460139955951367*x1*x2**3 + 0.0937442248972223*x1*x2**2 - 0.0181930529604489*x1*x2 - 0.487586460362398*x1 + 0.0294456222068234*x2**4 + 0.00376595125321106*x2**3 + 0.305861519098108*x2**2 + 0.562539159912105*x2 + 0.0263391288343765
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:13
0-> accuracy1:100.0, accuracy2:28.94117534160614, accuracy3:100.0, loss:0.44193536043167114
10-> accuracy1:100.0, accuracy2:28.294116258621216, accuracy3:100.0, loss:0.44119033217430115
20-> accuracy1:100.0, accuracy2:27.352941036224365, accuracy3:100.0, loss:0.4404841363430023
30-> accuracy1:100.0, accuracy2:26.823529601097107, accuracy3:100.0, loss:0.4398711323738098
40-> accuracy1:100.0, accuracy2:26.529410481452942, accuracy3:100.0, loss:0.4390338957309723
50-> accuracy1:100.0, accuracy2:26.29411816596985, accuracy3:100.0, loss:0.43804895877838135
60-> accuracy1:100.0, accuracy2:26.647058129310608, accuracy3:100.0, loss:0.4369065463542938
70-> accuracy1:100.0, accuracy2:27.294117212295532, accuracy3:100.0, loss:0.43560636043548584
80-> accuracy1:100.0, accuracy2:28.117647767066956, accuracy3:100.0, loss:0.4340604543685913
90-> accuracy1:100.0, accuracy2:28.76470685005188, accuracy3:100.0, loss:0.4322356879711151
B(x) = 0.00931676515491422*x1**4 + 0.0361200310643742*x1**3*x2 + 0.0304857935863198*x1**3 - 0.0169896272069084*x1**2*x2**2 - 0.0161922039417314*x1**2*x2 + 0.176333958900286*x1**2 + 0.0370743771475161*x1*x2**3 + 0.0937865452129994*x1*x2**2 + 0.000286592204975752*x1*x2 - 0.407600996563988*x1 + 0.0232567204036625*x2**4 - 0.00630368234989271*x2**3 + 0.308368640524712*x2**2 + 0.60688701558339*x2 + 0.0159007176171865
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:14
0-> accuracy1:100.0, accuracy2:27.611112594604492, accuracy3:100.0, loss:0.4451172947883606
10-> accuracy1:100.0, accuracy2:27.833333611488342, accuracy3:100.0, loss:0.4429183304309845
20-> accuracy1:100.0, accuracy2:27.944445610046387, accuracy3:100.0, loss:0.44074761867523193
30-> accuracy1:100.0, accuracy2:28.22222113609314, accuracy3:100.0, loss:0.4384605288505554
40-> accuracy1:100.0, accuracy2:28.27777862548828, accuracy3:100.0, loss:0.435872346162796
50-> accuracy1:100.0, accuracy2:28.333333134651184, accuracy3:100.0, loss:0.4330267310142517
60-> accuracy1:100.0, accuracy2:28.333333134651184, accuracy3:100.0, loss:0.4298584461212158
70-> accuracy1:100.0, accuracy2:28.388887643814087, accuracy3:100.0, loss:0.4262148439884186
80-> accuracy1:100.0, accuracy2:28.611111640930176, accuracy3:100.0, loss:0.4220588505268097
90-> accuracy1:100.0, accuracy2:28.777778148651123, accuracy3:100.0, loss:0.4177381992340088
B(x) = 0.00814049279254107*x1**4 + 0.0337170359762553*x1**3*x2 + 0.0301138976038957*x1**3 - 0.0307138504438742*x1**2*x2**2 - 0.0310576489130101*x1**2*x2 + 0.191855238797273*x1**2 + 0.0391652877920896*x1*x2**3 + 0.113670138725277*x1*x2**2 + 0.0490461494497177*x1*x2 - 0.36635364222967*x1 + 0.023929692278991*x2**4 - 0.0226278237052713*x2**3 + 0.382564118469585*x2**2 + 0.68983843744861*x2 + 0.00538766634978172
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:15
0-> accuracy1:100.0, accuracy2:27.315789461135864, accuracy3:100.0, loss:0.42777401208877563
10-> accuracy1:100.0, accuracy2:27.315789461135864, accuracy3:100.0, loss:0.42406538128852844
20-> accuracy1:100.0, accuracy2:27.421051263809204, accuracy3:100.0, loss:0.42059579491615295
30-> accuracy1:100.0, accuracy2:27.578946948051453, accuracy3:100.0, loss:0.417527437210083
40-> accuracy1:100.0, accuracy2:27.631577849388123, accuracy3:100.0, loss:0.41448426246643066
50-> accuracy1:100.0, accuracy2:27.78947353363037, accuracy3:100.0, loss:0.4113461971282959
60-> accuracy1:100.0, accuracy2:28.00000011920929, accuracy3:100.0, loss:0.4080609977245331
70-> accuracy1:100.0, accuracy2:28.05263102054596, accuracy3:100.0, loss:0.4047173261642456
80-> accuracy1:100.0, accuracy2:28.10526192188263, accuracy3:100.0, loss:0.4012008011341095
90-> accuracy1:100.0, accuracy2:28.210526704788208, accuracy3:100.0, loss:0.3973582684993744
B(x) = 0.010584665273453*x1**4 + 0.0293531215050776*x1**3*x2 + 0.0313030118495874*x1**3 - 0.0423620751723734*x1**2*x2**2 - 0.035922931732802*x1**2*x2 + 0.2760729175428*x1**2 + 0.0505469707258283*x1*x2**3 + 0.124327389420344*x1*x2**2 + 0.161109555703955*x1*x2 - 0.360441177159396*x1 + 0.0166630566704999*x2**4 - 0.0394837726851809*x2**3 + 0.447542377289886*x2**2 + 0.716383562828564*x2 - 0.0118454414969025
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:16
0-> accuracy1:100.0, accuracy2:26.80000066757202, accuracy3:100.0, loss:0.4033896028995514
10-> accuracy1:100.0, accuracy2:26.899999380111694, accuracy3:100.0, loss:0.3990180790424347
20-> accuracy1:100.0, accuracy2:26.94999873638153, accuracy3:100.0, loss:0.39421725273132324
30-> accuracy1:100.0, accuracy2:27.250000834465027, accuracy3:100.0, loss:0.3891575336456299
40-> accuracy1:100.0, accuracy2:27.3499995470047, accuracy3:100.0, loss:0.3837735652923584
50-> accuracy1:100.0, accuracy2:27.3499995470047, accuracy3:100.0, loss:0.37825125455856323
60-> accuracy1:100.0, accuracy2:27.399998903274536, accuracy3:100.0, loss:0.3724910318851471
70-> accuracy1:100.0, accuracy2:27.549999952316284, accuracy3:100.0, loss:0.366326242685318
80-> accuracy1:100.0, accuracy2:28.24999988079071, accuracy3:100.0, loss:0.3596782088279724
90-> accuracy1:100.0, accuracy2:30.300000309944153, accuracy3:100.0, loss:0.3522738218307495
B(x) = 0.0166979590457825*x1**4 + 0.0275847289450772*x1**3*x2 + 0.0393110323308788*x1**3 - 0.0629218233533167*x1**2*x2**2 - 0.0482602034316492*x1**2*x2 + 0.576594925450287*x1**2 + 0.0796902564187401*x1*x2**3 + 0.153071724768511*x1*x2**2 + 0.37857010006549*x1*x2 - 0.481247758963392*x1 + 0.00132599091319316*x2**4 - 0.0610534049957385*x2**3 + 0.547749661385425*x2**2 + 0.691869369880023*x2 - 0.0759613967972142
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:17
0-> accuracy1:100.0, accuracy2:30.761903524398804, accuracy3:100.0, loss:0.35169124603271484
10-> accuracy1:100.0, accuracy2:31.333333253860474, accuracy3:100.0, loss:0.3426334857940674
20-> accuracy1:100.0, accuracy2:31.52380883693695, accuracy3:100.0, loss:0.3342512249946594
30-> accuracy1:100.0, accuracy2:31.52380883693695, accuracy3:100.0, loss:0.3265349268913269
40-> accuracy1:100.0, accuracy2:31.57142996788025, accuracy3:100.0, loss:0.3191700875759125
50-> accuracy1:100.0, accuracy2:31.666666269302368, accuracy3:100.0, loss:0.3117823302745819
60-> accuracy1:100.0, accuracy2:31.666666269302368, accuracy3:100.0, loss:0.3041767179965973
70-> accuracy1:100.0, accuracy2:31.714284420013428, accuracy3:100.0, loss:0.29622241854667664
80-> accuracy1:100.0, accuracy2:32.71428644657135, accuracy3:100.0, loss:0.2876719832420349
90-> accuracy1:98.60000014305115, accuracy2:36.47619187831879, accuracy3:100.0, loss:0.27787309885025024
B(x) = 0.0213988547190042*x1**4 + 0.0228114198298586*x1**3*x2 + 0.0433584447926197*x1**3 - 0.0759264846364619*x1**2*x2**2 - 0.0298394535754848*x1**2*x2 + 1.19018687527528*x1**2 + 0.109124363745122*x1*x2**3 + 0.19728345951571*x1*x2**2 + 1.21830138458335*x1*x2 - 0.512802260349126*x1 - 0.00806288238060382*x2**4 - 0.096648536951376*x2**3 + 0.849638142567937*x2**2 + 0.829485747879799*x2 - 0.144017120719578
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:18
0-> accuracy1:98.00000190734863, accuracy2:39.36363756656647, accuracy3:100.0, loss:0.2967619299888611
10-> accuracy1:94.80000138282776, accuracy2:42.09090769290924, accuracy3:100.0, loss:0.2763105034828186
20-> accuracy1:98.00000190734863, accuracy2:42.22727417945862, accuracy3:100.0, loss:0.2515522241592407
30-> accuracy1:99.00000095367432, accuracy2:47.681817412376404, accuracy3:100.0, loss:0.2296285778284073
40-> accuracy1:100.0, accuracy2:48.500001430511475, accuracy3:100.0, loss:0.2161514163017273
50-> accuracy1:98.60000014305115, accuracy2:50.95454454421997, accuracy3:100.0, loss:0.20427709817886353
60-> accuracy1:99.40000176429749, accuracy2:52.86363363265991, accuracy3:100.0, loss:0.19165325164794922
70-> accuracy1:98.60000014305115, accuracy2:56.545454263687134, accuracy3:100.0, loss:0.17756876349449158
80-> accuracy1:97.79999852180481, accuracy2:59.81818437576294, accuracy3:100.0, loss:0.1618129014968872
90-> accuracy1:97.00000286102295, accuracy2:66.63636565208435, accuracy3:100.0, loss:0.14287272095680237
B(x) = 0.0255989014220204*x1**4 + 0.0527169687041743*x1**3*x2 + 0.0665020849029902*x1**3 - 0.255539493254084*x1**2*x2**2 - 0.176886665683056*x1**2*x2 + 2.59822379063638*x1**2 + 0.310132820152472*x1*x2**3 + 0.720327158374043*x1*x2**2 + 2.87519189903126*x1*x2 - 1.37412834896281*x1 - 0.0621323493365525*x2**4 - 0.39807717588773*x2**3 + 1.91149043595588*x2**2 + 0.803907764962182*x2 - 0.402447169686462
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:19
0-> accuracy1:96.39999866485596, accuracy2:73.00000190734863, accuracy3:100.0, loss:0.15488339960575104
10-> accuracy1:93.19999814033508, accuracy2:80.17391562461853, accuracy3:100.0, loss:0.1342097371816635
20-> accuracy1:95.59999704360962, accuracy2:83.0434799194336, accuracy3:100.0, loss:0.11648353934288025
30-> accuracy1:96.39999866485596, accuracy2:85.6521725654602, accuracy3:100.0, loss:0.10146835446357727
40-> accuracy1:96.39999866485596, accuracy2:87.1739149093628, accuracy3:100.0, loss:0.08612573146820068
50-> accuracy1:99.19999837875366, accuracy2:86.65217161178589, accuracy3:100.0, loss:0.07129811495542526
60-> accuracy1:99.40000176429749, accuracy2:88.78260850906372, accuracy3:100.0, loss:0.05979558825492859
70-> accuracy1:98.60000014305115, accuracy2:90.95652103424072, accuracy3:100.0, loss:0.05085555464029312
80-> accuracy1:99.59999918937683, accuracy2:92.04347729682922, accuracy3:100.0, loss:0.04455862194299698
90-> accuracy1:99.59999918937683, accuracy2:92.21739172935486, accuracy3:100.0, loss:0.040129564702510834
B(x) = -0.000667397509480707*x1**4 + 0.218320036765416*x1**3*x2 + 0.190656573812626*x1**3 - 0.745055778148885*x1**2*x2**2 - 0.975365301452264*x1**2*x2 + 3.78886508032837*x1**2 + 0.740000899289107*x1*x2**3 + 2.23689997046751*x1*x2**2 + 3.84349375190903*x1*x2 - 1.52663402692447*x1 - 0.188676399422744*x2**4 - 1.11419493962616*x2**3 + 1.82668226201897*x2**2 + 2.43100518140667*x2 - 0.703025708183845
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:20
0-> accuracy1:99.19999837875366, accuracy2:88.45833539962769, accuracy3:100.0, loss:0.06966102868318558
10-> accuracy1:99.19999837875366, accuracy2:89.083331823349, accuracy3:100.0, loss:0.06826162338256836
20-> accuracy1:99.40000176429749, accuracy2:88.95833492279053, accuracy3:100.0, loss:0.06791777908802032
30-> accuracy1:99.19999837875366, accuracy2:89.12500143051147, accuracy3:100.0, loss:0.06780438870191574
40-> accuracy1:100.0, accuracy2:89.041668176651, accuracy3:100.0, loss:0.06763654202222824
50-> accuracy1:99.19999837875366, accuracy2:89.20833468437195, accuracy3:100.0, loss:0.06725843250751495
60-> accuracy1:99.40000176429749, accuracy2:89.16666507720947, accuracy3:100.0, loss:0.06682567298412323
70-> accuracy1:100.0, accuracy2:89.12500143051147, accuracy3:100.0, loss:0.06637603044509888
80-> accuracy1:99.40000176429749, accuracy2:89.20833468437195, accuracy3:100.0, loss:0.06592027097940445
90-> accuracy1:100.0, accuracy2:89.33333158493042, accuracy3:100.0, loss:0.06539231538772583
B(x) = -0.072411148619854*x1**4 + 0.400300223594401*x1**3*x2 + 0.369751517433002*x1**3 - 0.815756181629677*x1**2*x2**2 - 1.40413341128231*x1**2*x2 + 3.74774880931295*x1**2 + 0.582850008128938*x1*x2**3 + 2.0796247423979*x1*x2**2 + 3.17761424724942*x1*x2 - 1.71202877031583*x1 - 0.115645872818276*x2**4 - 0.797958741583079*x2**3 + 0.993908901444393*x2**2 + 2.43367684794974*x2 - 0.697991131069337
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
Failed
Elapsed Time: 106.69829307799228
