{'batch_size': 500, 'lr': np.float64(0.07999999999999999), 'loss_weight_continuous': (1, 1, 1), 'R_b': 0.4, 'margin': 0.4, 'DEG_continuous': [2, 4, 4, 2], 'learning_loops': 100, 'max_iter': 20, 'err': 0.24416471067351453}

Mosek can be used normally.
iter:1
0-> accuracy1:0.0, accuracy2:12.999999523162842, accuracy3:0.0, loss:2.016749858856201
10-> accuracy1:100.0, accuracy2:96.79999947547913, accuracy3:93.00000071525574, loss:0.06354954838752747
20-> accuracy1:100.0, accuracy2:98.7999975681305, accuracy3:94.9999988079071, loss:0.029302310198545456
30-> accuracy1:100.0, accuracy2:98.7999975681305, accuracy3:100.0, loss:0.008191128261387348
40-> accuracy1:100.0, accuracy2:99.40000176429749, accuracy3:100.0, loss:-0.003254988230764866
50-> accuracy1:100.0, accuracy2:99.40000176429749, accuracy3:100.0, loss:-0.004475384019315243
60-> accuracy1:100.0, accuracy2:99.59999918937683, accuracy3:100.0, loss:-0.006741343066096306
70-> accuracy1:100.0, accuracy2:99.59999918937683, accuracy3:100.0, loss:-0.00804655160754919
80-> accuracy1:100.0, accuracy2:99.59999918937683, accuracy3:100.0, loss:-0.008673660457134247
90-> accuracy1:100.0, accuracy2:99.59999918937683, accuracy3:100.0, loss:-0.008839076384902
B(x) = 0.810576351424417*x1**4 + 2.25635996850636*x1**3*x2 - 1.6465448210656*x1**3 + 1.59409571852317*x1**2*x2**2 - 1.37432545835724*x1**2*x2 + 9.27268674610366*x1**2 + 2.10857045741647*x1*x2**3 + 5.14867420385851*x1*x2**2 + 10.5131722225773*x1*x2 - 4.97487641914276*x1 + 1.12740020513694*x2**4 + 3.23021084383751*x2**3 + 7.79891611481958*x2**2 + 4.06929586467449*x2 + 1.27091222782281
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:2
0-> accuracy1:100.0, accuracy2:82.99999833106995, accuracy3:100.0, loss:0.2192530781030655
10-> accuracy1:100.0, accuracy2:96.16666436195374, accuracy3:59.79999899864197, loss:0.5690993666648865
20-> accuracy1:100.0, accuracy2:86.16666793823242, accuracy3:100.0, loss:0.16365893185138702
30-> accuracy1:100.0, accuracy2:93.50000023841858, accuracy3:100.0, loss:0.6124937534332275
40-> accuracy1:91.39999747276306, accuracy2:98.66666793823242, accuracy3:100.0, loss:0.5994294285774231
50-> accuracy1:99.80000257492065, accuracy2:97.83333539962769, accuracy3:100.0, loss:4.327323913574219
60-> accuracy1:100.0, accuracy2:98.66666793823242, accuracy3:100.0, loss:4.118812561035156
70-> accuracy1:98.00000190734863, accuracy2:98.83333444595337, accuracy3:100.0, loss:2.2693769931793213
80-> accuracy1:98.19999933242798, accuracy2:94.9999988079071, accuracy3:100.0, loss:8.233664512634277
90-> accuracy1:94.40000057220459, accuracy2:98.66666793823242, accuracy3:100.0, loss:7.915483474731445
B(x) = 195.31921128289*x1**4 + 215.991625762449*x1**3*x2 + 1685.42033345267*x1**3 - 188.4740006791*x1**2*x2**2 - 1783.56936427617*x1**2*x2 + 2477.01288233635*x1**2 + 53.7857879591307*x1*x2**3 - 165.78848933617*x1*x2**2 + 4023.5814830904*x1*x2 - 4012.31155615637*x1 + 41.8624490895842*x2**4 - 230.451335379876*x2**3 - 1311.09252333249*x2**2 + 2465.36527058744*x2 - 1047.43171109286
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:3
0-> accuracy1:100.0, accuracy2:84.42857265472412, accuracy3:100.0, loss:179.54513549804688
10-> accuracy1:94.59999799728394, accuracy2:98.57142567634583, accuracy3:100.0, loss:15.654138565063477
20-> accuracy1:100.0, accuracy2:99.00000095367432, accuracy3:100.0, loss:4.938876628875732
30-> accuracy1:100.0, accuracy2:99.1428554058075, accuracy3:100.0, loss:3.536036252975464
40-> accuracy1:97.60000109672546, accuracy2:99.28571581840515, accuracy3:100.0, loss:2.175588846206665
50-> accuracy1:99.59999918937683, accuracy2:99.28571581840515, accuracy3:100.0, loss:1.5013328790664673
60-> accuracy1:100.0, accuracy2:99.28571581840515, accuracy3:100.0, loss:1.2319046258926392
70-> accuracy1:98.19999933242798, accuracy2:99.28571581840515, accuracy3:100.0, loss:0.7362136840820312
80-> accuracy1:99.19999837875366, accuracy2:99.28571581840515, accuracy3:100.0, loss:0.5939793586730957
90-> accuracy1:100.0, accuracy2:99.28571581840515, accuracy3:100.0, loss:0.7314428091049194
B(x) = 888.197617588738*x1**4 + 2025.06357597912*x1**3*x2 - 329.600716008282*x1**3 + 1735.95662619993*x1**2*x2**2 - 2224.71837837697*x1**2*x2 + 2459.9863591093*x1**2 + 866.75664821394*x1*x2**3 - 2420.55992152186*x1*x2**2 + 4488.51059148731*x1*x2 - 720.036020216658*x1 + 224.522501350749*x2**4 - 1056.54427471603*x2**3 + 1771.16469504668*x2**2 + 112.914503878537*x2 - 160.491745886759
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 47 counterexamples!
Add 100 counterexamples!
iter:4
0-> accuracy1:90.12796878814697, accuracy2:86.87499761581421, accuracy3:100.0, loss:11.269401550292969
10-> accuracy1:90.12796878814697, accuracy2:86.87499761581421, accuracy3:100.0, loss:25.102664947509766
20-> accuracy1:89.5795226097107, accuracy2:86.87499761581421, accuracy3:100.0, loss:13.572076797485352
30-> accuracy1:96.89213633537292, accuracy2:95.49999833106995, accuracy3:97.2000002861023, loss:2.179988145828247
40-> accuracy1:97.4405825138092, accuracy2:94.87500190734863, accuracy3:100.0, loss:0.8829876184463501
50-> accuracy1:100.0, accuracy2:93.25000047683716, accuracy3:100.0, loss:0.9304628968238831
60-> accuracy1:99.26874041557312, accuracy2:95.99999785423279, accuracy3:100.0, loss:0.4421016573905945
70-> accuracy1:97.80621528625488, accuracy2:97.75000214576721, accuracy3:100.0, loss:0.2853277027606964
80-> accuracy1:99.45155382156372, accuracy2:98.25000166893005, accuracy3:100.0, loss:0.18092821538448334
90-> accuracy1:99.8171865940094, accuracy2:98.62499833106995, accuracy3:100.0, loss:0.131946861743927
B(x) = 391.259039743486*x1**4 + 1064.40681577678*x1**3*x2 - 500.12934957811*x1**3 + 1106.59445983319*x1**2*x2**2 - 1694.41033260926*x1**2*x2 + 863.751658682859*x1**2 + 440.439378720232*x1*x2**3 - 1328.34864025971*x1*x2**2 + 1713.84266032405*x1*x2 - 466.280490276544*x1 + 56.7426146147211*x2**4 - 286.770093181653*x2**3 + 661.070486387327*x2**2 - 224.286726195366*x2 + 4.37632779868318
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:5
0-> accuracy1:99.8171865940094, accuracy2:87.44444251060486, accuracy3:100.0, loss:2.321380138397217
10-> accuracy1:91.22486114501953, accuracy2:87.99999952316284, accuracy3:100.0, loss:1.6112464666366577
20-> accuracy1:96.34369015693665, accuracy2:88.22222352027893, accuracy3:98.4000027179718, loss:1.2380813360214233
30-> accuracy1:97.2577691078186, accuracy2:87.44444251060486, accuracy3:98.60000014305115, loss:0.909008800983429
40-> accuracy1:96.34369015693665, accuracy2:87.66666650772095, accuracy3:99.59999918937683, loss:0.7487451434135437
50-> accuracy1:94.149911403656, accuracy2:87.44444251060486, accuracy3:99.40000176429749, loss:0.6369152665138245
60-> accuracy1:95.97806334495544, accuracy2:87.55555748939514, accuracy3:99.00000095367432, loss:0.5409966707229614
70-> accuracy1:93.78427863121033, accuracy2:87.66666650772095, accuracy3:100.0, loss:0.4676649570465088
80-> accuracy1:96.16087675094604, accuracy2:87.55555748939514, accuracy3:99.59999918937683, loss:0.4037608504295349
90-> accuracy1:95.06398439407349, accuracy2:87.88889050483704, accuracy3:99.59999918937683, loss:0.3607586920261383
B(x) = 196.563036902042*x1**4 + 556.547123243532*x1**3*x2 - 275.095077796857*x1**3 + 577.719396234138*x1**2*x2**2 - 757.52278030144*x1**2*x2 + 383.545352387447*x1**2 + 238.746399501818*x1*x2**3 - 582.212125503695*x1*x2**2 + 704.358337988494*x1*x2 - 112.510127873437*x1 + 32.8798999735735*x2**4 - 128.452531918387*x2**3 + 278.296236535499*x2**2 - 53.310777012406*x2 - 3.90863574296838
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 84 counterexamples!
iter:6
0-> accuracy1:95.61243057250977, accuracy2:80.28455376625061, accuracy3:100.0, loss:0.5332067608833313
10-> accuracy1:92.68738627433777, accuracy2:80.69105744361877, accuracy3:99.40000176429749, loss:0.47114086151123047
20-> accuracy1:91.40768051147461, accuracy2:81.40243887901306, accuracy3:99.19999837875366, loss:0.4202732443809509
30-> accuracy1:91.22486114501953, accuracy2:81.19918704032898, accuracy3:99.59999918937683, loss:0.3795980215072632
40-> accuracy1:91.95612668991089, accuracy2:81.09756112098694, accuracy3:99.19999837875366, loss:0.344113290309906
50-> accuracy1:92.13894009590149, accuracy2:80.58943152427673, accuracy3:99.59999918937683, loss:0.3147019147872925
60-> accuracy1:91.59049391746521, accuracy2:80.89430928230286, accuracy3:99.59999918937683, loss:0.2883158326148987
70-> accuracy1:91.95612668991089, accuracy2:80.9959352016449, accuracy3:99.19999837875366, loss:0.2658574879169464
80-> accuracy1:92.13894009590149, accuracy2:80.79268336296082, accuracy3:100.0, loss:0.2466602474451065
90-> accuracy1:92.50457286834717, accuracy2:80.89430928230286, accuracy3:99.80000257492065, loss:0.23052293062210083
B(x) = 107.405315121634*x1**4 + 298.867828793445*x1**3*x2 - 172.467213570258*x1**3 + 297.495808775713*x1**2*x2**2 - 394.611354578278*x1**2*x2 + 198.770245514414*x1**2 + 118.8868915664*x1*x2**3 - 274.348890387929*x1*x2**2 + 341.664527817065*x1*x2 - 44.4262547198428*x1 + 16.1961434373738*x2**4 - 56.840041298676*x2**3 + 130.030599655916*x2**2 - 21.0801814427934*x2 - 1.51937274147621
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 26 counterexamples!
Add 78 counterexamples!
iter:7
0-> accuracy1:88.48167657852173, accuracy2:74.76459741592407, accuracy3:99.80000257492065, loss:0.3175009489059448
10-> accuracy1:93.54275465011597, accuracy2:75.42372941970825, accuracy3:100.0, loss:0.28308770060539246
20-> accuracy1:93.71727705001831, accuracy2:75.80037713050842, accuracy3:99.59999918937683, loss:0.26647505164146423
30-> accuracy1:91.09947681427002, accuracy2:75.80037713050842, accuracy3:100.0, loss:0.2520332336425781
40-> accuracy1:95.46247720718384, accuracy2:75.42372941970825, accuracy3:100.0, loss:0.24003931879997253
50-> accuracy1:96.50959968566895, accuracy2:74.95291829109192, accuracy3:99.80000257492065, loss:0.23041653633117676
60-> accuracy1:95.63699960708618, accuracy2:75.23540258407593, accuracy3:100.0, loss:0.22212505340576172
70-> accuracy1:96.50959968566895, accuracy2:74.57627058029175, accuracy3:100.0, loss:0.21439623832702637
80-> accuracy1:96.50959968566895, accuracy2:74.19962286949158, accuracy3:100.0, loss:0.20850437879562378
90-> accuracy1:96.50959968566895, accuracy2:74.19962286949158, accuracy3:100.0, loss:0.20319433510303497
B(x) = 60.2945475441322*x1**4 + 164.083259050019*x1**3*x2 - 104.003132123516*x1**3 + 157.243115568786*x1**2*x2**2 - 215.989561553334*x1**2*x2 + 102.866437288447*x1**2 + 59.8881803773421*x1*x2**3 - 136.866276390465*x1*x2**2 + 174.364541715928*x1*x2 - 17.5059954275252*x1 + 7.71160249021894*x2**4 - 25.0419192768184*x2**3 + 65.8544731255088*x2**2 - 7.95617112366182*x2 - 0.370809624365036
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 78 counterexamples!
iter:8
0-> accuracy1:96.50959968566895, accuracy2:68.85964870452881, accuracy3:100.0, loss:0.23994103074073792
10-> accuracy1:96.16056084632874, accuracy2:69.12280917167664, accuracy3:100.0, loss:0.2345559000968933
20-> accuracy1:96.50959968566895, accuracy2:68.77192854881287, accuracy3:100.0, loss:0.22949311137199402
30-> accuracy1:96.85863852500916, accuracy2:68.42105388641357, accuracy3:100.0, loss:0.22570055723190308
40-> accuracy1:97.0331609249115, accuracy2:68.33333373069763, accuracy3:100.0, loss:0.22227537631988525
50-> accuracy1:97.0331609249115, accuracy2:67.98245906829834, accuracy3:100.0, loss:0.219801664352417
60-> accuracy1:96.68411612510681, accuracy2:68.15789341926575, accuracy3:100.0, loss:0.2170649617910385
70-> accuracy1:97.0331609249115, accuracy2:67.71929860115051, accuracy3:100.0, loss:0.21477016806602478
80-> accuracy1:97.38219976425171, accuracy2:67.54385828971863, accuracy3:100.0, loss:0.21322424709796906
90-> accuracy1:97.38219976425171, accuracy2:67.28070378303528, accuracy3:100.0, loss:0.2119225561618805
B(x) = 35.1034220278888*x1**4 + 93.3930552057755*x1**3*x2 - 63.7405156774854*x1**3 + 86.256353553659*x1**2*x2**2 - 127.021295305396*x1**2*x2 + 60.7887449601355*x1**2 + 31.0355587855576*x1*x2**3 - 73.8532652780005*x1*x2**2 + 100.281298985059*x1*x2 - 11.1170045408845*x1 + 3.73915692388003*x2**4 - 10.8654955748948*x2**3 + 37.077520280686*x2**2 - 5.47375690287524*x2 - 0.0182862695751685
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 83 counterexamples!
iter:9
0-> accuracy1:97.38219976425171, accuracy2:62.55110502243042, accuracy3:100.0, loss:0.24136100709438324
10-> accuracy1:97.38219976425171, accuracy2:62.46933937072754, accuracy3:100.0, loss:0.23982718586921692
20-> accuracy1:98.08027744293213, accuracy2:62.22403645515442, accuracy3:100.0, loss:0.2385433167219162
30-> accuracy1:98.60383868217468, accuracy2:62.22403645515442, accuracy3:100.0, loss:0.23753200471401215
40-> accuracy1:98.77836108207703, accuracy2:62.06050515174866, accuracy3:100.0, loss:0.2366963028907776
50-> accuracy1:98.95287752151489, accuracy2:61.978739500045776, accuracy3:100.0, loss:0.23600049316883087
60-> accuracy1:98.95287752151489, accuracy2:61.733442544937134, accuracy3:100.0, loss:0.23545308411121368
70-> accuracy1:98.95287752151489, accuracy2:61.24284267425537, accuracy3:100.0, loss:0.234943687915802
80-> accuracy1:99.12739992141724, accuracy2:60.83401441574097, accuracy3:100.0, loss:0.23454174399375916
90-> accuracy1:99.30192232131958, accuracy2:60.50695180892944, accuracy3:100.0, loss:0.23427438735961914
B(x) = 20.6995549619265*x1**4 + 53.682861285094*x1**3*x2 - 39.008734626374*x1**3 + 47.7225825030071*x1**2*x2**2 - 75.6168219122282*x1**2*x2 + 37.3376173347016*x1**2 + 16.2810493685948*x1*x2**3 - 40.6040880201796*x1*x2**2 + 60.477500003829*x1*x2 - 7.6614356282299*x1 + 1.96763244048677*x2**4 - 4.47329006347825*x2**3 + 21.8461276142028*x2**2 - 3.90739906263169*x2 + 0.160084822848062
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 81 counterexamples!
iter:10
0-> accuracy1:99.12739992141724, accuracy2:56.59509301185608, accuracy3:100.0, loss:0.25694775581359863
10-> accuracy1:98.25479984283447, accuracy2:56.365031003952026, accuracy3:100.0, loss:0.2561277151107788
20-> accuracy1:97.90576100349426, accuracy2:56.134968996047974, accuracy3:100.0, loss:0.2557068169116974
30-> accuracy1:97.55671620368958, accuracy2:55.98159432411194, accuracy3:100.0, loss:0.25538498163223267
40-> accuracy1:97.73123860359192, accuracy2:55.98159432411194, accuracy3:100.0, loss:0.2551949620246887
50-> accuracy1:98.08027744293213, accuracy2:55.8282196521759, accuracy3:100.0, loss:0.25504860281944275
60-> accuracy1:98.08027744293213, accuracy2:55.52147030830383, accuracy3:100.0, loss:0.2548784017562866
70-> accuracy1:98.25479984283447, accuracy2:55.29140830039978, accuracy3:100.0, loss:0.25471195578575134
80-> accuracy1:98.25479984283447, accuracy2:55.13803958892822, accuracy3:100.0, loss:0.25453832745552063
90-> accuracy1:98.42932224273682, accuracy2:54.90797758102417, accuracy3:100.0, loss:0.25435781478881836
B(x) = 12.2144424321298*x1**4 + 31.0311990507289*x1**3*x2 - 23.6268313715834*x1**3 + 26.6990562407928*x1**2*x2**2 - 45.2028512734921*x1**2*x2 + 23.0963949375611*x1**2 + 8.77498440477921*x1*x2**3 - 22.7132204673149*x1*x2**2 + 37.6994803963563*x1*x2 - 5.18203662180433*x1 + 1.19044018432845*x2**4 - 1.63666165324811*x2**3 + 13.3211537788679*x2**2 - 2.63287695867061*x2 + 0.285963993482559
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:11
0-> accuracy1:98.77836108207703, accuracy2:50.78347325325012, accuracy3:100.0, loss:0.2951233983039856
10-> accuracy1:100.0, accuracy2:50.641024112701416, accuracy3:100.0, loss:0.2792719006538391
20-> accuracy1:100.0, accuracy2:55.27065396308899, accuracy3:100.0, loss:0.2610916495323181
30-> accuracy1:99.47643876075745, accuracy2:58.33333134651184, accuracy3:100.0, loss:0.2524251937866211
40-> accuracy1:100.0, accuracy2:58.190882205963135, accuracy3:100.0, loss:0.24963277578353882
50-> accuracy1:99.82547760009766, accuracy2:57.90598392486572, accuracy3:100.0, loss:0.24859410524368286
60-> accuracy1:99.82547760009766, accuracy2:57.76353478431702, accuracy3:100.0, loss:0.24779987335205078
70-> accuracy1:100.0, accuracy2:57.47863054275513, accuracy3:100.0, loss:0.24720536172389984
80-> accuracy1:100.0, accuracy2:57.33618140220642, accuracy3:100.0, loss:0.2468065768480301
90-> accuracy1:100.0, accuracy2:56.98005557060242, accuracy3:100.0, loss:0.24640367925167084
B(x) = 7.45455025275729*x1**4 + 17.7727172888736*x1**3*x2 - 14.40662443854*x1**3 + 14.1503720509906*x1**2*x2**2 - 27.6418411857899*x1**2*x2 + 14.3586950947232*x1**2 + 3.97345138726032*x1*x2**3 - 11.8757139204042*x1*x2**2 + 23.2285295043939*x1*x2 - 4.06427017196134*x1 + 0.65686394303726*x2**4 - 0.0512315446467322*x2**3 + 8.05079048243498*x2**2 - 1.77936415085929*x2 + 0.202074407501982
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 94 counterexamples!
iter:12
0-> accuracy1:100.0, accuracy2:53.13751697540283, accuracy3:100.0, loss:0.2669966220855713
10-> accuracy1:99.47643876075745, accuracy2:53.13751697540283, accuracy3:100.0, loss:0.26671871542930603
20-> accuracy1:99.47643876075745, accuracy2:52.87049412727356, accuracy3:100.0, loss:0.26662150025367737
30-> accuracy1:99.47643876075745, accuracy2:52.60347127914429, accuracy3:100.0, loss:0.266496866941452
40-> accuracy1:99.47643876075745, accuracy2:52.53671407699585, accuracy3:100.0, loss:0.26637589931488037
50-> accuracy1:99.47643876075745, accuracy2:52.20293998718262, accuracy3:100.0, loss:0.266265869140625
60-> accuracy1:99.65096116065979, accuracy2:52.002668380737305, accuracy3:100.0, loss:0.26614809036254883
70-> accuracy1:99.65096116065979, accuracy2:51.73564553260803, accuracy3:100.0, loss:0.26597926020622253
80-> accuracy1:99.65096116065979, accuracy2:51.602137088775635, accuracy3:100.0, loss:0.2657787799835205
90-> accuracy1:100.0, accuracy2:51.33511424064636, accuracy3:100.0, loss:0.2656362056732178
B(x) = 4.58282919947535*x1**4 + 10.4340641096322*x1**3*x2 - 9.11384437419093*x1**3 + 7.66127658518142*x1**2*x2**2 - 17.2663970164394*x1**2*x2 + 9.3268842408971*x1**2 + 1.77647542967831*x1*x2**3 - 6.12677338580957*x1*x2**2 + 15.1381241010693*x1*x2 - 3.08712594436029*x1 + 0.449057041041329*x2**4 + 0.620166098085666*x2**3 + 4.97857625348444*x2**2 - 1.21706447869061*x2 + 0.258475016436462
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:13
0-> accuracy1:99.82547760009766, accuracy2:47.8723406791687, accuracy3:100.0, loss:0.28407397866249084
10-> accuracy1:100.0, accuracy2:47.68460690975189, accuracy3:100.0, loss:0.2839433252811432
20-> accuracy1:100.0, accuracy2:47.62202799320221, accuracy3:100.0, loss:0.2838720381259918
30-> accuracy1:100.0, accuracy2:47.4342942237854, accuracy3:100.0, loss:0.28383344411849976
40-> accuracy1:100.0, accuracy2:47.18397855758667, accuracy3:100.0, loss:0.283755362033844
50-> accuracy1:100.0, accuracy2:46.93366587162018, accuracy3:100.0, loss:0.2836400270462036
60-> accuracy1:100.0, accuracy2:46.62077724933624, accuracy3:100.0, loss:0.2834542393684387
70-> accuracy1:100.0, accuracy2:46.49561941623688, accuracy3:100.0, loss:0.2832302451133728
80-> accuracy1:100.0, accuracy2:46.245306730270386, accuracy3:100.0, loss:0.2829631567001343
90-> accuracy1:100.0, accuracy2:46.1827278137207, accuracy3:100.0, loss:0.2827591001987457
B(x) = 2.88836754453447*x1**4 + 6.19684533861664*x1**3*x2 - 5.97027375022125*x1**3 + 4.04875309022357*x1**2*x2**2 - 10.9574410779819*x1**2*x2 + 6.40245943721332*x1**2 + 0.719500537698033*x1*x2**3 - 2.90481265756324*x1*x2**2 + 10.0258355575206*x1*x2 - 2.52550710167149*x1 + 0.390998307484866*x2**4 + 0.805650949400921*x2**3 + 2.99490102626596*x2**2 - 0.857773650941554*x2 + 0.259902194574019
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:14
0-> accuracy1:100.0, accuracy2:43.286219239234924, accuracy3:100.0, loss:0.30015140771865845
10-> accuracy1:100.0, accuracy2:43.10953915119171, accuracy3:100.0, loss:0.2999706268310547
20-> accuracy1:100.0, accuracy2:43.10953915119171, accuracy3:100.0, loss:0.2999354600906372
30-> accuracy1:100.0, accuracy2:43.05064678192139, accuracy3:100.0, loss:0.29985538125038147
40-> accuracy1:100.0, accuracy2:42.93286204338074, accuracy3:100.0, loss:0.2997039556503296
50-> accuracy1:100.0, accuracy2:42.93286204338074, accuracy3:100.0, loss:0.2994728684425354
60-> accuracy1:100.0, accuracy2:42.93286204338074, accuracy3:100.0, loss:0.2991802394390106
70-> accuracy1:100.0, accuracy2:42.87396967411041, accuracy3:100.0, loss:0.2988339066505432
80-> accuracy1:100.0, accuracy2:42.81507730484009, accuracy3:100.0, loss:0.29843977093696594
90-> accuracy1:100.0, accuracy2:42.81507730484009, accuracy3:100.0, loss:0.29805368185043335
B(x) = 1.86483585820252*x1**4 + 3.73281677853841*x1**3*x2 - 4.04386265931565*x1**3 + 1.99857713151148*x1**2*x2**2 - 7.06391899032723*x1**2*x2 + 4.44314680042971*x1**2 + 0.192829670132176*x1*x2**3 - 1.02802744255256*x1*x2**2 + 6.65768608812036*x1*x2 - 2.00032225453924*x1 + 0.412121314879768*x2**4 + 0.81532250166978*x2**3 + 1.69939147802721*x2**2 - 0.496760041447702*x2 + 0.253653082156171
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:15
0-> accuracy1:100.0, accuracy2:40.266963839530945, accuracy3:100.0, loss:0.31422850489616394
10-> accuracy1:100.0, accuracy2:40.21134674549103, accuracy3:100.0, loss:0.31398776173591614
20-> accuracy1:100.0, accuracy2:40.15572965145111, accuracy3:100.0, loss:0.3138171434402466
30-> accuracy1:100.0, accuracy2:40.100112557411194, accuracy3:100.0, loss:0.31372663378715515
40-> accuracy1:100.0, accuracy2:40.04449248313904, accuracy3:100.0, loss:0.31352630257606506
50-> accuracy1:100.0, accuracy2:40.04449248313904, accuracy3:100.0, loss:0.3133023977279663
60-> accuracy1:100.0, accuracy2:40.04449248313904, accuracy3:100.0, loss:0.3130750358104706
70-> accuracy1:100.0, accuracy2:40.04449248313904, accuracy3:100.0, loss:0.3128341734409332
80-> accuracy1:100.0, accuracy2:39.933258295059204, accuracy3:100.0, loss:0.31262242794036865
90-> accuracy1:100.0, accuracy2:39.933258295059204, accuracy3:100.0, loss:0.3123071491718292
B(x) = 1.22495952446119*x1**4 + 2.29994381290589*x1**3*x2 - 2.8094639620884*x1**3 + 0.834101054612333*x1**2*x2**2 - 4.64109675278112*x1**2*x2 + 3.22043192891438*x1**2 - 0.0543929046875025*x1*x2**3 + 0.0467475663003833*x1*x2**2 + 4.61471232034189*x1*x2 - 1.61906219355809*x1 + 0.475303493481432*x2**4 + 0.770927148678034*x2**3 + 0.895454091253341*x2**2 - 0.22235270349541*x2 + 0.252324804344859
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:16
0-> accuracy1:100.0, accuracy2:37.82929480075836, accuracy3:100.0, loss:0.3280232548713684
10-> accuracy1:100.0, accuracy2:37.618544697761536, accuracy3:100.0, loss:0.3279067277908325
20-> accuracy1:100.0, accuracy2:37.618544697761536, accuracy3:100.0, loss:0.32786980271339417
30-> accuracy1:100.0, accuracy2:37.618544697761536, accuracy3:100.0, loss:0.32790976762771606
40-> accuracy1:100.0, accuracy2:37.618544697761536, accuracy3:100.0, loss:0.3279397785663605
50-> accuracy1:100.0, accuracy2:37.618544697761536, accuracy3:100.0, loss:0.32797354459762573
60-> accuracy1:100.0, accuracy2:37.56586015224457, accuracy3:100.0, loss:0.3278568685054779
70-> accuracy1:100.0, accuracy2:37.51317262649536, accuracy3:100.0, loss:0.32771041989326477
80-> accuracy1:100.0, accuracy2:37.56586015224457, accuracy3:100.0, loss:0.32755911350250244
90-> accuracy1:100.0, accuracy2:37.56586015224457, accuracy3:100.0, loss:0.32738348841667175
B(x) = 0.801752923605936*x1**4 + 1.44291239569598*x1**3*x2 - 1.95629880023706*x1**3 + 0.206288947494121*x1**2*x2**2 - 3.09547926784609*x1**2*x2 + 2.48265369488001*x1**2 - 0.140583727027808*x1*x2**3 + 0.627762261200732*x1*x2**2 + 3.35514970744665*x1*x2 - 1.43603133209721*x1 + 0.541712830449625*x2**4 + 0.674029850677218*x2**3 + 0.389230259274533*x2**2 - 0.0673941080736279*x2 + 0.246186834290032
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:17
0-> accuracy1:100.0, accuracy2:35.68568527698517, accuracy3:100.0, loss:0.3426574766635895
10-> accuracy1:100.0, accuracy2:35.485485196113586, accuracy3:100.0, loss:0.34272125363349915
20-> accuracy1:100.0, accuracy2:35.3353351354599, accuracy3:100.0, loss:0.34290075302124023
30-> accuracy1:100.0, accuracy2:35.285285115242004, accuracy3:100.0, loss:0.3430643081665039
40-> accuracy1:100.0, accuracy2:35.13513505458832, accuracy3:100.0, loss:0.34321752190589905
50-> accuracy1:100.0, accuracy2:35.08508503437042, accuracy3:100.0, loss:0.3433305323123932
60-> accuracy1:100.0, accuracy2:35.08508503437042, accuracy3:100.0, loss:0.34343650937080383
70-> accuracy1:100.0, accuracy2:35.03503501415253, accuracy3:100.0, loss:0.343561589717865
80-> accuracy1:100.0, accuracy2:34.934934973716736, accuracy3:100.0, loss:0.3436545431613922
90-> accuracy1:100.0, accuracy2:34.934934973716736, accuracy3:100.0, loss:0.3437644839286804
B(x) = 0.507689040308288*x1**4 + 0.9045548778327*x1**3*x2 - 1.32159992053557*x1**3 - 0.0855857037607072*x1**2*x2**2 - 2.03644681548937*x1**2*x2 + 1.91343349250785*x1**2 - 0.121479835712608*x1*x2**3 + 0.890047194164014*x1*x2**2 + 2.45672955210096*x1*x2 - 1.25737523842083*x1 + 0.572479350638233*x2**4 + 0.55045742460665*x2**3 + 0.0863528220486449*x2**2 + 0.0719299045281608*x2 + 0.235804543497161
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:18
0-> accuracy1:100.0, accuracy2:33.26978087425232, accuracy3:100.0, loss:0.35827288031578064
10-> accuracy1:100.0, accuracy2:33.1744521856308, accuracy3:100.0, loss:0.3584301471710205
20-> accuracy1:100.0, accuracy2:32.983794808387756, accuracy3:100.0, loss:0.3586699068546295
30-> accuracy1:100.0, accuracy2:32.983794808387756, accuracy3:100.0, loss:0.3588869273662567
40-> accuracy1:100.0, accuracy2:32.93612897396088, accuracy3:100.0, loss:0.3590969741344452
50-> accuracy1:100.0, accuracy2:32.793137431144714, accuracy3:100.0, loss:0.35933277010917664
60-> accuracy1:100.0, accuracy2:32.745471596717834, accuracy3:100.0, loss:0.35954517126083374
70-> accuracy1:100.0, accuracy2:32.69780874252319, accuracy3:100.0, loss:0.3597409427165985
80-> accuracy1:100.0, accuracy2:32.65014290809631, accuracy3:100.0, loss:0.3599221706390381
90-> accuracy1:100.0, accuracy2:32.602477073669434, accuracy3:100.0, loss:0.36010801792144775
B(x) = 0.300827912746374*x1**4 + 0.575866766352593*x1**3*x2 - 0.83177270040081*x1**3 - 0.167012194300105*x1**2*x2**2 - 1.30602868484752*x1**2*x2 + 1.42872246496329*x1**2 - 0.0774970292205294*x1*x2**3 + 0.953621809376633*x1*x2**2 + 1.74964491146776*x1*x2 - 1.08681165416228*x1 + 0.567999021416234*x2**4 + 0.392110007150261*x2**3 - 0.137439474521047*x2**2 + 0.206456068922185*x2 + 0.2240330586225
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:19
0-> accuracy1:100.0, accuracy2:31.028208136558533, accuracy3:100.0, loss:0.37350454926490784
10-> accuracy1:100.0, accuracy2:30.800727009773254, accuracy3:100.0, loss:0.3737793266773224
20-> accuracy1:100.0, accuracy2:30.709737539291382, accuracy3:100.0, loss:0.37411314249038696
30-> accuracy1:100.0, accuracy2:30.709737539291382, accuracy3:100.0, loss:0.3743920624256134
40-> accuracy1:100.0, accuracy2:30.61874508857727, accuracy3:100.0, loss:0.37459439039230347
50-> accuracy1:100.0, accuracy2:30.664241313934326, accuracy3:100.0, loss:0.3747812509536743
60-> accuracy1:100.0, accuracy2:30.61874508857727, accuracy3:100.0, loss:0.37497660517692566
70-> accuracy1:100.0, accuracy2:30.573248863220215, accuracy3:100.0, loss:0.3751806616783142
80-> accuracy1:100.0, accuracy2:30.573248863220215, accuracy3:100.0, loss:0.37537693977355957
90-> accuracy1:100.0, accuracy2:30.52775263786316, accuracy3:100.0, loss:0.37556192278862
B(x) = 0.166534389748242*x1**4 + 0.366003022157725*x1**3*x2 - 0.492183504513793*x1**3 - 0.165044848368044*x1**2*x2**2 - 0.81532169607095*x1**2*x2 + 1.04752224899536*x1**2 - 0.0152569390694857*x1*x2**3 + 0.912395855177204*x1*x2**2 + 1.20079537039742*x1*x2 - 0.930566648649778*x1 + 0.55241732823563*x2**4 + 0.226073357482595*x2**3 - 0.295839865073443*x2**2 + 0.330444165198844*x2 + 0.208812404152809
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:20
0-> accuracy1:100.0, accuracy2:29.199305176734924, accuracy3:100.0, loss:0.38831445574760437
10-> accuracy1:100.0, accuracy2:29.199305176734924, accuracy3:100.0, loss:0.3885272443294525
20-> accuracy1:100.0, accuracy2:29.199305176734924, accuracy3:100.0, loss:0.3887675702571869
30-> accuracy1:100.0, accuracy2:29.199305176734924, accuracy3:100.0, loss:0.3889559507369995
40-> accuracy1:100.0, accuracy2:29.28633689880371, accuracy3:100.0, loss:0.38914161920547485
50-> accuracy1:100.0, accuracy2:29.28633689880371, accuracy3:100.0, loss:0.3893294036388397
60-> accuracy1:100.0, accuracy2:29.329851269721985, accuracy3:100.0, loss:0.38950496912002563
70-> accuracy1:100.0, accuracy2:29.329851269721985, accuracy3:100.0, loss:0.3896770775318146
80-> accuracy1:100.0, accuracy2:29.373368620872498, accuracy3:100.0, loss:0.38982152938842773
90-> accuracy1:100.0, accuracy2:29.373368620872498, accuracy3:100.0, loss:0.3900143504142761
B(x) = 0.0863924383884364*x1**4 + 0.236247863420055*x1**3*x2 - 0.279263417566639*x1**3 - 0.140887837996303*x1**2*x2**2 - 0.500753639412498*x1**2*x2 + 0.786735614955291*x1**2 + 0.0348501760613724*x1*x2**3 + 0.84700076229229*x1*x2**2 + 0.77016034712087*x1*x2 - 0.802206102665053*x1 + 0.540181440159164*x2**4 + 0.0707723162446103*x2**3 - 0.442174760662795*x2**2 + 0.453860119440399*x2 + 0.192685132469635
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
Failed
Elapsed Time: 103.3505369538907
