{'batch_size': 1000, 'lr': np.float64(0.11999999999999998), 'loss_weight_continuous': (1, 1, 1), 'R_b': 0.4, 'margin': 0.4, 'DEG_continuous': [2, 4, 4, 2], 'learning_loops': 100, 'max_iter': 20, 'err': 0.02677454477719443}

Mosek can be used normally.
iter:1
0-> accuracy1:0.0, accuracy2:32.30000138282776, accuracy3:0.0, loss:1.525484561920166
10-> accuracy1:100.0, accuracy2:98.1000006198883, accuracy3:100.0, loss:0.0179201178252697
20-> accuracy1:100.0, accuracy2:98.1000006198883, accuracy3:100.0, loss:0.03679927438497543
30-> accuracy1:100.0, accuracy2:90.89999794960022, accuracy3:100.0, loss:0.473847359418869
40-> accuracy1:100.0, accuracy2:98.50000143051147, accuracy3:97.79999852180481, loss:0.05603501573204994
50-> accuracy1:97.2000002861023, accuracy2:99.09999966621399, accuracy3:100.0, loss:0.05145744979381561
60-> accuracy1:100.0, accuracy2:98.60000014305115, accuracy3:100.0, loss:0.12574225664138794
70-> accuracy1:100.0, accuracy2:98.1000006198883, accuracy3:100.0, loss:0.0832863301038742
80-> accuracy1:100.0, accuracy2:99.09999966621399, accuracy3:100.0, loss:0.024234212934970856
90-> accuracy1:100.0, accuracy2:99.09999966621399, accuracy3:100.0, loss:0.013911695219576359
B(x) = 8.37169710856388*x1**4 + 25.7093232695369*x1**3*x2 + 19.5040527135534*x1**3 + 46.5572256319395*x1**2*x2**2 + 32.670448093827*x1**2*x2 + 24.2250451482084*x1**2 + 44.0697940620909*x1*x2**3 + 53.7441602214731*x1*x2**2 + 55.9415038959827*x1*x2 - 13.6245650769042*x1 + 17.8224560084767*x2**4 + 15.1236364977124*x2**3 + 20.1150350840754*x2**2 + 22.2986618452214*x2 - 3.31012590631751
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:2
0-> accuracy1:100.0, accuracy2:89.99999761581421, accuracy3:100.0, loss:0.33428213000297546
10-> accuracy1:98.4000027179718, accuracy2:99.45454597473145, accuracy3:100.0, loss:0.006895867642015219
20-> accuracy1:100.0, accuracy2:99.54545497894287, accuracy3:100.0, loss:-0.005966207943856716
30-> accuracy1:100.0, accuracy2:99.6363639831543, accuracy3:100.0, loss:-0.006121216341853142
40-> accuracy1:100.0, accuracy2:99.6363639831543, accuracy3:100.0, loss:-0.007412060629576445
50-> accuracy1:100.0, accuracy2:99.72727298736572, accuracy3:100.0, loss:-0.008507933467626572
60-> accuracy1:100.0, accuracy2:99.72727298736572, accuracy3:100.0, loss:-0.009023400023579597
70-> accuracy1:100.0, accuracy2:99.72727298736572, accuracy3:100.0, loss:-0.009222915396094322
80-> accuracy1:100.0, accuracy2:99.72727298736572, accuracy3:100.0, loss:-0.009407604113221169
90-> accuracy1:100.0, accuracy2:99.72727298736572, accuracy3:100.0, loss:-0.009519132785499096
B(x) = 3.55971939793198*x1**4 + 11.8517344174548*x1**3*x2 + 6.38167934641249*x1**3 + 21.5028654329042*x1**2*x2**2 + 11.0977099545199*x1**2*x2 + 9.66811447482383*x1**2 + 20.0778142353931*x1*x2**3 + 22.2230926545291*x1*x2**2 + 19.6982972114248*x1*x2 - 7.12244727637152*x1 + 7.75998914415787*x2**4 + 6.18239899921296*x2**3 + 7.13078740223744*x2**2 + 4.60768304765649*x2 - 1.86249322564524
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:3
0-> accuracy1:100.0, accuracy2:91.41666889190674, accuracy3:100.0, loss:0.14394982159137726
10-> accuracy1:93.50000023841858, accuracy2:92.83333420753479, accuracy3:100.0, loss:0.06226881965994835
20-> accuracy1:98.19999933242798, accuracy2:98.7500011920929, accuracy3:100.0, loss:0.00581860076636076
30-> accuracy1:100.0, accuracy2:96.41666412353516, accuracy3:100.0, loss:0.013655666261911392
40-> accuracy1:98.7999975681305, accuracy2:98.0833351612091, accuracy3:100.0, loss:0.00602128216996789
50-> accuracy1:99.80000257492065, accuracy2:98.7500011920929, accuracy3:100.0, loss:-0.0014769043773412704
60-> accuracy1:100.0, accuracy2:99.00000095367432, accuracy3:100.0, loss:-0.00357859767973423
70-> accuracy1:100.0, accuracy2:99.41666722297668, accuracy3:100.0, loss:-0.004637482110410929
80-> accuracy1:100.0, accuracy2:99.41666722297668, accuracy3:100.0, loss:-0.004957779310643673
90-> accuracy1:100.0, accuracy2:99.50000047683716, accuracy3:100.0, loss:-0.00505058141425252
B(x) = 3.05510571195229*x1**4 + 10.9647830001908*x1**3*x2 + 6.05260109707085*x1**3 + 19.7451539385145*x1**2*x2**2 + 15.0526265159743*x1**2*x2 + 14.4401535874136*x1**2 + 17.8344223005681*x1*x2**3 + 29.1460697316024*x1*x2**2 + 25.7537545538521*x1*x2 - 11.1866812046958*x1 + 6.40517315509857*x2**4 + 11.0684477175161*x2**3 + 10.3631741427993*x2**2 - 3.37976746879509*x2 - 0.352038411786563
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:4
0-> accuracy1:100.0, accuracy2:91.8461561203003, accuracy3:100.0, loss:0.0769255980849266
10-> accuracy1:99.59999918937683, accuracy2:90.53846001625061, accuracy3:100.0, loss:0.06508656591176987
20-> accuracy1:99.40000176429749, accuracy2:91.5384590625763, accuracy3:100.0, loss:0.062254399061203
30-> accuracy1:99.6999979019165, accuracy2:91.23076796531677, accuracy3:100.0, loss:0.05979437381029129
40-> accuracy1:99.00000095367432, accuracy2:91.23076796531677, accuracy3:100.0, loss:0.05856125429272652
50-> accuracy1:99.19999837875366, accuracy2:91.30769371986389, accuracy3:100.0, loss:0.05749216675758362
60-> accuracy1:99.09999966621399, accuracy2:91.46153926849365, accuracy3:100.0, loss:0.05681585893034935
70-> accuracy1:98.69999885559082, accuracy2:91.5384590625763, accuracy3:100.0, loss:0.05581243708729744
80-> accuracy1:99.00000095367432, accuracy2:91.5384590625763, accuracy3:100.0, loss:0.055155135691165924
90-> accuracy1:99.00000095367432, accuracy2:91.5384590625763, accuracy3:100.0, loss:0.05459180846810341
B(x) = 1.5378853939303*x1**4 + 9.05134883951674*x1**3*x2 + 2.95703825114396*x1**3 + 20.9824573639761*x1**2*x2**2 + 16.2399114106208*x1**2*x2 + 14.2002209637347*x1**2 + 21.4275271768519*x1*x2**3 + 34.5853335327428*x1*x2**2 + 26.4626085684873*x1*x2 - 6.2442562798032*x1 + 8.72246576997137*x2**4 + 17.1724204076876*x2**3 + 11.3288527643409*x2**2 - 2.74144059140576*x2 - 0.199912306665487
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 91 counterexamples!
iter:5
0-> accuracy1:99.29999709129333, accuracy2:85.62185764312744, accuracy3:100.0, loss:0.09357111901044846
10-> accuracy1:98.50000143051147, accuracy2:85.76563596725464, accuracy3:100.0, loss:0.09122391790151596
20-> accuracy1:98.7999975681305, accuracy2:85.40618419647217, accuracy3:100.0, loss:0.09189401566982269
30-> accuracy1:98.19999933242798, accuracy2:85.69374680519104, accuracy3:100.0, loss:0.08968678116798401
40-> accuracy1:98.29999804496765, accuracy2:85.76563596725464, accuracy3:100.0, loss:0.08880513161420822
50-> accuracy1:98.00000190734863, accuracy2:85.76563596725464, accuracy3:100.0, loss:0.08946283161640167
60-> accuracy1:97.50000238418579, accuracy2:85.83752512931824, accuracy3:100.0, loss:0.08781832456588745
70-> accuracy1:98.29999804496765, accuracy2:85.83752512931824, accuracy3:100.0, loss:0.08719169348478317
80-> accuracy1:98.00000190734863, accuracy2:85.90942025184631, accuracy3:100.0, loss:0.08632375299930573
90-> accuracy1:97.89999723434448, accuracy2:85.83752512931824, accuracy3:100.0, loss:0.08603037893772125
B(x) = 2.03266011640966*x1**4 + 13.9006193283914*x1**3*x2 + 3.821373889858*x1**3 + 32.392492803708*x1**2*x2**2 + 28.9960271726357*x1**2*x2 + 19.0183680201144*x1**2 + 32.0367221562798*x1*x2**3 + 54.2402522552767*x1*x2**2 + 34.7005198886667*x1*x2 - 6.05185710490806*x1 + 12.1356997869047*x2**4 + 25.4050245309127*x2**3 + 15.0075601421215*x2**2 - 2.91357439026776*x2 - 0.253486855796764
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 83 counterexamples!
iter:6
0-> accuracy1:98.19999933242798, accuracy2:81.07191324234009, accuracy3:100.0, loss:0.11454334110021591
10-> accuracy1:98.00000190734863, accuracy2:81.00407123565674, accuracy3:100.0, loss:0.11325520277023315
20-> accuracy1:97.89999723434448, accuracy2:80.18996119499207, accuracy3:100.0, loss:0.11259322613477707
30-> accuracy1:97.60000109672546, accuracy2:80.46132922172546, accuracy3:100.0, loss:0.11157654970884323
40-> accuracy1:97.29999899864197, accuracy2:80.66485524177551, accuracy3:100.0, loss:0.11088665574789047
50-> accuracy1:98.00000190734863, accuracy2:80.46132922172546, accuracy3:100.0, loss:0.11026258766651154
60-> accuracy1:97.29999899864197, accuracy2:80.73269724845886, accuracy3:100.0, loss:0.11240138858556747
70-> accuracy1:98.60000014305115, accuracy2:79.37584519386292, accuracy3:100.0, loss:0.11159442365169525
80-> accuracy1:98.69999885559082, accuracy2:78.83310914039612, accuracy3:100.0, loss:0.11011996865272522
90-> accuracy1:98.69999885559082, accuracy2:78.83310914039612, accuracy3:100.0, loss:0.10819697380065918
B(x) = 4.12945933106241*x1**4 + 28.3904338547708*x1**3*x2 + 9.3107278051071*x1**3 + 69.0358426952106*x1**2*x2**2 + 58.6477781258041*x1**2*x2 + 24.5023126366998*x1**2 + 71.4440654052362*x1*x2**3 + 98.7249782380338*x1*x2**2 + 43.2165114810016*x1*x2 - 8.6170839235231*x1 + 27.0521503002204*x2**4 + 45.3325752599776*x2**3 + 17.8285897276625*x2**2 - 5.25625163213138*x2 + 0.055340514519514
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 72 counterexamples!
iter:7
0-> accuracy1:99.19999837875366, accuracy2:74.19146299362183, accuracy3:100.0, loss:0.1288558691740036
10-> accuracy1:98.90000224113464, accuracy2:74.45019483566284, accuracy3:100.0, loss:0.1186065748333931
20-> accuracy1:100.0, accuracy2:93.07891130447388, accuracy3:100.0, loss:0.06313177943229675
30-> accuracy1:100.0, accuracy2:93.07891130447388, accuracy3:100.0, loss:0.06035174801945686
40-> accuracy1:100.0, accuracy2:93.14359426498413, accuracy3:100.0, loss:0.053188782185316086
50-> accuracy1:100.0, accuracy2:93.01422834396362, accuracy3:100.0, loss:0.04719271510839462
60-> accuracy1:100.0, accuracy2:93.07891130447388, accuracy3:100.0, loss:0.04565742239356041
70-> accuracy1:100.0, accuracy2:93.01422834396362, accuracy3:100.0, loss:0.04457978531718254
80-> accuracy1:100.0, accuracy2:92.94954538345337, accuracy3:100.0, loss:0.045279789716005325
90-> accuracy1:100.0, accuracy2:93.01422834396362, accuracy3:100.0, loss:0.04448312148451805
B(x) = 3.30338318619702*x1**4 + 21.7290117179461*x1**3*x2 + 5.78003108852966*x1**3 + 53.1234544925909*x1**2*x2**2 + 32.3681633665337*x1**2*x2 + 6.59707333198936*x1**2 + 55.6795503915943*x1*x2**3 + 52.5507251134772*x1*x2**2 + 11.7677217963149*x1*x2 - 3.36820866938488*x1 + 20.2740999283267*x2**4 + 24.0949074085517*x2**3 + 6.63541182157022*x2**2 + 0.209228964126811*x2 + 0.736043976339456
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:8
0-> accuracy1:100.0, accuracy2:87.42405772209167, accuracy3:100.0, loss:0.09697262197732925
10-> accuracy1:100.0, accuracy2:87.30255365371704, accuracy3:100.0, loss:0.0944574624300003
20-> accuracy1:100.0, accuracy2:87.36330270767212, accuracy3:100.0, loss:0.09299609065055847
30-> accuracy1:100.0, accuracy2:87.18104362487793, accuracy3:100.0, loss:0.09267876297235489
40-> accuracy1:100.0, accuracy2:87.24179863929749, accuracy3:100.0, loss:0.09249717742204666
50-> accuracy1:100.0, accuracy2:87.30255365371704, accuracy3:100.0, loss:0.09249996393918991
60-> accuracy1:100.0, accuracy2:87.24179863929749, accuracy3:100.0, loss:0.09235408902168274
70-> accuracy1:100.0, accuracy2:87.30255365371704, accuracy3:100.0, loss:0.09239345043897629
80-> accuracy1:100.0, accuracy2:87.24179863929749, accuracy3:100.0, loss:0.09253077208995819
90-> accuracy1:100.0, accuracy2:87.0595395565033, accuracy3:100.0, loss:0.0975843071937561
B(x) = 1.3712496505946*x1**4 + 8.75616621129599*x1**3*x2 + 1.64146661867802*x1**3 + 20.97196511196*x1**2*x2**2 + 10.4043260837108*x1**2*x2 + 2.63559881518581*x1**2 + 21.5894098072576*x1*x2**3 + 17.1938365740429*x1*x2**2 + 3.38874524559028*x1*x2 - 1.74422725812648*x1 + 7.66929137561973*x2**4 + 7.67663357515498*x2**3 + 2.29459822221056*x2**2 + 1.20469442062402*x2 + 0.646338607170595
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:9
0-> accuracy1:100.0, accuracy2:82.18785524368286, accuracy3:100.0, loss:0.1374376267194748
10-> accuracy1:100.0, accuracy2:81.90149068832397, accuracy3:100.0, loss:0.1545497328042984
20-> accuracy1:100.0, accuracy2:81.78694248199463, accuracy3:100.0, loss:0.14257602393627167
30-> accuracy1:100.0, accuracy2:81.95876479148865, accuracy3:100.0, loss:0.13590635359287262
40-> accuracy1:100.0, accuracy2:82.13058710098267, accuracy3:100.0, loss:0.13322937488555908
50-> accuracy1:100.0, accuracy2:82.073312997818, accuracy3:100.0, loss:0.13315869867801666
60-> accuracy1:100.0, accuracy2:82.13058710098267, accuracy3:100.0, loss:0.1330382525920868
70-> accuracy1:100.0, accuracy2:82.13058710098267, accuracy3:100.0, loss:0.13241258263587952
80-> accuracy1:100.0, accuracy2:82.13058710098267, accuracy3:100.0, loss:0.13264404237270355
90-> accuracy1:100.0, accuracy2:82.13058710098267, accuracy3:100.0, loss:0.13202902674674988
B(x) = 0.567692138932143*x1**4 + 3.94197336305527*x1**3*x2 + 0.712444855437414*x1**3 + 10.1745570539456*x1**2*x2**2 + 5.36301587780795*x1**2*x2 + 1.90275218504005*x1**2 + 11.0207008820767*x1*x2**3 + 9.30857627526785*x1*x2**2 + 2.25065174520118*x1*x2 - 1.33207714939396*x1 + 3.97422042093485*x2**4 + 4.14436318562336*x2**3 + 1.86870227400549*x2**2 + 1.20452649141346*x2 + 0.440432637315378
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:10
0-> accuracy1:100.0, accuracy2:77.62730121612549, accuracy3:100.0, loss:0.1672322303056717
10-> accuracy1:100.0, accuracy2:77.62730121612549, accuracy3:100.0, loss:0.16630592942237854
20-> accuracy1:100.0, accuracy2:77.51895785331726, accuracy3:100.0, loss:0.16648443043231964
30-> accuracy1:100.0, accuracy2:77.57313251495361, accuracy3:100.0, loss:0.16633009910583496
40-> accuracy1:100.0, accuracy2:77.57313251495361, accuracy3:100.0, loss:0.1664070188999176
50-> accuracy1:100.0, accuracy2:77.51895785331726, accuracy3:100.0, loss:0.16633367538452148
60-> accuracy1:100.0, accuracy2:77.46478915214539, accuracy3:100.0, loss:0.16665033996105194
70-> accuracy1:100.0, accuracy2:77.62730121612549, accuracy3:100.0, loss:0.16670875251293182
80-> accuracy1:100.0, accuracy2:77.46478915214539, accuracy3:100.0, loss:0.16645412147045135
90-> accuracy1:100.0, accuracy2:77.62730121612549, accuracy3:100.0, loss:0.16683465242385864
B(x) = 0.417778211300852*x1**4 + 2.96205540435809*x1**3*x2 + 0.421757817120414*x1**3 + 7.85378078850381*x1**2*x2**2 + 3.58679157776268*x1**2*x2 + 1.40606953809681*x1**2 + 8.72074309764701*x1*x2**3 + 6.45571951892356*x1*x2**2 + 1.27367120412381*x1*x2 - 1.22186685141582*x1 + 3.14671210105441*x2**4 + 2.82217744459967*x2**3 + 1.36998961128667*x2**2 + 1.19443131163872*x2 + 0.409732857207356
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:11
0-> accuracy1:100.0, accuracy2:73.63823056221008, accuracy3:100.0, loss:0.19821763038635254
10-> accuracy1:100.0, accuracy2:73.48406910896301, accuracy3:100.0, loss:0.19821088016033173
20-> accuracy1:100.0, accuracy2:73.48406910896301, accuracy3:100.0, loss:0.19808679819107056
30-> accuracy1:100.0, accuracy2:73.48406910896301, accuracy3:100.0, loss:0.19855128228664398
40-> accuracy1:100.0, accuracy2:73.48406910896301, accuracy3:100.0, loss:0.19834792613983154
50-> accuracy1:100.0, accuracy2:73.48406910896301, accuracy3:100.0, loss:0.19815021753311157
60-> accuracy1:100.0, accuracy2:73.48406910896301, accuracy3:100.0, loss:0.19839537143707275
70-> accuracy1:100.0, accuracy2:73.58684539794922, accuracy3:100.0, loss:0.1982639580965042
80-> accuracy1:100.0, accuracy2:73.63823056221008, accuracy3:100.0, loss:0.1983620673418045
90-> accuracy1:100.0, accuracy2:73.63823056221008, accuracy3:100.0, loss:0.19852958619594574
B(x) = 0.381112822647643*x1**4 + 2.59431382528947*x1**3*x2 + 0.243734223752292*x1**3 + 6.64025365120776*x1**2*x2**2 + 2.48749239687617*x1**2*x2 + 1.07300666760936*x1**2 + 7.17734601327141*x1*x2**3 + 4.59946487524488*x1*x2**2 + 0.679313443153421*x1*x2 - 1.10356725788723*x1 + 2.50878845549826*x2**4 + 1.94232929106664*x2**3 + 1.08620051764581*x2**2 + 1.27186017038913*x2 + 0.404798644492262
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:12
0-> accuracy1:100.0, accuracy2:70.03909945487976, accuracy3:100.0, loss:0.2287701964378357
10-> accuracy1:100.0, accuracy2:69.8924720287323, accuracy3:100.0, loss:0.2285386174917221
20-> accuracy1:100.0, accuracy2:70.03909945487976, accuracy3:100.0, loss:0.22819282114505768
30-> accuracy1:100.0, accuracy2:69.6480929851532, accuracy3:100.0, loss:0.22939644753932953
40-> accuracy1:100.0, accuracy2:69.8924720287323, accuracy3:100.0, loss:0.22840481996536255
50-> accuracy1:100.0, accuracy2:69.8924720287323, accuracy3:100.0, loss:0.22833453118801117
60-> accuracy1:100.0, accuracy2:69.8924720287323, accuracy3:100.0, loss:0.22832050919532776
70-> accuracy1:100.0, accuracy2:69.8924720287323, accuracy3:100.0, loss:0.2279040515422821
80-> accuracy1:100.0, accuracy2:69.99022364616394, accuracy3:100.0, loss:0.2282366156578064
90-> accuracy1:100.0, accuracy2:70.03909945487976, accuracy3:100.0, loss:0.2287597805261612
B(x) = 0.441638161452846*x1**4 + 2.74696604033749*x1**3*x2 + 0.163554894375213*x1**3 + 6.55069047160415*x1**2*x2**2 + 2.24368557539376*x1**2*x2 + 1.04426633399582*x1**2 + 6.71099217947442*x1*x2**3 + 4.06166085068347*x1*x2**2 + 0.593761120076306*x1*x2 - 0.989865253447957*x1 + 2.24825766139615*x2**4 + 1.67432270940771*x2**3 + 1.05428417165913*x2**2 + 1.27349763104347*x2 + 0.357156637866301
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:13
0-> accuracy1:100.0, accuracy2:66.63560271263123, accuracy3:100.0, loss:0.2542315721511841
10-> accuracy1:100.0, accuracy2:66.63560271263123, accuracy3:100.0, loss:0.25432196259498596
20-> accuracy1:100.0, accuracy2:66.58900380134583, accuracy3:100.0, loss:0.2540183663368225
30-> accuracy1:100.0, accuracy2:66.68220162391663, accuracy3:100.0, loss:0.25479868054389954
40-> accuracy1:100.0, accuracy2:66.58900380134583, accuracy3:100.0, loss:0.25473496317863464
50-> accuracy1:100.0, accuracy2:66.63560271263123, accuracy3:100.0, loss:0.2576131820678711
60-> accuracy1:100.0, accuracy2:66.58900380134583, accuracy3:100.0, loss:0.2586210072040558
70-> accuracy1:100.0, accuracy2:66.2628173828125, accuracy3:100.0, loss:0.26563790440559387
80-> accuracy1:100.0, accuracy2:66.54240489006042, accuracy3:100.0, loss:0.2632175087928772
90-> accuracy1:100.0, accuracy2:66.2162184715271, accuracy3:100.0, loss:0.25702497363090515
B(x) = 0.284476207371501*x1**4 + 1.87730114091277*x1**3*x2 + 0.13122215801888*x1**3 + 4.86976299677344*x1**2*x2**2 + 2.33428210575906*x1**2*x2 + 1.27230813136421*x1**2 + 5.49215443202202*x1*x2**3 + 4.7949357659795*x1*x2**2 + 1.22676941625843*x1*x2 - 0.997653127905547*x1 + 1.99349325671043*x2**4 + 2.27397699287181*x2**3 + 1.38633917413583*x2**2 + 1.20805510595612*x2 + 0.348162319533908
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:14
0-> accuracy1:100.0, accuracy2:63.490647077560425, accuracy3:100.0, loss:0.27783453464508057
10-> accuracy1:100.0, accuracy2:63.53517174720764, accuracy3:100.0, loss:0.2777554988861084
20-> accuracy1:100.0, accuracy2:63.490647077560425, accuracy3:100.0, loss:0.27720755338668823
30-> accuracy1:100.0, accuracy2:63.53517174720764, accuracy3:100.0, loss:0.2767685651779175
40-> accuracy1:100.0, accuracy2:63.490647077560425, accuracy3:100.0, loss:0.2770707309246063
50-> accuracy1:100.0, accuracy2:63.53517174720764, accuracy3:100.0, loss:0.27688032388687134
60-> accuracy1:100.0, accuracy2:63.53517174720764, accuracy3:100.0, loss:0.2770359516143799
70-> accuracy1:100.0, accuracy2:63.53517174720764, accuracy3:100.0, loss:0.277010977268219
80-> accuracy1:100.0, accuracy2:63.57969641685486, accuracy3:100.0, loss:0.2766692042350769
90-> accuracy1:100.0, accuracy2:63.57969641685486, accuracy3:100.0, loss:0.27678152918815613
B(x) = 0.436760998400466*x1**4 + 2.47965503111339*x1**3*x2 + 0.00245447388266782*x1**3 + 5.55140846337801*x1**2*x2**2 + 1.72386339355435*x1**2*x2 + 1.08377581563741*x1**2 + 5.51151556630603*x1*x2**3 + 3.37910671554986*x1*x2**2 + 0.634572843077915*x1*x2 - 0.941852502755463*x1 + 1.81348479498923*x2**4 + 1.40190589783017*x2**3 + 1.01956423204001*x2**2 + 1.27113234874451*x2 + 0.349991668548856
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:15
0-> accuracy1:100.0, accuracy2:60.82693934440613, accuracy3:100.0, loss:0.29851216077804565
10-> accuracy1:100.0, accuracy2:60.86956262588501, accuracy3:100.0, loss:0.2983032464981079
20-> accuracy1:100.0, accuracy2:60.82693934440613, accuracy3:100.0, loss:0.29795917868614197
30-> accuracy1:100.0, accuracy2:60.784316062927246, accuracy3:100.0, loss:0.29822808504104614
40-> accuracy1:100.0, accuracy2:60.82693934440613, accuracy3:100.0, loss:0.2983631193637848
50-> accuracy1:100.0, accuracy2:60.86956262588501, accuracy3:100.0, loss:0.29837095737457275
60-> accuracy1:100.0, accuracy2:60.784316062927246, accuracy3:100.0, loss:0.29822587966918945
70-> accuracy1:100.0, accuracy2:60.82693934440613, accuracy3:100.0, loss:0.2979029715061188
80-> accuracy1:100.0, accuracy2:60.784316062927246, accuracy3:100.0, loss:0.2991011142730713
90-> accuracy1:100.0, accuracy2:60.699063539505005, accuracy3:100.0, loss:0.30662962794303894
B(x) = 0.27488396643003*x1**4 + 1.88276476208513*x1**3*x2 + 0.043331629217821*x1**3 + 4.97745859901328*x1**2*x2**2 + 1.56434258719581*x1**2*x2 + 0.880409453184939*x1**2 + 5.99758184143794*x1*x2**3 + 4.03782541631893*x1*x2**2 + 0.772120706566117*x1*x2 - 0.822373246588894*x1 + 2.38121606450088*x2**4 + 1.91246911241126*x2**3 + 0.694549174747461*x2**2 + 0.941645417569992*x2 + 0.2420458302002
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:16
0-> accuracy1:100.0, accuracy2:58.340150117874146, accuracy3:100.0, loss:0.3258528411388397
10-> accuracy1:100.0, accuracy2:58.094847202301025, accuracy3:100.0, loss:0.3203701674938202
20-> accuracy1:100.0, accuracy2:58.25837850570679, accuracy3:100.0, loss:0.3208109736442566
30-> accuracy1:100.0, accuracy2:58.46279859542847, accuracy3:100.0, loss:0.32183223962783813
40-> accuracy1:100.0, accuracy2:58.176612854003906, accuracy3:100.0, loss:0.3200235068798065
50-> accuracy1:100.0, accuracy2:58.340150117874146, accuracy3:100.0, loss:0.31911399960517883
60-> accuracy1:100.0, accuracy2:58.25837850570679, accuracy3:100.0, loss:0.3182578384876251
70-> accuracy1:100.0, accuracy2:58.29926133155823, accuracy3:100.0, loss:0.3190983831882477
80-> accuracy1:100.0, accuracy2:58.421915769577026, accuracy3:100.0, loss:0.32038524746894836
90-> accuracy1:100.0, accuracy2:58.340150117874146, accuracy3:100.0, loss:0.3313160538673401
B(x) = 0.339496311640322*x1**4 + 1.86008881154793*x1**3*x2 - 0.125429390695801*x1**3 + 4.14664997752749*x1**2*x2**2 + 1.21741146462199*x1**2*x2 + 1.06445439929273*x1**2 + 4.31096936230708*x1*x2**3 + 2.78976055940043*x1*x2**2 + 0.338453845015478*x1*x2 - 0.995333234863312*x1 + 1.5079646942492*x2**4 + 1.34610568367718*x2**3 + 0.914019870894377*x2**2 + 1.27763325178823*x2 + 0.31075395751275
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:17
0-> accuracy1:100.0, accuracy2:55.81303834915161, accuracy3:100.0, loss:0.3417744040489197
10-> accuracy1:100.0, accuracy2:56.04870319366455, accuracy3:100.0, loss:0.3374195098876953
20-> accuracy1:100.0, accuracy2:55.93087077140808, accuracy3:100.0, loss:0.33735576272010803
30-> accuracy1:100.0, accuracy2:56.12725615501404, accuracy3:100.0, loss:0.33943668007850647
40-> accuracy1:100.0, accuracy2:55.97015023231506, accuracy3:100.0, loss:0.33617138862609863
50-> accuracy1:100.0, accuracy2:56.00942373275757, accuracy3:100.0, loss:0.3357512354850769
60-> accuracy1:100.0, accuracy2:56.16653561592102, accuracy3:100.0, loss:0.3408353924751282
70-> accuracy1:100.0, accuracy2:56.00942373275757, accuracy3:100.0, loss:0.3383885324001312
80-> accuracy1:100.0, accuracy2:56.08798265457153, accuracy3:100.0, loss:0.33712828159332275
90-> accuracy1:100.0, accuracy2:56.00942373275757, accuracy3:100.0, loss:0.3396890163421631
B(x) = 0.362892532329798*x1**4 + 1.96658767106386*x1**3*x2 - 0.163717831767527*x1**3 + 4.1816770229405*x1**2*x2**2 + 0.889914702598188*x1**2*x2 + 1.08325613129528*x1**2 + 4.18606969822715*x1*x2**3 + 2.4192866170147*x1*x2**2 + 0.593353193555601*x1*x2 - 0.986071215766435*x1 + 1.41225915318575*x2**4 + 1.0551147574798*x2**3 + 0.844189346067516*x2**2 + 1.20747070335065*x2 + 0.377349050128658
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:18
0-> accuracy1:100.0, accuracy2:53.930461406707764, accuracy3:100.0, loss:0.3547881245613098
10-> accuracy1:100.0, accuracy2:54.00604605674744, accuracy3:100.0, loss:0.3536135256290436
20-> accuracy1:100.0, accuracy2:53.85487675666809, accuracy3:100.0, loss:0.35474246740341187
30-> accuracy1:100.0, accuracy2:53.817081451416016, accuracy3:100.0, loss:0.354034960269928
40-> accuracy1:100.0, accuracy2:53.70370149612427, accuracy3:100.0, loss:0.35511648654937744
50-> accuracy1:100.0, accuracy2:54.00604605674744, accuracy3:100.0, loss:0.35464853048324585
60-> accuracy1:100.0, accuracy2:53.89266610145569, accuracy3:100.0, loss:0.3520947992801666
70-> accuracy1:100.0, accuracy2:53.85487675666809, accuracy3:100.0, loss:0.35235753655433655
80-> accuracy1:100.0, accuracy2:54.00604605674744, accuracy3:100.0, loss:0.35769757628440857
90-> accuracy1:100.0, accuracy2:53.85487675666809, accuracy3:100.0, loss:0.3531142771244049
B(x) = 0.380373527169969*x1**4 + 2.08429018448578*x1**3*x2 - 0.0102771480794109*x1**3 + 4.35894302359573*x1**2*x2**2 + 1.20846841763007*x1**2*x2 + 0.877267178153813*x1**2 + 4.16765422241651*x1*x2**3 + 2.83060259019486*x1*x2**2 + 0.959922199532162*x1*x2 - 0.608656574552169*x1 + 1.38259111490148*x2**4 + 1.33812053370426*x2**3 + 1.20385371096411*x2**2 + 1.26224599486033*x2 + 0.274818816073963
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:19
0-> accuracy1:100.0, accuracy2:51.930081844329834, accuracy3:100.0, loss:0.3704769015312195
10-> accuracy1:100.0, accuracy2:52.002912759780884, accuracy3:100.0, loss:0.3679999113082886
20-> accuracy1:100.0, accuracy2:51.78441405296326, accuracy3:100.0, loss:0.36751431226730347
30-> accuracy1:100.0, accuracy2:51.96649432182312, accuracy3:100.0, loss:0.37177079916000366
40-> accuracy1:100.0, accuracy2:51.96649432182312, accuracy3:100.0, loss:0.3675701320171356
50-> accuracy1:100.0, accuracy2:51.89366340637207, accuracy3:100.0, loss:0.36670711636543274
60-> accuracy1:100.0, accuracy2:51.89366340637207, accuracy3:100.0, loss:0.3719877600669861
70-> accuracy1:100.0, accuracy2:51.96649432182312, accuracy3:100.0, loss:0.36853811144828796
80-> accuracy1:100.0, accuracy2:52.002912759780884, accuracy3:100.0, loss:0.3704405426979065
90-> accuracy1:100.0, accuracy2:51.82083249092102, accuracy3:100.0, loss:0.3675714433193207
B(x) = 0.467302696427502*x1**4 + 2.32365708617526*x1**3*x2 - 0.107742384115225*x1**3 + 4.66746332234326*x1**2*x2**2 + 1.23985185427441*x1**2*x2 + 1.14260550294188*x1**2 + 4.38114953052566*x1*x2**3 + 2.58215128843909*x1*x2**2 + 0.48637502606207*x1*x2 - 1.01778482981013*x1 + 1.3757653147996*x2**4 + 1.04623412850662*x2**3 + 0.833352575171825*x2**2 + 1.15957238622932*x2 + 0.341215968502121
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:20
0-> accuracy1:100.0, accuracy2:50.070273876190186, accuracy3:100.0, loss:0.3802088797092438
10-> accuracy1:100.0, accuracy2:50.070273876190186, accuracy3:100.0, loss:0.38422951102256775
20-> accuracy1:100.0, accuracy2:50.070273876190186, accuracy3:100.0, loss:0.38178929686546326
30-> accuracy1:100.0, accuracy2:50.03513693809509, accuracy3:100.0, loss:0.37972429394721985
40-> accuracy1:100.0, accuracy2:50.070273876190186, accuracy3:100.0, loss:0.38209548592567444
50-> accuracy1:100.0, accuracy2:50.10541081428528, accuracy3:100.0, loss:0.38009539246559143
60-> accuracy1:100.0, accuracy2:50.175684690475464, accuracy3:100.0, loss:0.380451500415802
70-> accuracy1:100.0, accuracy2:50.21082162857056, accuracy3:100.0, loss:0.38253533840179443
80-> accuracy1:100.0, accuracy2:50.0, accuracy3:100.0, loss:0.380302757024765
90-> accuracy1:100.0, accuracy2:50.070273876190186, accuracy3:100.0, loss:0.38046279549598694
B(x) = 0.539302516049803*x1**4 + 2.82836247590341*x1**3*x2 - 0.123198079161549*x1**3 + 5.75526056619487*x1**2*x2**2 + 0.896482348499036*x1**2*x2 + 0.848616458505742*x1**2 + 5.48003144546467*x1*x2**3 + 2.45683128055587*x1*x2**2 + 0.480805625832173*x1*x2 - 0.805663936696873*x1 + 1.80608215364609*x2**4 + 1.09894920496405*x2**3 + 0.804550946471475*x2**2 + 1.18103334193792*x2 + 0.324516338612492
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
Failed
Elapsed Time: 110.98059135791846
