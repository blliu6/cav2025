{'batch_size': 800, 'lr': np.float64(0.11999999999999998), 'loss_weight_continuous': (1, 1, 1), 'R_b': 0.4, 'margin': 0.4, 'DEG_continuous': [2, 4, 4, 2], 'learning_loops': 100, 'max_iter': 20, 'err': 0.02677454477719443}

Mosek can be used normally.
iter:1
0-> accuracy1:0.0, accuracy2:34.25000011920929, accuracy3:0.0, loss:1.4320679903030396
10-> accuracy1:100.0, accuracy2:99.00000095367432, accuracy3:100.0, loss:-0.0012637306936085224
20-> accuracy1:100.0, accuracy2:99.75000023841858, accuracy3:90.37500023841858, loss:0.11511196941137314
30-> accuracy1:98.37499856948853, accuracy2:97.50000238418579, accuracy3:100.0, loss:0.41540834307670593
40-> accuracy1:100.0, accuracy2:97.87499904632568, accuracy3:100.0, loss:0.6457535624504089
50-> accuracy1:100.0, accuracy2:95.24999856948853, accuracy3:100.0, loss:0.8381639122962952
60-> accuracy1:100.0, accuracy2:98.87499809265137, accuracy3:100.0, loss:0.35178759694099426
70-> accuracy1:100.0, accuracy2:99.25000071525574, accuracy3:100.0, loss:0.24318712949752808
80-> accuracy1:100.0, accuracy2:99.00000095367432, accuracy3:100.0, loss:0.37297162413597107
90-> accuracy1:97.62499928474426, accuracy2:99.12499785423279, accuracy3:100.0, loss:0.33962732553482056
B(x) = 39.7224823540876*x1**4 + 49.6453097507013*x1**3*x2 + 57.6406213698079*x1**3 + 127.89866473423*x1**2*x2**2 - 221.656573692771*x1**2*x2 + 363.001366048745*x1**2 + 61.4874352395904*x1*x2**3 - 187.832407931844*x1*x2**2 + 654.991515068949*x1*x2 - 163.782140191363*x1 + 7.41503323850446*x2**4 - 19.8482894323744*x2**3 + 48.7342477871171*x2**2 + 154.057625137105*x2 - 52.9507983740428
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:2
0-> accuracy1:100.0, accuracy2:88.44444155693054, accuracy3:100.0, loss:3.7196879386901855
10-> accuracy1:98.00000190734863, accuracy2:91.11111164093018, accuracy3:100.0, loss:0.5804041624069214
20-> accuracy1:95.49999833106995, accuracy2:94.33333277702332, accuracy3:100.0, loss:0.2864229083061218
30-> accuracy1:100.0, accuracy2:99.00000095367432, accuracy3:100.0, loss:0.03422221541404724
40-> accuracy1:100.0, accuracy2:99.00000095367432, accuracy3:100.0, loss:0.01455555111169815
50-> accuracy1:100.0, accuracy2:99.5555579662323, accuracy3:100.0, loss:-0.007993899285793304
60-> accuracy1:100.0, accuracy2:99.77777600288391, accuracy3:100.0, loss:-0.01202793512493372
70-> accuracy1:100.0, accuracy2:99.77777600288391, accuracy3:100.0, loss:-0.012706934474408627
80-> accuracy1:100.0, accuracy2:99.77777600288391, accuracy3:100.0, loss:-0.013028614223003387
90-> accuracy1:100.0, accuracy2:99.77777600288391, accuracy3:100.0, loss:-0.013263680040836334
B(x) = 3.84452465729919*x1**4 + 21.452472534678*x1**3*x2 - 5.64428322948896*x1**3 + 29.8658048271762*x1**2*x2**2 - 60.6263304718466*x1**2*x2 + 70.3272745246564*x1**2 + 16.3757751347503*x1*x2**3 - 45.6130332422445*x1*x2**2 + 126.45033997015*x1*x2 - 33.2244287282387*x1 + 2.96641028428127*x2**4 - 9.34727830862043*x2**3 + 47.2966725018611*x2**2 - 9.68704824785023*x2 - 1.62987628647716
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:3
0-> accuracy1:100.0, accuracy2:89.80000019073486, accuracy3:100.0, loss:0.20412351191043854
10-> accuracy1:97.37499952316284, accuracy2:89.89999890327454, accuracy3:100.0, loss:0.12410137057304382
20-> accuracy1:100.0, accuracy2:89.60000276565552, accuracy3:100.0, loss:0.07625190913677216
30-> accuracy1:100.0, accuracy2:89.60000276565552, accuracy3:100.0, loss:0.05763863027095795
40-> accuracy1:100.0, accuracy2:89.20000195503235, accuracy3:100.0, loss:0.0517849363386631
50-> accuracy1:100.0, accuracy2:89.60000276565552, accuracy3:100.0, loss:0.03417205810546875
60-> accuracy1:100.0, accuracy2:92.59999990463257, accuracy3:100.0, loss:0.017466893419623375
70-> accuracy1:100.0, accuracy2:99.59999918937683, accuracy3:100.0, loss:-0.0036679015029221773
80-> accuracy1:100.0, accuracy2:99.59999918937683, accuracy3:100.0, loss:-0.004356329794973135
90-> accuracy1:100.0, accuracy2:99.59999918937683, accuracy3:100.0, loss:-0.006569076795130968
B(x) = 0.692767064315783*x1**4 + 4.02297462963533*x1**3*x2 - 1.84051487897058*x1**3 + 5.92224338264905*x1**2*x2**2 - 11.272062252081*x1**2*x2 + 11.7180029767509*x1**2 + 3.29823596318674*x1*x2**3 - 4.59076920747482*x1*x2**2 + 24.1028349862105*x1*x2 - 4.06118200888353*x1 + 0.496466054827446*x2**4 - 0.750263945255367*x2**3 + 10.1940374184086*x2**2 + 3.28765584215669*x2 + 1.15314037789166
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:4
0-> accuracy1:100.0, accuracy2:90.72727560997009, accuracy3:100.0, loss:0.16914299130439758
10-> accuracy1:100.0, accuracy2:89.54545259475708, accuracy3:76.99999809265137, loss:0.28137439489364624
20-> accuracy1:100.0, accuracy2:81.81818127632141, accuracy3:100.0, loss:0.07806752622127533
30-> accuracy1:100.0, accuracy2:86.90909147262573, accuracy3:100.0, loss:0.06596849113702774
40-> accuracy1:100.0, accuracy2:89.18181657791138, accuracy3:100.0, loss:0.05599258095026016
50-> accuracy1:100.0, accuracy2:89.18181657791138, accuracy3:100.0, loss:0.04908246546983719
60-> accuracy1:100.0, accuracy2:89.45454359054565, accuracy3:100.0, loss:0.04417334496974945
70-> accuracy1:100.0, accuracy2:89.2727255821228, accuracy3:100.0, loss:0.03964150696992874
80-> accuracy1:100.0, accuracy2:89.54545259475708, accuracy3:100.0, loss:0.032844167202711105
90-> accuracy1:100.0, accuracy2:93.63636374473572, accuracy3:100.0, loss:0.022136468440294266
B(x) = 0.810756013330536*x1**4 + 4.21242594786171*x1**3*x2 - 3.42095352981978*x1**3 + 6.08451610668014*x1**2*x2**2 - 13.3795730938861*x1**2*x2 + 9.26751963951048*x1**2 + 3.54061952099092*x1*x2**3 + 1.55313922977876*x1*x2**2 + 24.1093447503485*x1*x2 - 4.14256175899725*x1 + 0.543100610334951*x2**4 + 1.84175181067114*x2**3 + 13.0982162386172*x2**2 + 3.30844194480599*x2 + 0.675522782360981
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:5
0-> accuracy1:100.0, accuracy2:88.58333230018616, accuracy3:100.0, loss:0.15769456326961517
10-> accuracy1:100.0, accuracy2:86.2500011920929, accuracy3:100.0, loss:0.140651136636734
20-> accuracy1:100.0, accuracy2:80.0000011920929, accuracy3:100.0, loss:0.13230660557746887
30-> accuracy1:100.0, accuracy2:80.83333373069763, accuracy3:100.0, loss:0.121187224984169
40-> accuracy1:100.0, accuracy2:82.4999988079071, accuracy3:100.0, loss:0.11089596897363663
50-> accuracy1:100.0, accuracy2:82.91666507720947, accuracy3:100.0, loss:0.0998273715376854
60-> accuracy1:100.0, accuracy2:82.99999833106995, accuracy3:100.0, loss:0.09447110444307327
70-> accuracy1:100.0, accuracy2:82.99999833106995, accuracy3:100.0, loss:0.09039906412363052
80-> accuracy1:100.0, accuracy2:82.99999833106995, accuracy3:100.0, loss:0.08782629668712616
90-> accuracy1:100.0, accuracy2:82.99999833106995, accuracy3:100.0, loss:0.08609040081501007
B(x) = 0.753177313222395*x1**4 + 3.33050109137078*x1**3*x2 - 3.51928911979989*x1**3 + 4.17661339004072*x1**2*x2**2 - 6.89513652023206*x1**2*x2 + 8.61397042709643*x1**2 + 2.06578020375316*x1*x2**3 + 0.50669174380411*x1*x2**2 + 14.5774911948398*x1*x2 - 2.74723904188629*x1 + 0.318597164535795*x2**4 + 1.17018689728293*x2**3 + 6.12017938148963*x2**2 - 0.0890025938159033*x2 - 0.20602479435576
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:6
0-> accuracy1:100.0, accuracy2:76.6153872013092, accuracy3:100.0, loss:0.12662699818611145
10-> accuracy1:100.0, accuracy2:76.6153872013092, accuracy3:100.0, loss:0.12480365484952927
20-> accuracy1:99.12499785423279, accuracy2:76.6153872013092, accuracy3:100.0, loss:0.13184930384159088
30-> accuracy1:100.0, accuracy2:76.6153872013092, accuracy3:100.0, loss:0.12983986735343933
40-> accuracy1:100.0, accuracy2:76.6153872013092, accuracy3:100.0, loss:0.1293715089559555
50-> accuracy1:100.0, accuracy2:76.6153872013092, accuracy3:100.0, loss:0.12852466106414795
60-> accuracy1:100.0, accuracy2:76.6153872013092, accuracy3:100.0, loss:0.12773816287517548
70-> accuracy1:100.0, accuracy2:76.6153872013092, accuracy3:100.0, loss:0.1271568387746811
80-> accuracy1:100.0, accuracy2:76.6153872013092, accuracy3:100.0, loss:0.12665659189224243
90-> accuracy1:100.0, accuracy2:76.6153872013092, accuracy3:100.0, loss:0.12617351114749908
B(x) = 0.757777676032251*x1**4 + 2.61066381710383*x1**3*x2 - 2.46077620206411*x1**3 + 3.42567126994175*x1**2*x2**2 - 4.93645523769596*x1**2*x2 + 8.29714440724953*x1**2 + 1.83099914099436*x1*x2**3 + 1.35750116126922*x1*x2**2 + 14.7988004718381*x1*x2 - 2.8163467983187*x1 + 0.327764076332007*x2**4 + 1.50730411586471*x2**3 + 6.24058636459306*x2**2 - 0.377609597488134*x2 - 0.158376601494631
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 99 counterexamples!
iter:7
0-> accuracy1:100.0, accuracy2:71.19370698928833, accuracy3:100.0, loss:0.15983228385448456
10-> accuracy1:100.0, accuracy2:71.19370698928833, accuracy3:100.0, loss:0.15877646207809448
20-> accuracy1:100.0, accuracy2:71.19370698928833, accuracy3:100.0, loss:0.1580202877521515
30-> accuracy1:100.0, accuracy2:71.19370698928833, accuracy3:100.0, loss:0.15734818577766418
40-> accuracy1:100.0, accuracy2:71.19370698928833, accuracy3:100.0, loss:0.1566900759935379
50-> accuracy1:100.0, accuracy2:71.19370698928833, accuracy3:100.0, loss:0.15617240965366364
60-> accuracy1:100.0, accuracy2:71.19370698928833, accuracy3:100.0, loss:0.15535402297973633
70-> accuracy1:100.0, accuracy2:71.12222909927368, accuracy3:100.0, loss:0.1547510027885437
80-> accuracy1:100.0, accuracy2:71.19370698928833, accuracy3:100.0, loss:0.1543971449136734
90-> accuracy1:100.0, accuracy2:71.19370698928833, accuracy3:100.0, loss:0.15425044298171997
B(x) = 0.715952421201339*x1**4 + 2.08453612755663*x1**3*x2 - 3.09457971244596*x1**3 + 3.28566045836211*x1**2*x2**2 - 5.58611423486072*x1**2*x2 + 7.70980161107903*x1**2 + 1.88259230281957*x1*x2**3 + 1.53321508848294*x1*x2**2 + 14.0077663069608*x1*x2 - 2.62484692901519*x1 + 0.358292338155358*x2**4 + 1.48142743492721*x2**3 + 5.89783211192466*x2**2 - 0.147988297873977*x2 - 0.110764964342195
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 95 counterexamples!
iter:8
0-> accuracy1:100.0, accuracy2:66.66666865348816, accuracy3:100.0, loss:0.179038405418396
10-> accuracy1:100.0, accuracy2:66.39893054962158, accuracy3:100.0, loss:0.1778409630060196
20-> accuracy1:100.0, accuracy2:65.93039035797119, accuracy3:100.0, loss:0.17678219079971313
30-> accuracy1:100.0, accuracy2:65.59571623802185, accuracy3:100.0, loss:0.1757400929927826
40-> accuracy1:100.0, accuracy2:64.79250192642212, accuracy3:100.0, loss:0.1738431751728058
50-> accuracy1:100.0, accuracy2:64.45783376693726, accuracy3:100.0, loss:0.17124740779399872
60-> accuracy1:100.0, accuracy2:63.9223575592041, accuracy3:100.0, loss:0.16266605257987976
70-> accuracy1:100.0, accuracy2:80.99063038825989, accuracy3:100.0, loss:0.12900365889072418
80-> accuracy1:100.0, accuracy2:85.94377636909485, accuracy3:100.0, loss:0.11883600056171417
90-> accuracy1:100.0, accuracy2:86.14457845687866, accuracy3:100.0, loss:0.11036330461502075
B(x) = 0.407178146105112*x1**4 + 1.31582827978238*x1**3*x2 - 1.95992162906612*x1**3 + 2.01356776562034*x1**2*x2**2 - 3.41410491111842*x1**2*x2 + 4.74184295056264*x1**2 + 1.22307129477911*x1*x2**3 + 2.56270835361891*x1*x2**2 + 10.3450075755231*x1*x2 - 1.98386221024252*x1 + 0.257689508535143*x2**4 + 1.29900935179838*x2**3 + 4.22708070757672*x2**2 + 1.02350066470128*x2 + 0.625998681206988
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:9
0-> accuracy1:100.0, accuracy2:80.61480522155762, accuracy3:100.0, loss:0.21123526990413666
10-> accuracy1:100.0, accuracy2:80.74027895927429, accuracy3:100.0, loss:0.16415619850158691
20-> accuracy1:100.0, accuracy2:80.55207133293152, accuracy3:100.0, loss:0.15405812859535217
30-> accuracy1:100.0, accuracy2:80.74027895927429, accuracy3:100.0, loss:0.15117143094539642
40-> accuracy1:100.0, accuracy2:80.67753911018372, accuracy3:100.0, loss:0.15340948104858398
50-> accuracy1:100.0, accuracy2:80.48933744430542, accuracy3:100.0, loss:0.14724881947040558
60-> accuracy1:100.0, accuracy2:80.55207133293152, accuracy3:100.0, loss:0.14576132595539093
70-> accuracy1:100.0, accuracy2:80.55207133293152, accuracy3:100.0, loss:0.14513945579528809
80-> accuracy1:100.0, accuracy2:80.48933744430542, accuracy3:100.0, loss:0.14457306265830994
90-> accuracy1:100.0, accuracy2:80.48933744430542, accuracy3:100.0, loss:0.14416585862636566
B(x) = 0.192342966315553*x1**4 + 0.659610683468674*x1**3*x2 - 0.781817357097052*x1**3 + 0.688804285844755*x1**2*x2**2 - 1.27100688047081*x1**2*x2 + 2.04913541292115*x1**2 + 0.478385747051026*x1*x2**3 + 0.941515033241729*x1*x2**2 + 2.97600991326219*x1*x2 - 1.23292929355546*x1 + 0.143632334712185*x2**4 + 0.729771794365791*x2**3 + 2.1451209776901*x2**2 + 1.31626886136006*x2 + 0.407937923375568
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:10
0-> accuracy1:100.0, accuracy2:75.67886710166931, accuracy3:100.0, loss:0.1896289438009262
10-> accuracy1:100.0, accuracy2:75.61983466148376, accuracy3:100.0, loss:0.18426592648029327
20-> accuracy1:100.0, accuracy2:75.61983466148376, accuracy3:100.0, loss:0.18528340756893158
30-> accuracy1:100.0, accuracy2:75.61983466148376, accuracy3:100.0, loss:0.1822923868894577
40-> accuracy1:100.0, accuracy2:75.56080222129822, accuracy3:100.0, loss:0.1821422278881073
50-> accuracy1:100.0, accuracy2:75.56080222129822, accuracy3:100.0, loss:0.1815020740032196
60-> accuracy1:100.0, accuracy2:75.56080222129822, accuracy3:100.0, loss:0.18331339955329895
70-> accuracy1:100.0, accuracy2:75.56080222129822, accuracy3:100.0, loss:0.18115533888339996
80-> accuracy1:100.0, accuracy2:75.38370490074158, accuracy3:100.0, loss:0.1893545240163803
90-> accuracy1:100.0, accuracy2:75.50176978111267, accuracy3:100.0, loss:0.18999217450618744
B(x) = 0.136903133550869*x1**4 + 0.499889094303012*x1**3*x2 - 0.434699857683414*x1**3 + 0.40111971675163*x1**2*x2**2 - 0.66507924034083*x1**2*x2 + 1.53593509104423*x1**2 + 0.346692347292015*x1*x2**3 + 0.837303155183803*x1*x2**2 + 1.79003062697475*x1*x2 - 1.08737377816222*x1 + 0.108246534443254*x2**4 + 0.561158074339684*x2**3 + 1.6536954115128*x2**2 + 1.33280465415395*x2 + 0.412746585843555
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:11
0-> accuracy1:100.0, accuracy2:71.34894132614136, accuracy3:100.0, loss:0.21618534624576569
10-> accuracy1:100.0, accuracy2:71.23745679855347, accuracy3:100.0, loss:0.21364758908748627
20-> accuracy1:100.0, accuracy2:71.29319906234741, accuracy3:100.0, loss:0.2183638960123062
30-> accuracy1:100.0, accuracy2:71.23745679855347, accuracy3:100.0, loss:0.2114502191543579
40-> accuracy1:100.0, accuracy2:71.23745679855347, accuracy3:100.0, loss:0.21172896027565002
50-> accuracy1:100.0, accuracy2:71.29319906234741, accuracy3:100.0, loss:0.21295872330665588
60-> accuracy1:100.0, accuracy2:71.34894132614136, accuracy3:100.0, loss:0.2160586416721344
70-> accuracy1:100.0, accuracy2:71.18171453475952, accuracy3:100.0, loss:0.21434608101844788
80-> accuracy1:100.0, accuracy2:71.23745679855347, accuracy3:100.0, loss:0.21454615890979767
90-> accuracy1:100.0, accuracy2:71.23745679855347, accuracy3:100.0, loss:0.21492137014865875
B(x) = 0.0716961883675476*x1**4 + 0.265461618953969*x1**3*x2 - 0.144759633598832*x1**3 + 0.246267812807305*x1**2*x2**2 - 0.357533901152248*x1**2*x2 + 1.04419761409393*x1**2 + 0.307108879220834*x1*x2**3 + 0.823372960969885*x1*x2**2 + 1.23838124888162*x1*x2 - 1.02801062713942*x1 + 0.0934276991990454*x2**4 + 0.470300823275598*x2**3 + 1.40754592054702*x2**2 + 1.28205281200377*x2 + 0.400090707193892
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:12
0-> accuracy1:100.0, accuracy2:67.37064123153687, accuracy3:100.0, loss:0.2442910522222519
10-> accuracy1:100.0, accuracy2:67.42344498634338, accuracy3:100.0, loss:0.2429938018321991
20-> accuracy1:100.0, accuracy2:67.42344498634338, accuracy3:100.0, loss:0.2427767813205719
30-> accuracy1:100.0, accuracy2:67.42344498634338, accuracy3:100.0, loss:0.24356384575366974
40-> accuracy1:100.0, accuracy2:67.37064123153687, accuracy3:100.0, loss:0.2420770227909088
50-> accuracy1:100.0, accuracy2:67.37064123153687, accuracy3:100.0, loss:0.24184979498386383
60-> accuracy1:100.0, accuracy2:67.37064123153687, accuracy3:100.0, loss:0.24216943979263306
70-> accuracy1:100.0, accuracy2:67.42344498634338, accuracy3:100.0, loss:0.24202005565166473
80-> accuracy1:100.0, accuracy2:67.42344498634338, accuracy3:100.0, loss:0.24089719355106354
90-> accuracy1:100.0, accuracy2:67.37064123153687, accuracy3:100.0, loss:0.24073822796344757
B(x) = 0.0697884554037404*x1**4 + 0.256106711794718*x1**3*x2 - 0.123320403469399*x1**3 + 0.20732196165748*x1**2*x2**2 - 0.172633862362606*x1**2*x2 + 1.02471369272682*x1**2 + 0.340465048113036*x1*x2**3 + 0.928188145200022*x1*x2**2 + 0.957678069722871*x1*x2 - 1.0328244956706*x1 + 0.073791695513506*x2**4 + 0.401711298640896*x2**3 + 1.30491133667975*x2**2 + 1.32570249691005*x2 + 0.360245567773824
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:13
0-> accuracy1:100.0, accuracy2:64.1424298286438, accuracy3:100.0, loss:0.2693958580493927
10-> accuracy1:100.0, accuracy2:64.19257521629333, accuracy3:100.0, loss:0.26979202032089233
20-> accuracy1:100.0, accuracy2:64.09227848052979, accuracy3:100.0, loss:0.2683793902397156
30-> accuracy1:100.0, accuracy2:63.99197578430176, accuracy3:100.0, loss:0.2686496675014496
40-> accuracy1:100.0, accuracy2:64.04212713241577, accuracy3:100.0, loss:0.26965007185935974
50-> accuracy1:100.0, accuracy2:63.89167308807373, accuracy3:100.0, loss:0.2700521945953369
60-> accuracy1:100.0, accuracy2:63.941824436187744, accuracy3:100.0, loss:0.26796722412109375
70-> accuracy1:100.0, accuracy2:64.09227848052979, accuracy3:100.0, loss:0.2678166925907135
80-> accuracy1:100.0, accuracy2:63.99197578430176, accuracy3:100.0, loss:0.2673487663269043
90-> accuracy1:100.0, accuracy2:64.04212713241577, accuracy3:100.0, loss:0.2663125991821289
B(x) = 0.0636212310600865*x1**4 + 0.214951229801682*x1**3*x2 - 0.118839501713603*x1**3 + 0.187196173218242*x1**2*x2**2 + 0.0166722140596368*x1**2*x2 + 0.997928678337781*x1**2 + 0.375197867656176*x1*x2**3 + 0.952436575511621*x1*x2**2 + 0.787741679547001*x1*x2 - 0.944050290938603*x1 + 0.0723834287305833*x2**4 + 0.363244683015118*x2**3 + 1.27270967605089*x2**2 + 1.39777456828909*x2 + 0.346986402386505
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:14
0-> accuracy1:100.0, accuracy2:61.0315203666687, accuracy3:100.0, loss:0.2903677225112915
10-> accuracy1:100.0, accuracy2:61.0315203666687, accuracy3:100.0, loss:0.29122135043144226
20-> accuracy1:100.0, accuracy2:61.079275608062744, accuracy3:100.0, loss:0.29085975885391235
30-> accuracy1:100.0, accuracy2:60.98376512527466, accuracy3:100.0, loss:0.2911982834339142
40-> accuracy1:100.0, accuracy2:60.98376512527466, accuracy3:100.0, loss:0.29073795676231384
50-> accuracy1:100.0, accuracy2:61.0315203666687, accuracy3:100.0, loss:0.2932090163230896
60-> accuracy1:100.0, accuracy2:60.98376512527466, accuracy3:100.0, loss:0.2921995222568512
70-> accuracy1:100.0, accuracy2:61.079275608062744, accuracy3:100.0, loss:0.29413336515426636
80-> accuracy1:100.0, accuracy2:61.079275608062744, accuracy3:100.0, loss:0.2894574701786041
90-> accuracy1:100.0, accuracy2:60.98376512527466, accuracy3:100.0, loss:0.28843873739242554
B(x) = 0.0566402635436699*x1**4 + 0.174014888368368*x1**3*x2 - 0.105738452433021*x1**3 + 0.205267567316855*x1**2*x2**2 + 0.191006772830955*x1**2*x2 + 0.95101016575114*x1**2 + 0.4281855479268*x1*x2**3 + 1.01295516185108*x1*x2**2 + 0.679176567888345*x1*x2 - 0.890216948853544*x1 + 0.0614449997562852*x2**4 + 0.284768512416733*x2**3 + 1.19380581005397*x2**2 + 1.4216082752719*x2 + 0.352104112564878
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:15
0-> accuracy1:100.0, accuracy2:58.24977159500122, accuracy3:100.0, loss:0.3098953366279602
10-> accuracy1:100.0, accuracy2:58.29535126686096, accuracy3:100.0, loss:0.30960872769355774
20-> accuracy1:100.0, accuracy2:58.24977159500122, accuracy3:100.0, loss:0.3094804584980011
30-> accuracy1:100.0, accuracy2:58.24977159500122, accuracy3:100.0, loss:0.30968740582466125
40-> accuracy1:100.0, accuracy2:58.24977159500122, accuracy3:100.0, loss:0.3091411590576172
50-> accuracy1:100.0, accuracy2:58.24977159500122, accuracy3:100.0, loss:0.3089955449104309
60-> accuracy1:100.0, accuracy2:58.24977159500122, accuracy3:100.0, loss:0.3102252185344696
70-> accuracy1:100.0, accuracy2:58.24977159500122, accuracy3:100.0, loss:0.3092811703681946
80-> accuracy1:100.0, accuracy2:58.29535126686096, accuracy3:100.0, loss:0.30933111906051636
90-> accuracy1:100.0, accuracy2:58.29535126686096, accuracy3:100.0, loss:0.3090570271015167
B(x) = 0.0492894428739508*x1**4 + 0.151459138034423*x1**3*x2 - 0.0949151103523083*x1**3 + 0.237638212164677*x1**2*x2**2 + 0.305943578525941*x1**2*x2 + 0.913655256740428*x1**2 + 0.45257340792016*x1*x2**3 + 1.02195180191937*x1*x2**2 + 0.623223484694961*x1*x2 - 0.812035816324606*x1 + 0.0547838231671661*x2**4 + 0.239184183853005*x2**3 + 1.1359991919482*x2**2 + 1.42066494881671*x2 + 0.345984840499138
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:16
0-> accuracy1:100.0, accuracy2:55.71054816246033, accuracy3:100.0, loss:0.32755163311958313
10-> accuracy1:100.0, accuracy2:55.666959285736084, accuracy3:100.0, loss:0.32768234610557556
20-> accuracy1:100.0, accuracy2:55.71054816246033, accuracy3:100.0, loss:0.3275515139102936
30-> accuracy1:100.0, accuracy2:55.71054816246033, accuracy3:100.0, loss:0.32751330733299255
40-> accuracy1:100.0, accuracy2:55.71054816246033, accuracy3:100.0, loss:0.3275214433670044
50-> accuracy1:100.0, accuracy2:55.75414299964905, accuracy3:100.0, loss:0.32759058475494385
60-> accuracy1:100.0, accuracy2:55.71054816246033, accuracy3:100.0, loss:0.3275872468948364
70-> accuracy1:100.0, accuracy2:55.666959285736084, accuracy3:100.0, loss:0.32750117778778076
80-> accuracy1:100.0, accuracy2:55.666959285736084, accuracy3:100.0, loss:0.3275568187236786
90-> accuracy1:100.0, accuracy2:55.666959285736084, accuracy3:100.0, loss:0.3275172710418701
B(x) = 0.0412914522112871*x1**4 + 0.133548505244434*x1**3*x2 - 0.0859936752421821*x1**3 + 0.254310786818603*x1**2*x2**2 + 0.360651462528882*x1**2*x2 + 0.889886446656976*x1**2 + 0.469205248193135*x1*x2**3 + 1.01840400195998*x1*x2**2 + 0.576193240188737*x1*x2 - 0.789585479084386*x1 + 0.0513199133828763*x2**4 + 0.198764645187601*x2**3 + 1.08921569166264*x2**2 + 1.42526568764607*x2 + 0.34277456545752
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:17
0-> accuracy1:100.0, accuracy2:53.38345766067505, accuracy3:100.0, loss:0.34501734375953674
10-> accuracy1:100.0, accuracy2:53.341686725616455, accuracy3:100.0, loss:0.3448750674724579
20-> accuracy1:100.0, accuracy2:53.341686725616455, accuracy3:100.0, loss:0.3448835015296936
30-> accuracy1:100.0, accuracy2:53.29991579055786, accuracy3:100.0, loss:0.34500500559806824
40-> accuracy1:100.0, accuracy2:53.29991579055786, accuracy3:100.0, loss:0.344931423664093
50-> accuracy1:100.0, accuracy2:53.25814485549927, accuracy3:100.0, loss:0.3448284864425659
60-> accuracy1:100.0, accuracy2:53.29991579055786, accuracy3:100.0, loss:0.3448488116264343
70-> accuracy1:100.0, accuracy2:53.29991579055786, accuracy3:100.0, loss:0.34487929940223694
80-> accuracy1:100.0, accuracy2:53.216373920440674, accuracy3:100.0, loss:0.3448288142681122
90-> accuracy1:100.0, accuracy2:53.216373920440674, accuracy3:100.0, loss:0.3448449671268463
B(x) = 0.0364210721012709*x1**4 + 0.118997070598595*x1**3*x2 - 0.0795324616788495*x1**3 + 0.278472468720653*x1**2*x2**2 + 0.430033750631008*x1**2*x2 + 0.869303227936671*x1**2 + 0.472498763324232*x1*x2**3 + 0.977997223781368*x1*x2**2 + 0.483179060143976*x1*x2 - 0.765509955469423*x1 + 0.0519383237659741*x2**4 + 0.179526334874849*x2**3 + 1.06631431134223*x2**2 + 1.43690018611427*x2 + 0.337334086860331
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:18
0-> accuracy1:100.0, accuracy2:51.08259916305542, accuracy3:100.0, loss:0.3606802225112915
10-> accuracy1:100.0, accuracy2:51.122695207595825, accuracy3:100.0, loss:0.36070460081100464
20-> accuracy1:100.0, accuracy2:51.042503118515015, accuracy3:100.0, loss:0.36058828234672546
30-> accuracy1:100.0, accuracy2:51.00240707397461, accuracy3:100.0, loss:0.36059877276420593
40-> accuracy1:100.0, accuracy2:51.042503118515015, accuracy3:100.0, loss:0.36056917905807495
50-> accuracy1:100.0, accuracy2:51.00240707397461, accuracy3:100.0, loss:0.36071351170539856
60-> accuracy1:100.0, accuracy2:51.042503118515015, accuracy3:100.0, loss:0.3607018291950226
70-> accuracy1:100.0, accuracy2:51.042503118515015, accuracy3:100.0, loss:0.36054810881614685
80-> accuracy1:100.0, accuracy2:51.00240707397461, accuracy3:100.0, loss:0.36064618825912476
90-> accuracy1:100.0, accuracy2:51.042503118515015, accuracy3:100.0, loss:0.36066803336143494
B(x) = 0.0308775610761349*x1**4 + 0.100657300168436*x1**3*x2 - 0.0784680506808554*x1**3 + 0.293907054320905*x1**2*x2**2 + 0.500227630747375*x1**2*x2 + 0.848820373754702*x1**2 + 0.479847941307328*x1*x2**3 + 0.962969224943515*x1*x2**2 + 0.391412255767255*x1*x2 - 0.751158450086045*x1 + 0.0378961263326753*x2**4 + 0.111355564286491*x2**3 + 0.977209065062405*x2**2 + 1.43385908256111*x2 + 0.342455236601372
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:19
0-> accuracy1:100.0, accuracy2:49.074786901474, accuracy3:100.0, loss:0.3752380907535553
10-> accuracy1:100.0, accuracy2:49.074786901474, accuracy3:100.0, loss:0.37518519163131714
20-> accuracy1:100.0, accuracy2:49.11333918571472, accuracy3:100.0, loss:0.3752792775630951
30-> accuracy1:100.0, accuracy2:49.036237597465515, accuracy3:100.0, loss:0.37567976117134094
40-> accuracy1:100.0, accuracy2:49.074786901474, accuracy3:100.0, loss:0.37566307187080383
50-> accuracy1:100.0, accuracy2:49.151888489723206, accuracy3:100.0, loss:0.3756546974182129
60-> accuracy1:100.0, accuracy2:49.074786901474, accuracy3:100.0, loss:0.3756393790245056
70-> accuracy1:100.0, accuracy2:49.11333918571472, accuracy3:100.0, loss:0.3753644526004791
80-> accuracy1:100.0, accuracy2:49.11333918571472, accuracy3:100.0, loss:0.37552252411842346
90-> accuracy1:100.0, accuracy2:49.151888489723206, accuracy3:100.0, loss:0.37530452013015747
B(x) = 0.0255205215786909*x1**4 + 0.0954000574036317*x1**3*x2 - 0.0607405821059463*x1**3 + 0.320939502005963*x1**2*x2**2 + 0.559284998745381*x1**2*x2 + 0.836355344710469*x1**2 + 0.4988176049281*x1*x2**3 + 0.982812142303257*x1*x2**2 + 0.405121762043946*x1*x2 - 0.702976348466844*x1 + 0.0431822182594882*x2**4 + 0.108154563198083*x2**3 + 0.983119328339591*x2**2 + 1.45293941195217*x2 + 0.333051207882865
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:20
0-> accuracy1:100.0, accuracy2:47.25315570831299, accuracy3:100.0, loss:0.3886528015136719
10-> accuracy1:100.0, accuracy2:47.216036915779114, accuracy3:100.0, loss:0.3886582553386688
20-> accuracy1:100.0, accuracy2:47.216036915779114, accuracy3:100.0, loss:0.38861122727394104
30-> accuracy1:100.0, accuracy2:47.25315570831299, accuracy3:100.0, loss:0.38856014609336853
40-> accuracy1:100.0, accuracy2:47.216036915779114, accuracy3:100.0, loss:0.3887588083744049
50-> accuracy1:100.0, accuracy2:47.141796350479126, accuracy3:100.0, loss:0.3891322910785675
60-> accuracy1:100.0, accuracy2:47.216036915779114, accuracy3:100.0, loss:0.38905981183052063
70-> accuracy1:100.0, accuracy2:47.29027450084686, accuracy3:100.0, loss:0.38877686858177185
80-> accuracy1:100.0, accuracy2:47.25315570831299, accuracy3:100.0, loss:0.38867995142936707
90-> accuracy1:100.0, accuracy2:47.25315570831299, accuracy3:100.0, loss:0.38853052258491516
B(x) = 0.0196796783207988*x1**4 + 0.0831958449281346*x1**3*x2 - 0.0548992491142539*x1**3 + 0.335609632152696*x1**2*x2**2 + 0.623888385536406*x1**2*x2 + 0.822868536590295*x1**2 + 0.502896348784198*x1*x2**3 + 0.983546491295753*x1*x2**2 + 0.339801385325134*x1*x2 - 0.70541805333914*x1 + 0.0342609392825766*x2**4 + 0.0619877714913339*x2**3 + 0.889888858119724*x2**2 + 1.41827479456791*x2 + 0.337337763880847
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
Failed
Elapsed Time: 115.99799720803276
