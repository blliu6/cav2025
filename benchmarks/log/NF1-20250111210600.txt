{'batch_size': 800, 'lr': np.float64(0.16999999999999998), 'loss_weight_continuous': (1, 1, 1), 'R_b': 0.4, 'margin': 0.4, 'DEG_continuous': [2, 4, 4, 2], 'learning_loops': 100, 'max_iter': 20, 'err': 0.02677454477719443}

Mosek can be used normally.
iter:1
0-> accuracy1:0.0, accuracy2:27.375000715255737, accuracy3:0.0, loss:1.1332868337631226
10-> accuracy1:100.0, accuracy2:95.87500095367432, accuracy3:100.0, loss:0.16859543323516846
20-> accuracy1:100.0, accuracy2:96.37500047683716, accuracy3:100.0, loss:0.1997424215078354
30-> accuracy1:100.0, accuracy2:99.00000095367432, accuracy3:100.0, loss:0.057464927434921265
40-> accuracy1:62.99999952316284, accuracy2:98.62499833106995, accuracy3:100.0, loss:10.095686912536621
50-> accuracy1:100.0, accuracy2:98.7500011920929, accuracy3:100.0, loss:0.6596940159797668
60-> accuracy1:100.0, accuracy2:98.1249988079071, accuracy3:100.0, loss:7.028563976287842
70-> accuracy1:100.0, accuracy2:91.25000238418579, accuracy3:100.0, loss:558.1444702148438
80-> accuracy1:96.49999737739563, accuracy2:98.87499809265137, accuracy3:100.0, loss:30.030017852783203
90-> accuracy1:85.50000190734863, accuracy2:99.25000071525574, accuracy3:100.0, loss:433.7774658203125
B(x) = 1927.0037682772*x1**4 + 6861.07465814225*x1**3*x2 + 13932.5523888829*x1**3 + 9722.58058316336*x1**2*x2**2 + 29955.3646615221*x1**2*x2 + 32688.3348985447*x1**2 + 3207.84358531127*x1*x2**3 + 26162.2730980765*x1*x2**2 + 63380.3947785598*x1*x2 - 5469.96916799196*x1 - 1169.01606531156*x2**4 - 739.583426548612*x2**3 + 10054.8340960369*x2**2 + 38425.2944118386*x2 - 7134.40179820217
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:2
0-> accuracy1:100.0, accuracy2:87.44444251060486, accuracy3:100.0, loss:553.8568725585938
10-> accuracy1:99.50000047683716, accuracy2:99.11110997200012, accuracy3:100.0, loss:17.507375717163086
20-> accuracy1:99.50000047683716, accuracy2:99.2222249507904, accuracy3:100.0, loss:17.54035758972168
30-> accuracy1:100.0, accuracy2:99.44444298744202, accuracy3:100.0, loss:10.937618255615234
40-> accuracy1:100.0, accuracy2:99.5555579662323, accuracy3:100.0, loss:7.641249656677246
50-> accuracy1:99.75000023841858, accuracy2:99.44444298744202, accuracy3:100.0, loss:4.964073657989502
60-> accuracy1:99.87499713897705, accuracy2:99.6666669845581, accuracy3:100.0, loss:3.9760115146636963
70-> accuracy1:100.0, accuracy2:99.5555579662323, accuracy3:100.0, loss:3.2135024070739746
80-> accuracy1:100.0, accuracy2:99.5555579662323, accuracy3:100.0, loss:2.6502368450164795
90-> accuracy1:100.0, accuracy2:99.5555579662323, accuracy3:100.0, loss:2.1641480922698975
B(x) = 1272.32256502097*x1**4 + 5006.90846934105*x1**3*x2 + 9893.25754352397*x1**3 + 6427.61814665361*x1**2*x2**2 + 20824.2954640852*x1**2*x2 + 21795.3323476409*x1**2 + 6062.35232860628*x1*x2**3 + 27708.4042189279*x1*x2**2 + 35908.4335795743*x1*x2 - 2159.55822584572*x1 + 359.36981943055*x2**4 + 4168.9842053284*x2**3 + 12420.916211374*x2**2 + 11592.574626258*x2 - 2188.03422656916
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:3
0-> accuracy1:100.0, accuracy2:89.60000276565552, accuracy3:100.0, loss:74.04104614257812
10-> accuracy1:100.0, accuracy2:97.50000238418579, accuracy3:100.0, loss:5.587217330932617
20-> accuracy1:100.0, accuracy2:99.40000176429749, accuracy3:100.0, loss:3.7996444702148438
30-> accuracy1:100.0, accuracy2:99.40000176429749, accuracy3:100.0, loss:2.400599956512451
40-> accuracy1:100.0, accuracy2:99.40000176429749, accuracy3:100.0, loss:1.9117552042007446
50-> accuracy1:100.0, accuracy2:99.40000176429749, accuracy3:100.0, loss:1.5084834098815918
60-> accuracy1:100.0, accuracy2:99.50000047683716, accuracy3:100.0, loss:1.0855939388275146
70-> accuracy1:100.0, accuracy2:99.50000047683716, accuracy3:100.0, loss:0.8154665231704712
80-> accuracy1:100.0, accuracy2:99.59999918937683, accuracy3:100.0, loss:0.6301066875457764
90-> accuracy1:100.0, accuracy2:99.59999918937683, accuracy3:100.0, loss:0.5044078230857849
B(x) = 320.342784314074*x1**4 + 1390.81057869672*x1**3*x2 + 2488.45138446097*x1**3 + 2037.85782196563*x1**2*x2**2 + 5765.59046144164*x1**2*x2 + 4992.35044185713*x1**2 + 1787.33602355717*x1*x2**3 + 7732.69049680233*x1*x2**2 + 9070.44918773975*x1*x2 - 2610.33697485062*x1 + 365.928861942181*x2**4 + 2343.15101400822*x2**3 + 3658.28598758292*x2**2 - 605.090272387954*x2 + 178.686160923982
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:4
0-> accuracy1:100.0, accuracy2:90.54545164108276, accuracy3:100.0, loss:21.786710739135742
10-> accuracy1:100.0, accuracy2:90.36363363265991, accuracy3:100.0, loss:10.088632583618164
20-> accuracy1:96.74999713897705, accuracy2:97.36363887786865, accuracy3:100.0, loss:1.857379674911499
30-> accuracy1:100.0, accuracy2:97.72727489471436, accuracy3:99.75000023841858, loss:0.6387369632720947
40-> accuracy1:100.0, accuracy2:96.90909385681152, accuracy3:100.0, loss:0.4734111726284027
50-> accuracy1:100.0, accuracy2:97.9090929031372, accuracy3:100.0, loss:0.31229960918426514
60-> accuracy1:100.0, accuracy2:99.00000095367432, accuracy3:100.0, loss:0.2073972374200821
70-> accuracy1:100.0, accuracy2:99.09090995788574, accuracy3:100.0, loss:0.15011723339557648
80-> accuracy1:99.75000023841858, accuracy2:99.2727279663086, accuracy3:100.0, loss:0.11711139231920242
90-> accuracy1:100.0, accuracy2:99.18181896209717, accuracy3:100.0, loss:0.09204205870628357
B(x) = 77.5674643335273*x1**4 + 348.966896889243*x1**3*x2 + 563.874730612714*x1**3 + 557.627864033755*x1**2*x2**2 + 1370.51478490628*x1**2*x2 + 1107.72764333212*x1**2 + 530.810248431094*x1*x2**3 + 1939.10893540156*x1*x2**2 + 1985.79769178005*x1*x2 - 539.995335014942*x1 + 136.014498879081*x2**4 + 653.4122878209*x2**3 + 929.421831335252*x2**2 - 136.343151127835*x2 - 49.1657276100736
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 98 counterexamples!
iter:5
0-> accuracy1:100.0, accuracy2:91.15191698074341, accuracy3:100.0, loss:2.1810190677642822
10-> accuracy1:98.50000143051147, accuracy2:90.73455929756165, accuracy3:99.37499761581421, loss:1.7516344785690308
20-> accuracy1:98.87499809265137, accuracy2:90.56761264801025, accuracy3:99.12499785423279, loss:1.3858052492141724
30-> accuracy1:98.25000166893005, accuracy2:89.81636166572571, accuracy3:99.25000071525574, loss:1.137839674949646
40-> accuracy1:98.7500011920929, accuracy2:89.31552767753601, accuracy3:99.62499737739563, loss:0.9585107564926147
50-> accuracy1:98.37499856948853, accuracy2:88.98163437843323, accuracy3:99.75000023841858, loss:0.8158190846443176
60-> accuracy1:98.37499856948853, accuracy2:88.89816403388977, accuracy3:99.25000071525574, loss:0.6999049186706543
70-> accuracy1:98.62499833106995, accuracy2:88.64774703979492, accuracy3:99.50000047683716, loss:0.6034684181213379
80-> accuracy1:98.62499833106995, accuracy2:88.48080039024353, accuracy3:99.75000023841858, loss:0.522843062877655
90-> accuracy1:98.62499833106995, accuracy2:88.56427669525146, accuracy3:99.75000023841858, loss:0.4550049304962158
B(x) = 19.5049043855233*x1**4 + 93.2190160148159*x1**3*x2 + 134.886702716491*x1**3 + 161.260578434524*x1**2*x2**2 + 366.005910297125*x1**2*x2 + 259.063927637933*x1**2 + 152.650676229716*x1*x2**3 + 503.527260796607*x1*x2**2 + 499.795454843099*x1*x2 - 99.5253510130318*x1 + 45.8147404685737*x2**4 + 191.347025888318*x2**3 + 245.565550295037*x2**2 - 26.3292428999439*x2 - 12.9883309553283
Add 5 counterexamples!
Add 83 counterexamples!
iter:6
0-> accuracy1:98.01242351531982, accuracy2:82.82591700553894, accuracy3:99.62499737739563, loss:0.6548586487770081
10-> accuracy1:97.14285731315613, accuracy2:82.51366019248962, accuracy3:99.37499761581421, loss:0.557471752166748
20-> accuracy1:97.26707935333252, accuracy2:82.51366019248962, accuracy3:99.00000095367432, loss:0.48835423588752747
30-> accuracy1:97.26707935333252, accuracy2:82.27946758270264, accuracy3:99.62499737739563, loss:0.4273800551891327
40-> accuracy1:97.51552939414978, accuracy2:82.04527497291565, accuracy3:99.37499761581421, loss:0.3764706254005432
50-> accuracy1:97.39130139350891, accuracy2:82.04527497291565, accuracy3:99.62499737739563, loss:0.3340660333633423
60-> accuracy1:97.51552939414978, accuracy2:82.12333917617798, accuracy3:99.50000047683716, loss:0.29850101470947266
70-> accuracy1:97.51552939414978, accuracy2:81.96721076965332, accuracy3:99.75000023841858, loss:0.26867374777793884
80-> accuracy1:97.51552939414978, accuracy2:81.73301815986633, accuracy3:100.0, loss:0.24346236884593964
90-> accuracy1:97.63975143432617, accuracy2:81.4207673072815, accuracy3:99.87499713897705, loss:0.22217808663845062
B(x) = 5.1759771771335*x1**4 + 25.5994696505625*x1**3*x2 + 34.5196438331569*x1**3 + 45.8350736801302*x1**2*x2**2 + 97.3149252064111*x1**2*x2 + 64.6872281910922*x1**2 + 43.724221846079*x1*x2**3 + 132.728624168732*x1*x2**2 + 124.668371688771*x1*x2 - 25.7611483604928*x1 + 13.9584320667166*x2**4 + 51.9515034390021*x2**3 + 59.0561242538316*x2**2 - 8.74487174197928*x2 - 2.35869989021268
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 88 counterexamples!
iter:7
0-> accuracy1:97.76397347450256, accuracy2:76.04090571403503, accuracy3:100.0, loss:0.2805013656616211
10-> accuracy1:97.01863527297974, accuracy2:76.11395120620728, accuracy3:100.0, loss:0.2572810649871826
20-> accuracy1:97.01863527297974, accuracy2:75.89481472969055, accuracy3:100.0, loss:0.23799817264080048
30-> accuracy1:97.14285731315613, accuracy2:75.09130835533142, accuracy3:100.0, loss:0.22193598747253418
40-> accuracy1:97.63975143432617, accuracy2:74.72607493400574, accuracy3:100.0, loss:0.20860351622104645
50-> accuracy1:97.88820147514343, accuracy2:73.99562001228333, accuracy3:100.0, loss:0.1974952518939972
60-> accuracy1:98.26086759567261, accuracy2:73.9225685596466, accuracy3:100.0, loss:0.18850485980510712
70-> accuracy1:98.50931763648987, accuracy2:73.70343208312988, accuracy3:100.0, loss:0.18081507086753845
80-> accuracy1:98.63353967666626, accuracy2:73.41125011444092, accuracy3:100.0, loss:0.17445871233940125
90-> accuracy1:98.75776171684265, accuracy2:73.33820462226868, accuracy3:100.0, loss:0.16936644911766052
B(x) = 1.4584425123348*x1**4 + 7.4257632955312*x1**3*x2 + 9.4818770080007*x1**3 + 13.6513857680599*x1**2*x2**2 + 27.5781515954619*x1**2*x2 + 17.6357809900113*x1**2 + 13.2198369222279*x1*x2**3 + 37.8469841993616*x1*x2**2 + 34.2245863446153*x1*x2 - 7.36197540777421*x1 + 4.42935670009831*x2**4 + 15.1808010620987*x2**3 + 15.763142221291*x2**2 - 2.56996366797373*x2 - 0.387431063167884
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 87 counterexamples!
iter:8
0-> accuracy1:98.75776171684265, accuracy2:68.61263513565063, accuracy3:100.0, loss:0.1945446878671646
10-> accuracy1:98.63353967666626, accuracy2:68.40659379959106, accuracy3:100.0, loss:0.18966442346572876
20-> accuracy1:98.38509559631348, accuracy2:68.2692289352417, accuracy3:100.0, loss:0.18580739200115204
30-> accuracy1:99.1304337978363, accuracy2:67.65109896659851, accuracy3:100.0, loss:0.18236814439296722
40-> accuracy1:99.37888383865356, accuracy2:67.37637519836426, accuracy3:100.0, loss:0.17968031764030457
50-> accuracy1:100.0, accuracy2:67.10164546966553, accuracy3:100.0, loss:0.17750507593154907
60-> accuracy1:100.0, accuracy2:66.89560413360596, accuracy3:100.0, loss:0.17581911385059357
70-> accuracy1:100.0, accuracy2:66.6208803653717, accuracy3:100.0, loss:0.17465825378894806
80-> accuracy1:100.0, accuracy2:66.34615659713745, accuracy3:100.0, loss:0.17394264042377472
90-> accuracy1:100.0, accuracy2:66.07142686843872, accuracy3:100.0, loss:0.17360684275627136
B(x) = 0.439925889409686*x1**4 + 2.27465211459833*x1**3*x2 + 2.83250913587693*x1**3 + 4.18343767765598*x1**2*x2**2 + 8.22790860015973*x1**2*x2 + 5.38219702281167*x1**2 + 4.09861473213747*x1*x2**3 + 11.3842798669853*x1*x2**2 + 10.1908440812823*x1*x2 - 2.67444756806648*x1 + 1.39565346943597*x2**4 + 4.43838353759288*x2**3 + 4.28945149854737*x2**2 - 0.708449029297279*x2 + 0.0512853720981383
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:9
0-> accuracy1:100.0, accuracy2:61.69666051864624, accuracy3:100.0, loss:0.20169727504253387
10-> accuracy1:100.0, accuracy2:61.56812310218811, accuracy3:100.0, loss:0.20189785957336426
20-> accuracy1:100.0, accuracy2:60.98971962928772, accuracy3:100.0, loss:0.20245254039764404
30-> accuracy1:100.0, accuracy2:60.41131019592285, accuracy3:100.0, loss:0.20326635241508484
40-> accuracy1:100.0, accuracy2:59.76863503456116, accuracy3:100.0, loss:0.20433534681797028
50-> accuracy1:100.0, accuracy2:59.12596583366394, accuracy3:100.0, loss:0.20558993518352509
60-> accuracy1:100.0, accuracy2:58.54755640029907, accuracy3:100.0, loss:0.20690226554870605
70-> accuracy1:100.0, accuracy2:57.96915292739868, accuracy3:100.0, loss:0.20824427902698517
80-> accuracy1:100.0, accuracy2:57.45501518249512, accuracy3:100.0, loss:0.20982877910137177
90-> accuracy1:100.0, accuracy2:57.069408893585205, accuracy3:100.0, loss:0.2117120623588562
B(x) = 0.141703092369465*x1**4 + 0.729424782125893*x1**3*x2 + 0.925619763110072*x1**3 + 1.30219288654912*x1**2*x2**2 + 2.57413261359164*x1**2*x2 + 1.89086910070069*x1**2 + 1.28482574175944*x1*x2**3 + 3.59682638557359*x1*x2**2 + 3.31785569243131*x1*x2 - 1.2750650188339*x1 + 0.424658189548291*x2**4 + 1.2673329923134*x2**3 + 1.20599618081046*x2**2 - 0.0740955867923978*x2 + 0.0910523013091472
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:10
0-> accuracy1:100.0, accuracy2:53.2608687877655, accuracy3:100.0, loss:0.23596934974193573
10-> accuracy1:100.0, accuracy2:52.958935499191284, accuracy3:100.0, loss:0.23832710087299347
20-> accuracy1:100.0, accuracy2:52.83816456794739, accuracy3:100.0, loss:0.24094857275485992
30-> accuracy1:100.0, accuracy2:52.77777910232544, accuracy3:100.0, loss:0.24376949667930603
40-> accuracy1:100.0, accuracy2:52.2946834564209, accuracy3:100.0, loss:0.24698954820632935
50-> accuracy1:100.0, accuracy2:51.811593770980835, accuracy3:100.0, loss:0.2504229247570038
60-> accuracy1:100.0, accuracy2:51.2077271938324, accuracy3:100.0, loss:0.2537580132484436
70-> accuracy1:100.0, accuracy2:50.0, accuracy3:100.0, loss:0.25716519355773926
80-> accuracy1:100.0, accuracy2:48.85265827178955, accuracy3:100.0, loss:0.2606118619441986
90-> accuracy1:100.0, accuracy2:48.06763231754303, accuracy3:100.0, loss:0.26405763626098633
B(x) = 0.0504737820716826*x1**4 + 0.256000096033521*x1**3*x2 + 0.344106606262225*x1**3 + 0.431668047858523*x1**2*x2**2 + 0.887551790451135*x1**2*x2 + 0.795778814652435*x1**2 + 0.425352344570943*x1*x2**3 + 1.24645957547817*x1*x2**2 + 1.23647266129185*x1*x2 - 0.854764924206696*x1 + 0.130021631479071*x2**4 + 0.356424041181087*x2**3 + 0.35066413154394*x2**2 + 0.167512445492476*x2 + 0.111076769044049
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:11
0-> accuracy1:100.0, accuracy2:44.36218738555908, accuracy3:100.0, loss:0.2886381149291992
10-> accuracy1:100.0, accuracy2:42.93849766254425, accuracy3:100.0, loss:0.29212456941604614
20-> accuracy1:100.0, accuracy2:42.42596924304962, accuracy3:100.0, loss:0.2955823242664337
30-> accuracy1:100.0, accuracy2:42.02733337879181, accuracy3:100.0, loss:0.2989491820335388
40-> accuracy1:100.0, accuracy2:41.91344082355499, accuracy3:100.0, loss:0.30226773023605347
50-> accuracy1:100.0, accuracy2:41.628700494766235, accuracy3:100.0, loss:0.30576372146606445
60-> accuracy1:100.0, accuracy2:41.400912404060364, accuracy3:100.0, loss:0.3092348873615265
70-> accuracy1:100.0, accuracy2:40.83143472671509, accuracy3:100.0, loss:0.3126683533191681
80-> accuracy1:100.0, accuracy2:40.71753919124603, accuracy3:100.0, loss:0.3163840174674988
90-> accuracy1:100.0, accuracy2:40.48974812030792, accuracy3:100.0, loss:0.3202017843723297
B(x) = 0.0186231156089089*x1**4 + 0.0922354085862275*x1**3*x2 + 0.133496063588282*x1**3 + 0.147013787585462*x1**2*x2**2 + 0.317104116137654*x1**2*x2 + 0.358254581362525*x1**2 + 0.145176351672001*x1*x2**3 + 0.451553215480784*x1*x2**2 + 0.483774052108283*x1*x2 - 0.646239331770531*x1 + 0.0411671629980709*x2**4 + 0.102260091988653*x2**3 + 0.108898643672474*x2**2 + 0.279489854567738*x2 + 0.0939815721326187
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:12
0-> accuracy1:100.0, accuracy2:37.98491358757019, accuracy3:100.0, loss:0.34576353430747986
10-> accuracy1:100.0, accuracy2:37.71551847457886, accuracy3:100.0, loss:0.3495550751686096
20-> accuracy1:100.0, accuracy2:36.961206793785095, accuracy3:100.0, loss:0.3533570468425751
30-> accuracy1:100.0, accuracy2:36.368533968925476, accuracy3:100.0, loss:0.3570544719696045
40-> accuracy1:100.0, accuracy2:36.09913885593414, accuracy3:100.0, loss:0.3612273931503296
50-> accuracy1:100.0, accuracy2:35.56034564971924, accuracy3:100.0, loss:0.365704208612442
60-> accuracy1:100.0, accuracy2:35.12931168079376, accuracy3:100.0, loss:0.3699273467063904
70-> accuracy1:100.0, accuracy2:34.428879618644714, accuracy3:100.0, loss:0.3740684688091278
80-> accuracy1:100.0, accuracy2:33.02801847457886, accuracy3:100.0, loss:0.3783092498779297
90-> accuracy1:100.0, accuracy2:32.8125, accuracy3:100.0, loss:0.3826415240764618
B(x) = 0.00769652045174706*x1**4 + 0.0357886852506357*x1**3*x2 + 0.0584358710115048*x1**3 + 0.0526219513251961*x1**2*x2**2 + 0.120697280270662*x1**2*x2 + 0.189894700464114*x1**2 + 0.0538767914541808*x1*x2**3 + 0.181555460694636*x1*x2**2 + 0.20973452837363*x1*x2 - 0.47913057090381*x1 + 0.0139652744856223*x2**4 + 0.0284462724625222*x2**3 + 0.0313903314662841*x2**2 + 0.364527802274378*x2 + 0.0769649724511323
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:13
0-> accuracy1:100.0, accuracy2:30.72597086429596, accuracy3:100.0, loss:0.4066734313964844
10-> accuracy1:100.0, accuracy2:30.265849828720093, accuracy3:100.0, loss:0.41079485416412354
20-> accuracy1:100.0, accuracy2:29.498976469039917, accuracy3:100.0, loss:0.4145432710647583
30-> accuracy1:100.0, accuracy2:29.089978337287903, accuracy3:100.0, loss:0.4181697368621826
40-> accuracy1:100.0, accuracy2:28.476482629776, accuracy3:100.0, loss:0.4215439558029175
50-> accuracy1:100.0, accuracy2:27.505111694335938, accuracy3:100.0, loss:0.4249819219112396
60-> accuracy1:100.0, accuracy2:27.30061411857605, accuracy3:100.0, loss:0.4283326268196106
70-> accuracy1:100.0, accuracy2:27.24948823451996, accuracy3:100.0, loss:0.4316762089729309
80-> accuracy1:100.0, accuracy2:26.99386477470398, accuracy3:100.0, loss:0.4347841143608093
90-> accuracy1:100.0, accuracy2:26.891615986824036, accuracy3:100.0, loss:0.4380717873573303
B(x) = 0.00402180753471569*x1**4 + 0.0155901160462607*x1**3*x2 + 0.031497418371943*x1**3 + 0.0206932182606068*x1**2*x2**2 + 0.0507410707527701*x1**2*x2 + 0.131632939725844*x1**2 + 0.024165843249379*x1*x2**3 + 0.0894810754954819*x1*x2**2 + 0.108302823603066*x1*x2 - 0.408322195946086*x1 + 0.00539075589483053*x2**4 + 0.00621360932077002*x2**3 + 0.00451216287676844*x2**2 + 0.4023455099873*x2 + 0.0697395870737294
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:14
0-> accuracy1:100.0, accuracy2:25.486379861831665, accuracy3:100.0, loss:0.4580768942832947
10-> accuracy1:100.0, accuracy2:25.437742471694946, accuracy3:100.0, loss:0.4612349271774292
20-> accuracy1:100.0, accuracy2:25.097274780273438, accuracy3:100.0, loss:0.46420013904571533
30-> accuracy1:100.0, accuracy2:24.902723729610443, accuracy3:100.0, loss:0.4671379625797272
40-> accuracy1:100.0, accuracy2:24.805447459220886, accuracy3:100.0, loss:0.46992942690849304
50-> accuracy1:100.0, accuracy2:24.65953379869461, accuracy3:100.0, loss:0.47255468368530273
60-> accuracy1:100.0, accuracy2:24.513618648052216, accuracy3:100.0, loss:0.47525566816329956
70-> accuracy1:100.0, accuracy2:24.270428717136383, accuracy3:100.0, loss:0.4780850112438202
80-> accuracy1:100.0, accuracy2:24.173152446746826, accuracy3:100.0, loss:0.48083221912384033
90-> accuracy1:100.0, accuracy2:23.881323635578156, accuracy3:100.0, loss:0.4835376739501953
B(x) = 0.00249937012291263*x1**4 + 0.00665304193225856*x1**3*x2 + 0.0181942484423747*x1**3 + 0.00826315881497743*x1**2*x2**2 + 0.0205919559317741*x1**2*x2 + 0.102602614007939*x1**2 + 0.0121939749673017*x1*x2**3 + 0.0473935803309692*x1*x2**2 + 0.0512030701298144*x1*x2 - 0.380123462227415*x1 + 0.00243117467343173*x2**4 + 0.00081050805740915*x2**3 - 0.00092083569765384*x2**2 + 0.41605025521506*x2 + 0.0638513576419677
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:15
0-> accuracy1:100.0, accuracy2:22.588126361370087, accuracy3:100.0, loss:0.5008917450904846
10-> accuracy1:100.0, accuracy2:22.309833765029907, accuracy3:100.0, loss:0.503424882888794
20-> accuracy1:100.0, accuracy2:22.217068076133728, accuracy3:100.0, loss:0.5059664249420166
30-> accuracy1:100.0, accuracy2:22.03153967857361, accuracy3:100.0, loss:0.5084226727485657
40-> accuracy1:100.0, accuracy2:21.89239263534546, accuracy3:100.0, loss:0.5108394026756287
50-> accuracy1:100.0, accuracy2:21.7996284365654, accuracy3:100.0, loss:0.5131877660751343
60-> accuracy1:100.0, accuracy2:21.61410003900528, accuracy3:100.0, loss:0.5154096484184265
70-> accuracy1:100.0, accuracy2:21.42857164144516, accuracy3:100.0, loss:0.5174365639686584
80-> accuracy1:100.0, accuracy2:21.38218879699707, accuracy3:100.0, loss:0.5193895697593689
90-> accuracy1:100.0, accuracy2:21.3358074426651, accuracy3:100.0, loss:0.5211310386657715
B(x) = 0.00179481498499086*x1**4 + 0.00321685591015722*x1**3*x2 + 0.0114467785752512*x1**3 + 0.00368770793761299*x1**2*x2**2 + 0.00937458748260564*x1**2*x2 + 0.0941035552608405*x1**2 + 0.00717999770950343*x1*x2**3 + 0.0281117973582523*x1*x2**2 + 0.0258636017832493*x1*x2 - 0.34196717827104*x1 + 0.00124388225815803*x2**4 - 0.000185756517083617*x2**3 + 0.000552067233890007*x2**2 + 0.434662354376774*x2 + 0.0563643940678578
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:16
0-> accuracy1:100.0, accuracy2:20.257091522216797, accuracy3:100.0, loss:0.5348728895187378
10-> accuracy1:100.0, accuracy2:20.257091522216797, accuracy3:100.0, loss:0.5358887910842896
20-> accuracy1:100.0, accuracy2:20.212766528129578, accuracy3:100.0, loss:0.536726176738739
30-> accuracy1:100.0, accuracy2:20.257091522216797, accuracy3:100.0, loss:0.5374195575714111
40-> accuracy1:100.0, accuracy2:20.212766528129578, accuracy3:100.0, loss:0.5379149317741394
50-> accuracy1:100.0, accuracy2:20.257091522216797, accuracy3:100.0, loss:0.5381301045417786
60-> accuracy1:100.0, accuracy2:20.212766528129578, accuracy3:100.0, loss:0.5379834771156311
70-> accuracy1:100.0, accuracy2:20.257091522216797, accuracy3:100.0, loss:0.5374873876571655
80-> accuracy1:100.0, accuracy2:20.301418006420135, accuracy3:100.0, loss:0.5367116332054138
90-> accuracy1:100.0, accuracy2:20.345744490623474, accuracy3:100.0, loss:0.5357531309127808
B(x) = 0.00176202187130797*x1**4 + 0.00169570216823223*x1**3*x2 + 0.00913035796585079*x1**3 + 0.00089827557012398*x1**2*x2**2 + 0.0040567763542411*x1**2*x2 + 0.132737523167239*x1**2 + 0.004540038684023*x1*x2**3 + 0.019022454060681*x1*x2**2 + 0.00936212220606131*x1*x2 - 0.329774333893364*x1 + 0.000645475320262721*x2**4 - 0.000331871111770356*x2**3 + 0.00292901881955057*x2**2 + 0.458489000223094*x2 + 0.0408790720467447
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:17
0-> accuracy1:100.0, accuracy2:19.52461749315262, accuracy3:100.0, loss:0.5416470170021057
10-> accuracy1:100.0, accuracy2:19.77928727865219, accuracy3:100.0, loss:0.5395912528038025
20-> accuracy1:100.0, accuracy2:19.906620681285858, accuracy3:100.0, loss:0.5372456908226013
30-> accuracy1:100.0, accuracy2:20.331069827079773, accuracy3:100.0, loss:0.5348597764968872
40-> accuracy1:100.0, accuracy2:20.45840471982956, accuracy3:100.0, loss:0.5326122045516968
50-> accuracy1:100.0, accuracy2:20.75551748275757, accuracy3:100.0, loss:0.5303910374641418
60-> accuracy1:100.0, accuracy2:21.179966628551483, accuracy3:100.0, loss:0.5279579758644104
70-> accuracy1:100.0, accuracy2:21.39219045639038, accuracy3:100.0, loss:0.5255076885223389
80-> accuracy1:100.0, accuracy2:21.60441428422928, accuracy3:100.0, loss:0.5231919884681702
90-> accuracy1:100.0, accuracy2:21.77419364452362, accuracy3:100.0, loss:0.5209478735923767
B(x) = 0.00223338494348803*x1**4 + 0.00109223107873292*x1**3*x2 + 0.00921829951427706*x1**3 - 0.00204031776069136*x1**2*x2**2 + 0.000410992528547896*x1**2*x2 + 0.274206309440012*x1**2 + 0.00214992509853942*x1*x2**3 + 0.0139023692697044*x1*x2**2 + 0.0293796911471202*x1*x2 - 0.406257550094792*x1 + 0.000392171110147757*x2**4 + 0.000216733332668897*x2**3 + 0.0022742843774025*x2**2 + 0.442847672427726*x2 + 0.0108231582420102
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:18
0-> accuracy1:100.0, accuracy2:21.213355660438538, accuracy3:100.0, loss:0.555568277835846
10-> accuracy1:100.0, accuracy2:21.335504949092865, accuracy3:100.0, loss:0.5538905262947083
20-> accuracy1:99.1304337978363, accuracy2:21.335504949092865, accuracy3:100.0, loss:0.552110493183136
30-> accuracy1:100.0, accuracy2:21.335504949092865, accuracy3:100.0, loss:0.5504181981086731
40-> accuracy1:100.0, accuracy2:21.416938304901123, accuracy3:100.0, loss:0.5486456751823425
50-> accuracy1:100.0, accuracy2:21.53908759355545, accuracy3:100.0, loss:0.5469968318939209
60-> accuracy1:100.0, accuracy2:21.62052094936371, accuracy3:100.0, loss:0.5452924966812134
70-> accuracy1:100.0, accuracy2:21.98697030544281, accuracy3:100.0, loss:0.5433997511863708
80-> accuracy1:100.0, accuracy2:22.109121084213257, accuracy3:100.0, loss:0.5412071943283081
90-> accuracy1:100.0, accuracy2:22.271986305713654, accuracy3:100.0, loss:0.538628876209259
B(x) = 0.00151318092330095*x1**4 + 0.000922527410816981*x1**3*x2 + 0.00661057154958282*x1**3 - 0.00331107010307692*x1**2*x2**2 - 0.000958092394510526*x1**2*x2 + 0.327501006213609*x1**2 - 0.00167230668684767*x1*x2**3 + 0.00826847719460803*x1*x2**2 + 0.212492889966972*x1*x2 - 0.401133759124209*x1 + 1.06591888466245e-5*x2**4 + 0.00106140897551169*x2**3 + 0.0201315378224258*x2**2 + 0.408025351604528*x2 + 0.0362585153142743
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 88 counterexamples!
iter:19
0-> accuracy1:100.0, accuracy2:21.698112785816193, accuracy3:100.0, loss:0.5458458662033081
10-> accuracy1:100.0, accuracy2:21.816037595272064, accuracy3:100.0, loss:0.5424672961235046
20-> accuracy1:100.0, accuracy2:22.051887214183807, accuracy3:100.0, loss:0.5384737849235535
30-> accuracy1:100.0, accuracy2:22.16981202363968, accuracy3:100.0, loss:0.5346136689186096
40-> accuracy1:99.75154995918274, accuracy2:22.3270446062088, accuracy3:100.0, loss:0.5309750437736511
50-> accuracy1:98.01242351531982, accuracy2:22.523584961891174, accuracy3:100.0, loss:0.5275981426239014
60-> accuracy1:97.01863527297974, accuracy2:23.349057137966156, accuracy3:100.0, loss:0.524390459060669
70-> accuracy1:96.64596319198608, accuracy2:24.29245263338089, accuracy3:100.0, loss:0.5214222073554993
80-> accuracy1:95.90061902999878, accuracy2:25.0, accuracy3:100.0, loss:0.5189719796180725
90-> accuracy1:95.77639698982239, accuracy2:25.353774428367615, accuracy3:100.0, loss:0.5170640349388123
B(x) = 0.00168555258601266*x1**4 + 0.000851814816452693*x1**3*x2 + 0.0077464883196719*x1**3 - 0.00685263204238824*x1**2*x2**2 - 0.00670949961577056*x1**2*x2 + 0.737447355311977*x1**2 - 0.00398763492377313*x1*x2**3 + 0.00752481207923656*x1*x2**2 + 0.406942739004709*x1*x2 - 0.599602074904782*x1 - 0.000358041935335742*x2**4 + 0.00115104114270138*x2**3 + 0.0425495681225887*x2**2 + 0.323643094919348*x2 - 0.0182561436762672
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:20
0-> accuracy1:96.02484703063965, accuracy2:24.357034265995026, accuracy3:100.0, loss:0.5584542751312256
10-> accuracy1:94.7826087474823, accuracy2:23.146747052669525, accuracy3:100.0, loss:0.5533651113510132
20-> accuracy1:95.652174949646, accuracy2:22.31467515230179, accuracy3:100.0, loss:0.548414409160614
30-> accuracy1:97.63975143432617, accuracy2:22.541603446006775, accuracy3:100.0, loss:0.5442452430725098
40-> accuracy1:100.0, accuracy2:22.541603446006775, accuracy3:100.0, loss:0.5405016541481018
50-> accuracy1:100.0, accuracy2:22.617246210575104, accuracy3:100.0, loss:0.5369141697883606
60-> accuracy1:100.0, accuracy2:22.957639396190643, accuracy3:100.0, loss:0.5330141186714172
70-> accuracy1:100.0, accuracy2:24.281391501426697, accuracy3:100.0, loss:0.5288212895393372
80-> accuracy1:100.0, accuracy2:25.983357429504395, accuracy3:100.0, loss:0.5240470170974731
90-> accuracy1:100.0, accuracy2:27.420574426651, accuracy3:100.0, loss:0.5186577439308167
B(x) = 0.000344772562666674*x1**4 + 0.00139895788732278*x1**3*x2 + 0.00768032807919893*x1**3 - 0.00667350862364576*x1**2*x2**2 - 0.013201142083167*x1**2*x2 + 0.879890158250565*x1**2 - 0.012269661314894*x1*x2**3 + 0.00624504912178766*x1*x2**2 + 1.06806080574668*x1*x2 - 0.473304730649449*x1 - 0.00277268653594549*x2**4 + 0.00272862244881526*x2**3 + 0.224153272719206*x2**2 + 0.338768399625924*x2 + 0.0486071142263211
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
Failed
Elapsed Time: 108.07237777602859
