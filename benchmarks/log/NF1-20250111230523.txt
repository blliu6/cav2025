{'batch_size': 1000, 'lr': np.float64(0.21999999999999997), 'loss_weight_continuous': (1, 1, 1), 'R_b': 0.4, 'margin': 0.4, 'DEG_continuous': [2, 4, 4, 2], 'learning_loops': 100, 'max_iter': 20, 'err': 0.02677454477719443}

Mosek can be used normally.
iter:1
0-> accuracy1:0.0, accuracy2:3.5999998450279236, accuracy3:0.0, loss:1.762656807899475
10-> accuracy1:91.90000295639038, accuracy2:96.20000123977661, accuracy3:89.70000147819519, loss:0.9565584063529968
20-> accuracy1:98.4000027179718, accuracy2:98.00000190734863, accuracy3:100.0, loss:0.5420005321502686
30-> accuracy1:100.0, accuracy2:99.19999837875366, accuracy3:100.0, loss:0.044323958456516266
40-> accuracy1:100.0, accuracy2:99.40000176429749, accuracy3:100.0, loss:0.035856086760759354
50-> accuracy1:100.0, accuracy2:98.7999975681305, accuracy3:100.0, loss:0.3331601619720459
60-> accuracy1:100.0, accuracy2:99.29999709129333, accuracy3:100.0, loss:0.0186990387737751
70-> accuracy1:100.0, accuracy2:99.6999979019165, accuracy3:100.0, loss:-0.0023665810003876686
80-> accuracy1:100.0, accuracy2:99.40000176429749, accuracy3:100.0, loss:0.01834861934185028
90-> accuracy1:100.0, accuracy2:98.90000224113464, accuracy3:100.0, loss:0.13161535561084747
B(x) = 111.552897417859*x1**4 + 525.958283905818*x1**3*x2 + 213.611711347353*x1**3 + 963.138047133912*x1**2*x2**2 + 637.705748602408*x1**2*x2 + 90.7011043888965*x1**2 + 820.402576373283*x1*x2**3 + 798.033019833505*x1*x2**2 + 173.679434289595*x1*x2 - 111.241848305091*x1 + 260.344588965146*x2**4 + 310.957556431789*x2**3 + 88.272594191656*x2**2 - 34.0089114973452*x2 - 1.51741355149897
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:2
0-> accuracy1:100.0, accuracy2:90.45454263687134, accuracy3:100.0, loss:0.7614527344703674
10-> accuracy1:97.60000109672546, accuracy2:99.54545497894287, accuracy3:100.0, loss:0.05557507276535034
20-> accuracy1:100.0, accuracy2:99.6363639831543, accuracy3:100.0, loss:0.01154397800564766
30-> accuracy1:100.0, accuracy2:99.72727298736572, accuracy3:100.0, loss:-0.002537742257118225
40-> accuracy1:100.0, accuracy2:99.6363639831543, accuracy3:100.0, loss:-0.005952710285782814
50-> accuracy1:100.0, accuracy2:99.72727298736572, accuracy3:100.0, loss:-0.009743952192366123
60-> accuracy1:100.0, accuracy2:99.72727298736572, accuracy3:100.0, loss:-0.011956727132201195
70-> accuracy1:100.0, accuracy2:99.81818199157715, accuracy3:100.0, loss:-0.013001905754208565
80-> accuracy1:100.0, accuracy2:99.81818199157715, accuracy3:100.0, loss:-0.013389792293310165
90-> accuracy1:100.0, accuracy2:99.81818199157715, accuracy3:100.0, loss:-0.01351428497582674
B(x) = 32.2469618779137*x1**4 + 164.060037408497*x1**3*x2 + 55.6031886182742*x1**3 + 302.259317936686*x1**2*x2**2 + 166.004399617822*x1**2*x2 + 37.1967389221414*x1**2 + 249.972525173914*x1*x2**3 + 199.941214577108*x1*x2**2 + 71.1240452264585*x1*x2 - 19.2436789081853*x1 + 78.4478779386047*x2**4 + 76.4686259702491*x2**3 + 26.6986186620728*x2**2 - 1.23279766612496*x2 - 2.36958866981158
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 98 counterexamples!
iter:3
0-> accuracy1:100.0, accuracy2:91.65275692939758, accuracy3:100.0, loss:0.10673823952674866
10-> accuracy1:98.4000027179718, accuracy2:89.56594467163086, accuracy3:98.7999975681305, loss:0.06134938821196556
20-> accuracy1:97.10000157356262, accuracy2:93.15525889396667, accuracy3:100.0, loss:0.05181735008955002
30-> accuracy1:97.89999723434448, accuracy2:92.48747825622559, accuracy3:100.0, loss:0.04832470044493675
40-> accuracy1:97.50000238418579, accuracy2:92.65442490577698, accuracy3:100.0, loss:0.04775018244981766
50-> accuracy1:97.39999771118164, accuracy2:92.23706126213074, accuracy3:100.0, loss:0.04686644300818443
60-> accuracy1:97.79999852180481, accuracy2:92.07011461257935, accuracy3:100.0, loss:0.04671164229512215
70-> accuracy1:98.00000190734863, accuracy2:92.07011461257935, accuracy3:100.0, loss:0.04639552906155586
80-> accuracy1:98.69999885559082, accuracy2:91.90317392349243, accuracy3:100.0, loss:0.04625657573342323
90-> accuracy1:98.50000143051147, accuracy2:91.8196976184845, accuracy3:100.0, loss:0.04621276631951332
B(x) = 11.5780818260055*x1**4 + 63.0721168598933*x1**3*x2 + 22.0940692164585*x1**3 + 118.399422245478*x1**2*x2**2 + 71.3717320772712*x1**2*x2 + 22.638310637921*x1**2 + 94.9972740077407*x1*x2**3 + 82.2969974156827*x1*x2**2 + 43.3763934325649*x1*x2 - 7.95529903319073*x1 + 28.5978745861618*x2**4 + 31.1175595194544*x2**3 + 17.1332303121051*x2**2 - 3.11009444439886*x2 - 0.369522885772196
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 95 counterexamples!
iter:4
0-> accuracy1:98.19999933242798, accuracy2:85.07347106933594, accuracy3:100.0, loss:0.09370443224906921
10-> accuracy1:97.29999899864197, accuracy2:85.3054940700531, accuracy3:100.0, loss:0.0916157141327858
20-> accuracy1:97.39999771118164, accuracy2:85.3054940700531, accuracy3:100.0, loss:0.09057102352380753
30-> accuracy1:97.50000238418579, accuracy2:85.3054940700531, accuracy3:100.0, loss:0.08969287574291229
40-> accuracy1:97.60000109672546, accuracy2:85.3054940700531, accuracy3:100.0, loss:0.08873474597930908
50-> accuracy1:98.00000190734863, accuracy2:85.38283109664917, accuracy3:100.0, loss:0.08782203495502472
60-> accuracy1:97.39999771118164, accuracy2:85.46016812324524, accuracy3:100.0, loss:0.08801636844873428
70-> accuracy1:97.89999723434448, accuracy2:85.53751111030579, accuracy3:100.0, loss:0.08706965297460556
80-> accuracy1:98.00000190734863, accuracy2:85.53751111030579, accuracy3:100.0, loss:0.08632537722587585
90-> accuracy1:98.00000190734863, accuracy2:85.61484813690186, accuracy3:100.0, loss:0.0862397626042366
B(x) = 6.13520082595519*x1**4 + 40.1819269034493*x1**3*x2 + 14.6501856099436*x1**3 + 78.8519712150798*x1**2*x2**2 + 48.6802065310649*x1**2*x2 + 31.5274324397685*x1**2 + 60.7425522161893*x1*x2**3 + 58.272985268308*x1*x2**2 + 62.0743908358286*x1*x2 - 8.52363484956057*x1 + 16.9713881205057*x2**4 + 22.5632935101796*x2**3 + 26.4931625068676*x2**2 - 3.612673308793*x2 - 0.428713803203375
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 84 counterexamples!
iter:5
0-> accuracy1:97.89999723434448, accuracy2:80.46478033065796, accuracy3:100.0, loss:0.12035444378852844
10-> accuracy1:96.70000076293945, accuracy2:80.61001896858215, accuracy3:100.0, loss:0.119705431163311
20-> accuracy1:97.29999899864197, accuracy2:80.39215803146362, accuracy3:100.0, loss:0.12028355151414871
30-> accuracy1:97.2000002861023, accuracy2:80.61001896858215, accuracy3:100.0, loss:0.11899834871292114
40-> accuracy1:97.69999980926514, accuracy2:80.61001896858215, accuracy3:100.0, loss:0.11866878718137741
50-> accuracy1:96.79999947547913, accuracy2:80.68264126777649, accuracy3:100.0, loss:0.1174992248415947
60-> accuracy1:97.79999852180481, accuracy2:80.5374026298523, accuracy3:100.0, loss:0.11766231060028076
70-> accuracy1:96.8999981880188, accuracy2:80.82788586616516, accuracy3:100.0, loss:0.11637391149997711
80-> accuracy1:97.2000002861023, accuracy2:80.97313046455383, accuracy3:100.0, loss:0.11532454192638397
90-> accuracy1:97.00000286102295, accuracy2:80.97313046455383, accuracy3:100.0, loss:0.11526728421449661
B(x) = 1.93300486403984*x1**4 + 24.1189443981637*x1**3*x2 + 3.74671405795305*x1**3 + 52.9358944952356*x1**2*x2**2 + 20.5678616386064*x1**2*x2 + 40.6475240925346*x1**2 + 40.709660120941*x1*x2**3 + 35.4337770685308*x1*x2**2 + 78.2639820101864*x1*x2 - 8.71976091028686*x1 + 11.1116466501176*x2**4 + 16.6080630431212*x2**3 + 33.2505077768553*x2**2 - 3.24867569464233*x2 - 0.610252568395372
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 75 counterexamples!
iter:6
0-> accuracy1:97.50000238418579, accuracy2:76.79063081741333, accuracy3:100.0, loss:0.14168678224086761
10-> accuracy1:97.2000002861023, accuracy2:76.99724435806274, accuracy3:100.0, loss:0.14109820127487183
20-> accuracy1:95.59999704360962, accuracy2:77.06611752510071, accuracy3:98.69999885559082, loss:0.14918924868106842
30-> accuracy1:96.60000205039978, accuracy2:76.79063081741333, accuracy3:100.0, loss:0.1433289498090744
40-> accuracy1:96.70000076293945, accuracy2:76.79063081741333, accuracy3:100.0, loss:0.14432524144649506
50-> accuracy1:95.80000042915344, accuracy2:76.99724435806274, accuracy3:100.0, loss:0.14408276975154877
60-> accuracy1:94.0999984741211, accuracy2:77.75481939315796, accuracy3:100.0, loss:0.14425994455814362
70-> accuracy1:94.70000267028809, accuracy2:78.16804647445679, accuracy3:100.0, loss:0.1438719481229782
80-> accuracy1:94.59999799728394, accuracy2:76.79063081741333, accuracy3:100.0, loss:0.14683926105499268
90-> accuracy1:95.59999704360962, accuracy2:77.4104654788971, accuracy3:100.0, loss:0.14208468794822693
B(x) = 1.66289558490968*x1**4 + 10.9444058655261*x1**3*x2 + 3.81607310071203*x1**3 + 20.8288587220015*x1**2*x2**2 + 15.5413893576561*x1**2*x2 + 21.9084779879868*x1**2 + 13.0829176076524*x1*x2**3 + 25.4592262607592*x1*x2**2 + 39.6680107496676*x1*x2 - 7.01108935778737*x1 + 3.61849986072916*x2**4 + 7.75421452496002*x2**3 + 8.7050772043417*x2**2 + 6.72405943766384*x2 - 2.81788014122246
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 67 counterexamples!
Add 100 counterexamples!
iter:7
0-> accuracy1:80.78725337982178, accuracy2:70.61855792999268, accuracy3:100.0, loss:0.39294683933258057
10-> accuracy1:100.0, accuracy2:62.822163105010986, accuracy3:95.89999914169312, loss:0.23606574535369873
20-> accuracy1:100.0, accuracy2:63.14433217048645, accuracy3:100.0, loss:0.2142462432384491
30-> accuracy1:100.0, accuracy2:63.273197412490845, accuracy3:100.0, loss:0.1897430121898651
40-> accuracy1:100.0, accuracy2:63.33763003349304, accuracy3:100.0, loss:0.16334326565265656
50-> accuracy1:100.0, accuracy2:73.00257682800293, accuracy3:100.0, loss:0.11180627346038818
60-> accuracy1:100.0, accuracy2:92.65463948249817, accuracy3:100.0, loss:0.051345035433769226
70-> accuracy1:100.0, accuracy2:92.52577424049377, accuracy3:100.0, loss:0.05006648600101471
80-> accuracy1:100.0, accuracy2:92.65463948249817, accuracy3:100.0, loss:0.0487239807844162
90-> accuracy1:100.0, accuracy2:92.71907210350037, accuracy3:100.0, loss:0.0463542714715004
B(x) = 0.27952605842005*x1**4 + 1.79721087264607*x1**3*x2 + 0.732985486340745*x1**3 + 3.12109844173983*x1**2*x2**2 + 1.44649903710854*x1**2*x2 + 2.30476449510552*x1**2 + 1.95419216481923*x1*x2**3 + 3.94911336677769*x1*x2**2 + 3.98419800406457*x1*x2 - 2.34954029650934*x1 + 0.878998829861983*x2**4 + 1.21828847820573*x2**3 + 0.529458964104141*x2**2 + 0.595643126672178*x2 + 1.04628686910256
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:8
0-> accuracy1:100.0, accuracy2:87.10653781890869, accuracy3:100.0, loss:0.11226338893175125
10-> accuracy1:100.0, accuracy2:87.22760081291199, accuracy3:100.0, loss:0.10151469707489014
20-> accuracy1:100.0, accuracy2:86.86440587043762, accuracy3:100.0, loss:0.09788104891777039
30-> accuracy1:100.0, accuracy2:86.86440587043762, accuracy3:100.0, loss:0.0947527214884758
40-> accuracy1:100.0, accuracy2:86.80387139320374, accuracy3:100.0, loss:0.09607759118080139
50-> accuracy1:100.0, accuracy2:86.80387139320374, accuracy3:100.0, loss:0.09592606872320175
60-> accuracy1:100.0, accuracy2:86.62227392196655, accuracy3:100.0, loss:0.10422472655773163
70-> accuracy1:100.0, accuracy2:86.68280839920044, accuracy3:100.0, loss:0.0990491732954979
80-> accuracy1:100.0, accuracy2:86.56174540519714, accuracy3:100.0, loss:0.10280319303274155
90-> accuracy1:100.0, accuracy2:86.68280839920044, accuracy3:100.0, loss:0.09844403713941574
B(x) = 0.0665451303902115*x1**4 + 0.624834629274672*x1**3*x2 + 0.167565332627273*x1**3 + 0.753064797494603*x1**2*x2**2 + 0.31787911451278*x1**2*x2 + 1.1654792394684*x1**2 + 0.714864166014125*x1*x2**3 + 1.55626925665043*x1*x2**2 + 1.01974981659204*x1*x2 - 1.41591487712299*x1 + 0.407107894068323*x2**4 + 0.441192348272187*x2**3 + 0.519642625940874*x2**2 + 0.947846594144828*x2 + 0.529987324039418
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:9
0-> accuracy1:100.0, accuracy2:81.79223537445068, accuracy3:100.0, loss:0.13369135558605194
10-> accuracy1:100.0, accuracy2:81.79223537445068, accuracy3:100.0, loss:0.13232286274433136
20-> accuracy1:100.0, accuracy2:81.73515796661377, accuracy3:100.0, loss:0.1316900998353958
30-> accuracy1:100.0, accuracy2:81.50684833526611, accuracy3:100.0, loss:0.1465839445590973
40-> accuracy1:100.0, accuracy2:81.22146129608154, accuracy3:100.0, loss:0.15200647711753845
50-> accuracy1:100.0, accuracy2:81.62100315093994, accuracy3:100.0, loss:0.14031635224819183
60-> accuracy1:100.0, accuracy2:81.79223537445068, accuracy3:100.0, loss:0.14053378999233246
70-> accuracy1:100.0, accuracy2:81.73515796661377, accuracy3:100.0, loss:0.1364680379629135
80-> accuracy1:100.0, accuracy2:81.67808055877686, accuracy3:100.0, loss:0.13626739382743835
90-> accuracy1:100.0, accuracy2:81.79223537445068, accuracy3:100.0, loss:0.1360653191804886
B(x) = 0.0506869882351971*x1**4 + 0.187613067251529*x1**3*x2 + 0.199989664077635*x1**3 + 0.513497826544983*x1**2*x2**2 + 0.118545819079884*x1**2*x2 + 0.648937072158968*x1**2 + 0.447369783502066*x1*x2**3 + 0.682343486124894*x1*x2**2 + 0.883425079686341*x1*x2 - 0.992760433821787*x1 + 0.197869325863637*x2**4 + 0.147728947881937*x2**3 + 0.717039566365167*x2**2 + 1.07464414409525*x2 + 0.430088510163906
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:10
0-> accuracy1:100.0, accuracy2:77.32181549072266, accuracy3:100.0, loss:0.1720043420791626
10-> accuracy1:100.0, accuracy2:77.37581133842468, accuracy3:100.0, loss:0.17045356333255768
20-> accuracy1:100.0, accuracy2:77.10583209991455, accuracy3:100.0, loss:0.1761695295572281
30-> accuracy1:100.0, accuracy2:77.10583209991455, accuracy3:100.0, loss:0.17674148082733154
40-> accuracy1:100.0, accuracy2:76.88984870910645, accuracy3:100.0, loss:0.17744271457195282
50-> accuracy1:100.0, accuracy2:77.10583209991455, accuracy3:100.0, loss:0.17534825205802917
60-> accuracy1:100.0, accuracy2:77.15982794761658, accuracy3:100.0, loss:0.17280793190002441
70-> accuracy1:100.0, accuracy2:77.32181549072266, accuracy3:100.0, loss:0.17459695041179657
80-> accuracy1:100.0, accuracy2:77.26781964302063, accuracy3:100.0, loss:0.17216983437538147
90-> accuracy1:100.0, accuracy2:77.10583209991455, accuracy3:100.0, loss:0.17115573585033417
B(x) = 0.0267577276635738*x1**4 + 0.148473444885565*x1**3*x2 + 0.0815724164307958*x1**3 + 0.285366571771558*x1**2*x2**2 + 0.0191047767112025*x1**2*x2 + 0.862376980619272*x1**2 + 0.236275431754238*x1*x2**3 + 0.558458841797106*x1*x2**2 + 0.701393075604182*x1*x2 - 1.11295977564028*x1 + 0.107535659805501*x2**4 + 0.0324949748919167*x2**3 + 0.718401998151018*x2**2 + 1.12561511494636*x2 + 0.416584278395916
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:11
0-> accuracy1:100.0, accuracy2:73.25819730758667, accuracy3:100.0, loss:0.20151078701019287
10-> accuracy1:100.0, accuracy2:73.10450673103333, accuracy3:100.0, loss:0.20163701474666595
20-> accuracy1:100.0, accuracy2:73.10450673103333, accuracy3:100.0, loss:0.1990853250026703
30-> accuracy1:100.0, accuracy2:72.89959192276001, accuracy3:100.0, loss:0.20187224447727203
40-> accuracy1:100.0, accuracy2:72.84836173057556, accuracy3:100.0, loss:0.20341606438159943
50-> accuracy1:100.0, accuracy2:72.02869057655334, accuracy3:100.0, loss:0.2251112461090088
60-> accuracy1:100.0, accuracy2:73.20696711540222, accuracy3:100.0, loss:0.21779394149780273
70-> accuracy1:100.0, accuracy2:73.30942749977112, accuracy3:100.0, loss:0.21175380051136017
80-> accuracy1:100.0, accuracy2:73.05327653884888, accuracy3:100.0, loss:0.20762860774993896
90-> accuracy1:100.0, accuracy2:73.00204634666443, accuracy3:100.0, loss:0.20452654361724854
B(x) = 0.0145455772162327*x1**4 + 0.0636821535781151*x1**3*x2 + 0.087682756041957*x1**3 + 0.174903280722186*x1**2*x2**2 - 0.0657328466974861*x1**2*x2 + 0.600376411139756*x1**2 + 0.126577006213959*x1*x2**3 + 0.349120214217625*x1*x2**2 + 0.674544145559901*x1*x2 - 1.00493217411899*x1 + 0.0580364796052493*x2**4 - 0.0109550387449139*x2**3 + 0.672782847448847*x2**2 + 1.13303620859286*x2 + 0.388439990988173
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:12
0-> accuracy1:100.0, accuracy2:69.1033124923706, accuracy3:100.0, loss:0.2543705105781555
10-> accuracy1:100.0, accuracy2:69.24951076507568, accuracy3:100.0, loss:0.24150119721889496
20-> accuracy1:100.0, accuracy2:69.49317455291748, accuracy3:100.0, loss:0.23950956761837006
30-> accuracy1:100.0, accuracy2:69.39570903778076, accuracy3:100.0, loss:0.23158937692642212
40-> accuracy1:100.0, accuracy2:69.3469762802124, accuracy3:100.0, loss:0.23517929017543793
50-> accuracy1:100.0, accuracy2:69.39570903778076, accuracy3:100.0, loss:0.22923783957958221
60-> accuracy1:100.0, accuracy2:69.29824352264404, accuracy3:100.0, loss:0.2441561222076416
70-> accuracy1:100.0, accuracy2:69.44444179534912, accuracy3:100.0, loss:0.23563095927238464
80-> accuracy1:100.0, accuracy2:69.29824352264404, accuracy3:100.0, loss:0.23516745865345
90-> accuracy1:100.0, accuracy2:69.44444179534912, accuracy3:100.0, loss:0.23265889286994934
B(x) = 0.00856710649436241*x1**4 + 0.0519728588665437*x1**3*x2 + 0.0342553461234789*x1**3 + 0.0973364164601213*x1**2*x2**2 - 0.111112455777666*x1**2*x2 + 0.756401313379147*x1**2 + 0.0701942500025187*x1*x2**3 + 0.280070828863494*x1*x2**2 + 0.585087247417032*x1*x2 - 1.00873317056751*x1 + 0.0229349922425806*x2**4 - 0.0310226692905664*x2**3 + 0.684772798292296*x2**2 + 1.00682999074518*x2 + 0.34564546116822
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:13
0-> accuracy1:100.0, accuracy2:66.17100238800049, accuracy3:100.0, loss:0.2566693425178528
10-> accuracy1:100.0, accuracy2:65.98513126373291, accuracy3:100.0, loss:0.25687190890312195
20-> accuracy1:100.0, accuracy2:65.75278639793396, accuracy3:100.0, loss:0.2558853030204773
30-> accuracy1:100.0, accuracy2:66.0780668258667, accuracy3:100.0, loss:0.2534463107585907
40-> accuracy1:100.0, accuracy2:66.0780668258667, accuracy3:99.40000176429749, loss:0.2751728296279907
50-> accuracy1:100.0, accuracy2:66.26393795013428, accuracy3:100.0, loss:0.2686816155910492
60-> accuracy1:100.0, accuracy2:66.1245346069336, accuracy3:100.0, loss:0.26217198371887207
70-> accuracy1:100.0, accuracy2:65.89219570159912, accuracy3:100.0, loss:0.26316389441490173
80-> accuracy1:100.0, accuracy2:66.1245346069336, accuracy3:100.0, loss:0.2574823796749115
90-> accuracy1:100.0, accuracy2:66.17100238800049, accuracy3:100.0, loss:0.25668367743492126
B(x) = 0.00626981919739875*x1**4 + 0.0242810410050531*x1**3*x2 + 0.0231877648893951*x1**3 + 0.0664824562555422*x1**2*x2**2 - 0.0767629643571733*x1**2*x2 + 0.678331631891011*x1**2 + 0.0194219908266483*x1*x2**3 + 0.234503648611548*x1*x2**2 + 0.635062326427905*x1*x2 - 0.839670660909418*x1 + 0.0250130603976147*x2**4 - 0.0775750817649093*x2**3 + 0.659436034713308*x2**2 + 1.14260643338759*x2 + 0.371756110422134
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:14
0-> accuracy1:100.0, accuracy2:63.099467754364014, accuracy3:100.0, loss:0.2836408019065857
10-> accuracy1:100.0, accuracy2:63.321489095687866, accuracy3:100.0, loss:0.2797927260398865
20-> accuracy1:100.0, accuracy2:63.099467754364014, accuracy3:100.0, loss:0.2864478528499603
30-> accuracy1:100.0, accuracy2:63.321489095687866, accuracy3:100.0, loss:0.2807497978210449
40-> accuracy1:100.0, accuracy2:63.05506229400635, accuracy3:100.0, loss:0.2830940783023834
50-> accuracy1:100.0, accuracy2:63.188278675079346, accuracy3:100.0, loss:0.2802284061908722
60-> accuracy1:100.0, accuracy2:63.099467754364014, accuracy3:100.0, loss:0.27865949273109436
70-> accuracy1:100.0, accuracy2:63.099467754364014, accuracy3:100.0, loss:0.2906250059604645
80-> accuracy1:100.0, accuracy2:63.27708959579468, accuracy3:100.0, loss:0.280901163816452
90-> accuracy1:100.0, accuracy2:63.01065683364868, accuracy3:100.0, loss:0.27871036529541016
B(x) = 0.00658486437526487*x1**4 + 0.02434359372659*x1**3*x2 - 0.0570195519752272*x1**3 + 0.0186960961165351*x1**2*x2**2 - 0.0404558211865872*x1**2*x2 + 0.800200786135074*x1**2 + 0.0188290320642937*x1*x2**3 + 0.287845107312265*x1*x2**2 + 0.563684952894487*x1*x2 - 0.887194207822431*x1 + 0.0118960388583118*x2**4 - 0.101749537671025*x2**3 + 0.625390723284574*x2**2 + 1.07821548507204*x2 + 0.353285099596144
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:15
0-> accuracy1:100.0, accuracy2:60.41666865348816, accuracy3:100.0, loss:0.29906877875328064
10-> accuracy1:100.0, accuracy2:60.28911471366882, accuracy3:100.0, loss:0.3020426630973816
20-> accuracy1:100.0, accuracy2:60.33163070678711, accuracy3:100.0, loss:0.29809457063674927
30-> accuracy1:100.0, accuracy2:60.076528787612915, accuracy3:100.0, loss:0.3151699900627136
40-> accuracy1:100.0, accuracy2:60.459184646606445, accuracy3:100.0, loss:0.3040916323661804
50-> accuracy1:100.0, accuracy2:60.41666865348816, accuracy3:100.0, loss:0.3106112480163574
60-> accuracy1:100.0, accuracy2:60.586732625961304, accuracy3:100.0, loss:0.30721816420555115
70-> accuracy1:100.0, accuracy2:60.41666865348816, accuracy3:100.0, loss:0.29955950379371643
80-> accuracy1:100.0, accuracy2:60.41666865348816, accuracy3:100.0, loss:0.30071473121643066
90-> accuracy1:100.0, accuracy2:60.24659872055054, accuracy3:100.0, loss:0.30573055148124695
B(x) = 0.00523787985376483*x1**4 + 0.00830764059392011*x1**3*x2 - 0.10100554174741*x1**3 + 0.00935204337913085*x1**2*x2**2 - 0.000810377857637424*x1**2*x2 + 0.921871100845139*x1**2 + 0.0351827069162963*x1*x2**3 + 0.338520933235148*x1*x2**2 + 0.515581491528214*x1*x2 - 0.935919742660287*x1 - 0.00168612697141384*x2**4 - 0.0909320853560167*x2**3 + 0.630908154020208*x2**2 + 1.09895226523098*x2 + 0.308450878523476
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:16
0-> accuracy1:100.0, accuracy2:57.871127128601074, accuracy3:100.0, loss:0.3211219906806946
10-> accuracy1:100.0, accuracy2:57.9119086265564, accuracy3:100.0, loss:0.31473496556282043
20-> accuracy1:100.0, accuracy2:57.78955817222595, accuracy3:100.0, loss:0.31316903233528137
30-> accuracy1:100.0, accuracy2:57.54486322402954, accuracy3:100.0, loss:0.3295632004737854
40-> accuracy1:100.0, accuracy2:57.9119086265564, accuracy3:100.0, loss:0.33034926652908325
50-> accuracy1:100.0, accuracy2:57.78955817222595, accuracy3:100.0, loss:0.3176668882369995
60-> accuracy1:100.0, accuracy2:57.70799517631531, accuracy3:100.0, loss:0.3141065537929535
70-> accuracy1:100.0, accuracy2:57.95269012451172, accuracy3:100.0, loss:0.31231099367141724
80-> accuracy1:100.0, accuracy2:57.74877667427063, accuracy3:100.0, loss:0.33557581901550293
90-> accuracy1:100.0, accuracy2:57.99347758293152, accuracy3:100.0, loss:0.32327935099601746
B(x) = -0.00050190259037427*x1**4 + 0.00204439018878714*x1**3*x2 - 0.0754449887345286*x1**3 + 0.0163804402585365*x1**2*x2**2 - 0.0531268781904798*x1**2*x2 + 0.800886112009414*x1**2 + 0.0184280040047982*x1*x2**3 + 0.321659996731996*x1*x2**2 + 0.528362393623326*x1*x2 - 0.928066060730035*x1 + 0.000304775987960592*x2**4 - 0.0430507024265223*x2**3 + 0.436631032215162*x2**2 + 0.871403713225584*x2 + 0.350726456341582
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:17
0-> accuracy1:100.0, accuracy2:55.4858922958374, accuracy3:100.0, loss:0.33677756786346436
10-> accuracy1:100.0, accuracy2:55.603450536727905, accuracy3:100.0, loss:0.335831880569458
20-> accuracy1:100.0, accuracy2:55.68181872367859, accuracy3:100.0, loss:0.3327888548374176
30-> accuracy1:100.0, accuracy2:55.603450536727905, accuracy3:100.0, loss:0.33467382192611694
40-> accuracy1:100.0, accuracy2:55.564260482788086, accuracy3:100.0, loss:0.3390182554721832
50-> accuracy1:100.0, accuracy2:55.799371004104614, accuracy3:100.0, loss:0.3404076099395752
60-> accuracy1:100.0, accuracy2:55.68181872367859, accuracy3:100.0, loss:0.3362019956111908
70-> accuracy1:100.0, accuracy2:55.44670820236206, accuracy3:100.0, loss:0.33472940325737
80-> accuracy1:100.0, accuracy2:55.525076389312744, accuracy3:100.0, loss:0.33371248841285706
90-> accuracy1:100.0, accuracy2:55.838555097579956, accuracy3:100.0, loss:0.34144067764282227
B(x) = -0.000627532096869891*x1**4 - 0.00536102717892002*x1**3*x2 + 0.0173944214342806*x1**3 + 0.0567066012650043*x1**2*x2**2 - 0.198053496545647*x1**2*x2 + 0.712286958060175*x1**2 - 0.0522595400056476*x1*x2**3 + 0.328267599815024*x1*x2**2 + 0.682641967695339*x1*x2 - 0.971185907340589*x1 + 0.0131425566240637*x2**4 - 0.0992591496833353*x2**3 + 0.459695638120737*x2**2 + 0.922900426025506*x2 + 0.370111687830878
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:18
0-> accuracy1:100.0, accuracy2:53.58220338821411, accuracy3:100.0, loss:0.356705904006958
10-> accuracy1:100.0, accuracy2:53.28054428100586, accuracy3:100.0, loss:0.35351571440696716
20-> accuracy1:100.0, accuracy2:53.24283838272095, accuracy3:100.0, loss:0.35497501492500305
30-> accuracy1:100.0, accuracy2:53.4690797328949, accuracy3:100.0, loss:0.3535915017127991
40-> accuracy1:100.0, accuracy2:53.50678563117981, accuracy3:100.0, loss:0.35036253929138184
50-> accuracy1:100.0, accuracy2:53.31825017929077, accuracy3:100.0, loss:0.3520371913909912
60-> accuracy1:100.0, accuracy2:52.149319648742676, accuracy3:100.0, loss:0.3520641624927521
70-> accuracy1:100.0, accuracy2:53.31825017929077, accuracy3:100.0, loss:0.3649710416793823
80-> accuracy1:100.0, accuracy2:53.24283838272095, accuracy3:100.0, loss:0.3575553297996521
90-> accuracy1:100.0, accuracy2:53.28054428100586, accuracy3:100.0, loss:0.3521583676338196
B(x) = -0.00285712554500591*x1**4 + 0.0243864145922999*x1**3*x2 - 0.0299106237319107*x1**3 - 0.0222710424948179*x1**2*x2**2 - 0.0183607496180941*x1**2*x2 + 0.820513049086764*x1**2 - 0.000525036239362949*x1*x2**3 + 0.237374375529038*x1*x2**2 + 0.444786676751231*x1*x2 - 0.990264827408632*x1 - 0.0459801090809486*x2**4 - 0.0648980957057848*x2**3 + 0.69208051740802*x2**2 + 1.05254275841533*x2 + 0.37411674897299
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:19
0-> accuracy1:100.0, accuracy2:51.41715407371521, accuracy3:100.0, loss:0.3652956485748291
10-> accuracy1:100.0, accuracy2:51.344478130340576, accuracy3:100.0, loss:0.3656226694583893
20-> accuracy1:100.0, accuracy2:51.52616500854492, accuracy3:100.0, loss:0.36442112922668457
30-> accuracy1:100.0, accuracy2:51.5625, accuracy3:100.0, loss:0.3663533329963684
40-> accuracy1:100.0, accuracy2:51.489824056625366, accuracy3:100.0, loss:0.3683398365974426
50-> accuracy1:100.0, accuracy2:51.380813121795654, accuracy3:100.0, loss:0.36905306577682495
60-> accuracy1:100.0, accuracy2:51.45348906517029, accuracy3:100.0, loss:0.363778293132782
70-> accuracy1:100.0, accuracy2:51.489824056625366, accuracy3:100.0, loss:0.3664781153202057
80-> accuracy1:100.0, accuracy2:51.489824056625366, accuracy3:100.0, loss:0.3629979193210602
90-> accuracy1:100.0, accuracy2:51.635175943374634, accuracy3:100.0, loss:0.36564308404922485
B(x) = -0.00106272209566166*x1**4 + 0.0175790754280457*x1**3*x2 - 0.0321989935394339*x1**3 - 0.0198858478074861*x1**2*x2**2 - 0.0133938619984056*x1**2*x2 + 0.799884320469151*x1**2 - 0.0161815228600446*x1*x2**3 + 0.196801480926222*x1*x2**2 + 0.453314065320736*x1*x2 - 1.03246834785672*x1 - 0.0205995287365666*x2**4 - 0.0829219527140577*x2**3 + 0.455851836280284*x2**2 + 0.942984623805765*x2 + 0.443712776834058
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
iter:20
0-> accuracy1:100.0, accuracy2:49.5792418718338, accuracy3:100.0, loss:0.38641971349716187
10-> accuracy1:100.0, accuracy2:49.64936971664429, accuracy3:100.0, loss:0.3784394860267639
20-> accuracy1:100.0, accuracy2:49.64936971664429, accuracy3:100.0, loss:0.37641486525535583
30-> accuracy1:100.0, accuracy2:49.614304304122925, accuracy3:100.0, loss:0.3871738612651825
40-> accuracy1:100.0, accuracy2:49.43898916244507, accuracy3:100.0, loss:0.39088892936706543
50-> accuracy1:100.0, accuracy2:49.54417943954468, accuracy3:100.0, loss:0.3812156319618225
60-> accuracy1:100.0, accuracy2:49.47405457496643, accuracy3:100.0, loss:0.38215360045433044
70-> accuracy1:100.0, accuracy2:49.85974729061127, accuracy3:100.0, loss:0.38443905115127563
80-> accuracy1:100.0, accuracy2:49.68443214893341, accuracy3:100.0, loss:0.3831913471221924
90-> accuracy1:100.0, accuracy2:49.54417943954468, accuracy3:100.0, loss:0.38349804282188416
B(x) = -0.000465016910711271*x1**4 + 0.0187788622564204*x1**3*x2 - 0.0381421464599898*x1**3 - 0.0305714268628433*x1**2*x2**2 + 0.00480883080942719*x1**2*x2 + 0.782262826040982*x1**2 - 0.0122350501932111*x1*x2**3 + 0.189507308376001*x1*x2**2 + 0.38424944461374*x1*x2 - 0.875622984105007*x1 - 0.0381846795293772*x2**4 - 0.102967106572769*x2**3 + 0.556800355217675*x2**2 + 1.00958885748254*x2 + 0.320773186851196
Data successfully saved to ./output/NF1/init/Multiplier-1.json
Data successfully saved to ./output/NF1/init/Total Decomposition.json
Data successfully saved to ./output/NF1/unsafe/Multiplier-1.json
Data successfully saved to ./output/NF1/unsafe/Total Decomposition.json
Add 100 counterexamples!
Failed
Elapsed Time: 112.30860403319821
