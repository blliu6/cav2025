include("utils/util.jl")
include("utils/newtonUpdate.jl")
include("utils/rationalSOS.jl")

X = nothing
eig_tol = 1e-4
tol = 1e-50


SOS_time = 0
Newton_time = 0
function solve(n, X, f, Q, mono,newton)
    global SOS_time, Newton_time
    Q = round.(Q, digits=2)
    rQ = symplify_rational.(Q)

    model = nothing
    if !newton
        SOS_time+=@elapsed model = rational_SOS(f, 1, 0, mono, rQ)
    else
        Newton_time+=@elapsed update_Q = newton_refine_update(f, mono, Q, eig_tol, 90, tol, X)
        Q_res = symplify_rational.(update_Q*update_Q')
        SOS_time+=@elapsed model = rational_SOS(f, 1, 0, mono, Q_res)
    end
    
    SOSrational_time, coeffs, terms = model[2:end]
    
    @show expand(f-(coeffs' * terms.^2))

    data = Dict(
        "n" => n,
        "expression" => f,
        "coeff" => join([string(c) for c in coeffs], ","),
        "term" => join([string(t) for t in terms], ","),
        "SOSrational_time" => SOSrational_time,
        "SOS_expression" => string(coeffs' * terms.^2)
    )

    # save("src/output/data.json", data)    
end

n = 2
@Symbolics.variables X[1:n]

#C3
# init
## Multiplier-2
P0 = 2079*X[1]^2//625 - 61403*X[1]*X[2]//100000 - 15397*X[1]//10000 + 11189*X[2]^2//5000 - 9847*X[2]//50000 + 6111//500
M0 = [1, X[2], X[1]]
Q0 = [ 1.22e+01 -9.33e-02 -7.75e-01;
-9.33e-02  2.24e+00 -3.07e-01;
-7.75e-01 -3.07e-01  3.33e+00;]

rational_SOS(P0, 1, 0, M0, Q0)

solve(n, X, P0, Q0, M0, false)
## Total Decomposition
P1 = 30131*X[1]^4//5000 - 3903*X[1]^3*X[2]//12500 - 35819*X[1]^3//10000 + 21069*X[1]^2*X[2]^2//2500 - 15557*X[1]^2*X[2]//2000 + 9333*X[1]^2//500 - 61057*X[1]*X[2]^3//100000 - 3009*X[1]*X[2]^2//625 + 6227*X[1]*X[2]//1000 + 313*X[1]//125 + 11191*X[2]^4//5000 - 6901*X[2]^3//1000 + 194*X[2]^2//25 - 2597*X[2]//500 + 3321//1000
M1 = [1, X[2], X[1], X[2]^2, X[1]*X[2], X[1]^2]
Q1 = [ 3.32e+00 -2.60e+00  1.25e+00  1.99e-01  4.10e-01  7.33e-01;
-2.60e+00  7.36e+00  2.71e+00 -3.45e+00 -2.35e-01 -1.68e+00;
 1.25e+00  2.71e+00  1.72e+01 -2.17e+00 -2.21e+00 -1.79e+00;
 1.99e-01 -3.45e+00 -2.17e+00  2.24e+00 -3.07e-01  6.69e-01;
 4.10e-01 -2.35e-01 -2.21e+00 -3.07e-01  7.09e+00 -1.53e-01;
 7.33e-01 -1.68e+00 -1.79e+00  6.69e-01 -1.53e-01  6.03e+00;]
solve(n, X, P1, Q1, M1, false)
## Multiplier-1
P2 = 3013*X[1]^2//500 - 3029*X[1]*X[2]//10000 + 306*X[1]//125 + 5099*X[2]^2//1000 + 381*X[2]//200 + 1323//200
M2 = [1, X[2], X[1]]
Q2 = [ 6.61e+00  9.53e-01  1.22e+00;
 9.53e-01  5.10e+00 -1.53e-01;
 1.22e+00 -1.53e-01  6.03e+00;]
solve(n, X, P2, Q2, M2, false)
# unsafe
## Multiplier-2
P3 = 619*X[1]^2//250 + 581*X[1]*X[2]//625 + 331*X[1]//200 + 2879*X[2]^2//500 - 1469*X[2]//1000 + 5173//1000
M3 = [1, X[2], X[1]]
Q3 = [ 5.17e+00 -7.34e-01  8.27e-01;
-7.34e-01  5.76e+00  4.64e-01;
 8.27e-01  4.64e-01  2.48e+00;]
solve(n, X, P3, Q3, M3, false)
## Total Decomposition
P4 = 30221*X[1]^4//10000 + 1681*X[1]^3*X[2]//1000 + 79799*X[1]^3//10000 + 6269*X[1]^2*X[2]^2//1000 + 12237*X[1]^2*X[2]//2500 - 86983*X[1]^2//100000 + 23117*X[1]*X[2]^3//25000 + 2789*X[1]*X[2]^2//250 - 18457*X[1]*X[2]//10000 - 20231*X[1]//10000 + 57583*X[2]^4//10000 - 7443*X[2]^3//5000 + 3811*X[2]^2//250 - 3031*X[2]//100 + 22487//1000
M4 = [1, X[2], X[1], X[2]^2, X[1]*X[2], X[1]^2]
Q4 = [ 2.25e+01 -1.52e+01 -1.01e+00 -7.98e-01 -1.82e+00 -4.62e+00;
-1.52e+01  1.68e+01  9.04e-01 -7.34e-01  3.73e+00  3.20e+00;
-1.01e+00  9.04e-01  8.40e+00  1.85e+00 -7.56e-01  3.99e+00;
-7.98e-01 -7.34e-01  1.85e+00  5.76e+00  4.64e-01  8.26e-01;
-1.82e+00  3.73e+00 -7.56e-01  4.64e-01  4.63e+00  8.39e-01;
-4.62e+00  3.20e+00  3.99e+00  8.26e-01  8.39e-01  3.02e+00;]
solve(n, X, P4, Q4, M4, false)
## Multiplier-1
P5 = 3023*X[1]^2//1000 + 42*X[1]*X[2]//25 + 4273*X[1]//10000 + 3803*X[2]^2//1000 + 6929*X[2]//10000 + 2137//500
M5 = [1, X[2], X[1]]
Q5 = [ 4.27e+00  3.45e-01  2.16e-01;
 3.45e-01  3.80e+00  8.39e-01;
 2.16e-01  8.39e-01  3.02e+00;]
solve(n, X, P5, Q5, M5, false)
# Lie
## Multiplier-2
P6 = 1497*X[1]^2//500 + 699*X[1]*X[2]//100 - 1401*X[1]//200 + 2801*X[2]^2//500 - 293*X[2]//25 + 786//125
M6 = [1, X[2], X[1]]
Q6 = [ 6.29e+00 -5.86e+00 -3.50e+00;
-5.86e+00  5.61e+00  3.50e+00;
-3.50e+00  3.50e+00  2.99e+00;]
solve(n, X, P6, Q6, M6, false)
## Total Decomposition
P7 = 11919*X[1]^4//1000 + 2817*X[1]^3*X[2]//125 + 2199*X[1]^3//200 + 15281*X[1]^2*X[2]^2//1000 + 12751*X[1]^2*X[2]//5000 + 15179*X[1]^2//1000 + 69913*X[1]*X[2]^3//10000 - 9847*X[1]*X[2]^2//500 + 1981*X[1]*X[2]//40 - 16629*X[1]//500 + 14029*X[2]^4//2500 - 8447*X[2]^3//500 + 7821*X[2]^2//250 - 4529*X[2]//125 + 16867//1000
M7 = [1, X[2], X[1], X[2]^2, X[1]*X[2], X[1]^2]
Q7 = [ 1.69e+01 -1.81e+01 -1.66e+01  2.25e+00  3.17e+00 -3.60e+00;
-1.81e+01  2.68e+01  2.16e+01 -8.45e+00 -5.04e+00  5.89e+00;
-1.66e+01  2.16e+01  2.24e+01 -4.81e+00 -4.62e+00  5.50e+00;
 2.25e+00 -8.45e+00 -4.81e+00  5.61e+00  3.50e+00 -6.14e-01;
 3.17e+00 -5.04e+00 -4.62e+00  3.50e+00  1.65e+01  1.13e+01;
-3.60e+00  5.89e+00  5.50e+00 -6.14e-01  1.13e+01  1.19e+01;]
solve(n, X, P7, Q7, M7, false)
## Multiplier-1
P8 = 1191*X[1]^2//100 + 11259*X[1]*X[2]//500 - 22717*X[1]//1000 + 3069*X[2]^2//250 - 25361*X[2]//1000 + 13223//1000
M8 = [1, X[2], X[1]]
Q8 = [ 1.32e+01 -1.27e+01 -1.14e+01;
-1.27e+01  1.23e+01  1.13e+01;
-1.14e+01  1.13e+01  1.19e+01;]
solve(n, X, P8, Q8, M8, false)

@show SOS_time Newton_time